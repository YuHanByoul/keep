<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    SQL File Name : CommonDaoImpl.xml
    Description : 공통쿼리
-->
<mapper namespace="com.kbrainc.plum.cmm.model.CommonDao">
    
    <!-- 사이트 리스트를 반환한다. -->
    <select id="selectSiteList" parameterType="SiteVo" resultType="SiteVo">
	    /* CommonDao.selectSiteList */
        SELECT 
	        SITEID,   
		    SITE_NM,
            SYS_SE_CD
        FROM TB_CMM_SITE		
		WHERE 
		    USE_YN = 'Y'
	    <if test="siteid != null and siteid != ''">
		    AND SITEID = #{siteid}			
	    </if>
	</select>
    
    <!-- 현재 사용자의 접근가능한 기관목록을 반환한다. -->
    <select id="selectAlowedInstList" parameterType="UserVo" resultType="java.util.Map">
        /* CommonDao.selectAlowedInstList */
        SELECT 
            INSTID,
            INST_NM,
            INST_CD
        FROM 
            TB_CMM_INST
        WHERE 
            USE_YN = 'Y'
        AND APRV_STTS_CD = '2'
        <choose>
            <when test='roleInfo.trgtInstCd == "A"'>
            </when>
            <when test='roleInfo.trgtInstCd == "S"'>
                AND INSTID = #{instid}          
            </when>
            <when test='roleInfo.trgtInstCd == "C"'>
                AND INSTID IN(SELECT INSTID FROM TB_CMM_ROLE_INST WHERE ROLEID = #{roleInfo.roleid})          
            </when>
            <otherwise>
                AND 1 != 1
            </otherwise>
        </choose>
        <if test='roleInfo.trgtRgnCd == "S"'>
            AND INSTID IN(SELECT INSTID FROM TB_CMM_INST WHERE RGN_CD IN(SELECT RGN_CD FROM TB_CMM_ROLE_RGN WHERE ROLEID = #{roleInfo.roleid}))          
        </if>
        ORDER BY INST_NM ASC
    </select>
    
    <!-- 현재 사용자의 접근가능한 사이트목록을 반환한다. -->
    <select id="selectAlowedSiteList" parameterType="java.util.Map" resultType="java.util.Map">
        /* CommonDao.selectAlowedSiteList */
        SELECT 
            S.SITEID,
            S.SITE_NM,
            I.INST_NM
        FROM
            TB_CMM_SITE S LEFT OUTER JOIN TB_CMM_INST I ON S.INSTID = I.INSTID
        WHERE 
            S.USE_YN = 'Y'
        <if test="sysSeCd != null and sysSeCd != ''">
            AND S.SYS_SE_CD = #{sysSeCd}
        </if>
        <choose>
            <when test='user.roleInfo.trgtInstCd == "A"'>
            </when>
            <when test='user.roleInfo.trgtInstCd == "S"'>
                AND S.INSTID = #{user.instid}          
            </when>
            <when test='user.roleInfo.trgtInstCd == "C"'>
                AND S.INSTID IN(SELECT INSTID FROM TB_CMM_ROLE_INST WHERE ROLEID = #{user.roleInfo.roleid})          
            </when>
            <otherwise>
                AND 1 != 1
            </otherwise>
        </choose>
        <if test='user.roleInfo.trgtRgnCd == "S"'>
            AND S.INSTID IN(SELECT INSTID FROM TB_CMM_INST WHERE RGN_CD IN(SELECT RGN_CD FROM TB_CMM_ROLE_RGN WHERE ROLEID = #{user.roleInfo.roleid}))         
        </if>
        ORDER BY S.SITE_NM ASC
    </select>
    
    <!-- 로그인 성공 이력을 저장한다. -->
    <insert id="insertLoginDescription" parameterType="java.util.Map">
        /* CommonDao.insertLoginDescription */    
        INSERT INTO TB_CMM_LGN_DSCTN 
            (USERID, 
             DEVICE_CD, 
             IP, 
             LGN_DT
            )
            VALUES
            (#{userid}, 
             #{deviceCd}, 
             #{ipAddr}, 
             NOW()
            )
    </insert>
    
    <!-- 로그인 실패 횟수를 0으로 수정하고 로그인일시를 수정한다. -->
    <update id="updateUserLgnInfo" parameterType="java.util.Map">
        /* CommonDao.updateUserLgnInfo */
        UPDATE 
            TB_CMM_USER 
        SET 
            LGN_DT = NOW(),
            LGN_FAIL_CNT = 0 
        WHERE USERID = #{userid}
    </update>
    
    <!-- 로그인 실패 이력을 저장한다. -->
    <insert id="insertLoginFailDescription" parameterType="java.util.Map">
        /* CommonDao.insertLoginFailDescription */    
        INSERT INTO TB_CMM_LGN_FAIL_DSCTN 
            (USERID, 
             DEVICE_CD, 
             IP, 
             LGN_DT
            )
            VALUES
            (#{userid}, 
             #{deviceCd}, 
             #{ipAddr}, 
             NOW()
            )
    </insert>
    
    <!-- 로그인 실패 횟수를 1회 증가시킨다. -->
    <update id="updateLgnFailCntPlusOne" parameterType="java.util.Map">
        /* CommonDao.updateLgnFailCntPlusOne */
        UPDATE 
            TB_CMM_USER 
        SET 
            LGN_FAIL_CNT = NVL(LGN_FAIL_CNT,0) + 1 
        WHERE 
            USERID = #{userid}
    </update>
    
    <!-- 계정을 잠근다(비밀번호 5회 초과 사유) -->
    <update id="updateAccountLock" parameterType="java.util.Map">
        /* CommonDao.updateAccountLock */
        UPDATE 
            TB_CMM_USER 
        SET 
            ACNT_LOCK_YN = 'Y', 
            ACNT_LOCK_CD = '101103' 
        WHERE 
            USERID = #{userid} 
        AND LGN_FAIL_CNT >= 5
    </update>
    
    <!-- 전체 지역 목록 조회 -->
    <select id="selectAllRgnList" resultType="java.util.Map">
        <![CDATA[ /* CommonDao.selectAllRgnList */
            SELECT
                A.SIGNGU_CD AS RGN_CD, 
                B.CTPRVN_NM,
                A.SIGNGU_NM,
                A.CTPRVN_CD
            FROM 
                TB_CMM_ADDR_SIGNGU A INNER JOIN TB_CMM_ADDR_CTPRVN B ON A.CTPRVN_CD = B.CTPRVN_CD
            ORDER BY B.ORDR ASC, A.ORDR ASC
        ]]>
    </select>
    <!-- 시도 지역 리스트 호출 -->
    <select id="selectCtprvnList"  resultType="map">
        /* CommonDao.selectCtprvnList */
        SELECT 
           CTPRVN_CD 
           ,CTPRVN_NM  
          FROM 
            TB_CMM_ADDR_CTPRVN
         ORDER BY ORDR ASC
    </select>
    
    <select id="nearbyEnveduFlct" parameterType="java.util.Map" resultType="java.util.Map">
        /* CommonDao.nearbyEnveduFlct */
        SELECT 
            A1.*
        FROM (
            SELECT
                ROW_NUMBER () OVER(ORDER BY DL.ADDR, DL.ORDR, DL.REG_DT) AS RN
                , DL.* 
            FROM (
                SELECT 
                    A.INSTID AS ID
                    , '기관' AS TYPE
                    , A.INST_TYPE_CD AS CATEGORY_CD
                    , B.CD_NM AS CATEGORY_NM
                    , A.INSTID
                    , A.INST_NM AS INST_NM
                    , NULL AS PRGRM_NM
                    , A.TELNO 
                    , A.HMPG AS HMPG 
                    , A.ADDR 
                    , A.ADDR_DTL 
                    , A.ADDR_LAT 
                    , A.ADDR_LOT 
                    , NULL AS EDU_NOPE
                    , NULL AS PRGRM_TRGT
                    , NULL AS PRGRM_SJCT
                    , 1 AS ORDR
                    , A.REG_DT 
                FROM TB_CMM_INST A
                    LEFT JOIN TB_CMM_CD B ON A.INST_TYPE_CD = B.CD 
                WHERE A.USE_YN = 'Y'
                    AND A.APRV_STTS_CD = 2
                UNION ALL 
                SELECT 
                    C.FCLTID AS ID
                    , '시설' AS TYPE
                    , NULL AS CATEGORY_CD
                    , NULL AS CATEGORY_NM
                    , NULL AS INSTID 
                    , C.FCLT_NM AS INST_NM
                    , NULL AS PRGRM_NM
                    , NULL AS TELNO 
                    , C.EXTNL_URL AS HMPG 
                    , C.ADDR 
                    , C.ADDR_DTL 
                    , C.ADDR_LAT 
                    , C.ADDR_LOT 
                    , NULL AS EDU_NOPE
                    , NULL AS PRGRM_TRGT
                    , NULL AS PRGRM_SJCT
                    , 2 AS ORDR
                    , C.REG_DT 
                FROM TB_FCL_FCLT C
                WHERE C.USE_YN = 'Y'
                UNION ALL 
                SELECT 
                    D.PRGRMID AS ID
                    , '프로그램' AS TYPE
                    , NULL AS CATEGORY_CD
                    , '유아환경교육' AS CATEGORY_NM
                    , F.INSTID 
                    , E.CLSSRM_NM AS INST_NM 
                    , CONCAT(EDU_YR, '년 ', D.PRGRM_NM) AS PRGRM_NM
                    , NULL AS TELNO 
                    , NULL AS HMPG 
                    , F.ADDR 
                    , F.ADDR_DTL 
                    , F.ADDR_LAT 
                    , F.ADDR_LOT 
                    , D.EDU_NOPE 
                    , GROUP_CONCAT(DISTINCT H.CD_NM ORDER BY H.CD SEPARATOR ', ') AS PRGRM_TRGT
                    , GROUP_CONCAT(DISTINCT J.CD_NM ORDER BY J.CD SEPARATOR ', ') AS PRGRM_SJCT
                    , 3 AS ORDR
                    , D.REG_DT 
                FROM TB_EDU_INFNT_PRGRM D
                    LEFT JOIN TB_EDU_CLSSRM E ON D.CLSSRMID = E.CLSSRMID 
                    LEFT JOIN TB_CMM_INST F ON E.CNSGN_INSTID = F.INSTID 
                    LEFT JOIN TB_EDU_INFNT_PRGRM_TRGT_MAPNG G ON D.PRGRMID = G.PRGRMID 
                    LEFT JOIN TB_CMM_CD H ON G.TRGT_CD = H.CD 
                    LEFT JOIN TB_EDU_INFNT_PRGRM_CLSF_MAPNG I ON D.PRGRMID = I.PRGRMID 
                    LEFT JOIN TB_CMM_CD J ON I.CLSF_CD = J.CD 
                WHERE D.USE_YN = 'Y'
                GROUP BY D.PRGRMID 
                UNION ALL 
                SELECT
                    K.PRGRMID AS ID
                    , '프로그램' AS TYPE
                    , NULL AS CATEGORY_CD
                    , '푸름이 이동환경교실' AS CATEGORY_NM
                    , M.INSTID 
                    , M.INST_NM
                    , K.PRGRM_NM
                    , NULL AS TELNO 
                    , NULL AS HMPG 
                    , M.ADDR 
                    , M.ADDR_DTL 
                    , M.ADDR_LAT 
                    , M.ADDR_LOT 
                    , K.EDU_NOPE 
                    , GROUP_CONCAT(DISTINCT O.CD_NM ORDER BY O.CD SEPARATOR ', ') AS PRGRM_TRGT
                    , GROUP_CONCAT(DISTINCT Q.CD_NM ORDER BY Q.CD SEPARATOR ', ') AS PRGRM_SJCT
                    , 4 AS ORDR
                    , K.REG_DT 
                FROM TB_EDU_MVMN_PRGRM K
                    LEFT JOIN TB_EDU_SAREA L ON K.SAREAID = L.SAREAID 
                    LEFT JOIN TB_CMM_INST M ON L.INSTID = M.INSTID 
                    LEFT JOIN TB_EDU_MVMN_PRGRM_TRGT_MAPNG N ON K.PRGRMID = N.PRGRMID 
                    LEFT JOIN TB_CMM_CD O ON N.TRGT_CD = O.CD 
                    LEFT JOIN TB_EDU_MVMN_PRGRM_CLSF_MAPNG P ON K.PRGRMID = P.PRGRMID 
                    LEFT JOIN TB_CMM_CD Q ON P.CLSF_CD = Q.CD
                WHERE K.USE_YN = 'Y'
                GROUP BY K.PRGRMID 
            ) DL
            WHERE 
                DL.ADDR_LAT IS NOT NULL AND DL.ADDR_LOT IS NOT NULL
                <if test="keyword !=null and keyword != ''">
                    <if test="searchType == 1">
                        AND 
                            CASE
                                WHEN DL.TYPE IN ('기관', '시설') THEN DL.INST_NM LIKE CONCAT('%', #{keyword}, '%')
                                WHEN DL.TYPE IN ('프로그램') THEN DL.PRGRM_NM LIKE CONCAT('%', #{keyword}, '%')
                            END
                    </if>
                    <if test="searchType == 2">
                        AND DL.ADDR LIKE CONCAT('%', #{keyword}, '%')
                    </if>
                </if>
        ) A1
        WHERE 
            A1.RN BETWEEN 1+(#{pagePerCnt} * (#{selectedPage} - 1)) AND 10+(#{pagePerCnt} * (#{selectedPage}-1))
    </select>
    
    
</mapper>
