<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    SQL File Name : MvmnAplyDaoImpl.xml
    Description : 참여신청관리 -> 교육신청관리
-->
<mapper namespace="com.kbrainc.plum.mng.prtpn.mvmnAply.model.MvmnAplyDao">
    
    <!-- 교육신청 관리 게시글 목록 조회 -->
    <select id="selectMvmnAplyList" parameterType="MvmnAplyVo" resultType="MvmnAplyVo">
        /* MvmnAplyDao.selectMvmnAplyList */
        <include refid="PaginationMapper.header"/>
        SELECT Z.PRGRM_SCHDLID
             , Z.EDU_YR AS EDUYR
             , Z.EDU_MM AS EDUMM
             , Z.PRGRMID
             , Z.PRGRM_NM AS PRGRMNM
             , Z.EDU_NOPE
             , Z.SAREAID
             , Z.RCPT_MTHD_NM AS RCPTMTHDNM
             , Z.SAREA_NM AS SAREANM
             , Z.YM
             , SUM(Z.ORG_WTNG_APLY_CNT) WTNG_APLY_CNT
             , SUM(Z.ORG_WTNG_APPRV_CNT) WTNG_APPRV_CNT
             , SUM(Z.ORG_APLY_CMPLT_CNT) APLY_CMPLT_CNT
             , SUM(Z.ORG_CNCL_APLY_CNT) CNCL_APLY_CNT
             , SUM(Z.ORG_DNL_APPRV_CNT) DNL_APPRV_CNT
             , Z.OPER_FOM_CD
             , Z.REG_DT
        FROM (        
                SELECT 
                D.PRGRM_SCHDLID  
                , SUBSTRING_INDEX(C.YM, '-', 1) EDU_YR  
                , CONCAT(REPLACE(SUBSTRING_INDEX(C.YM, '-', -1), '0', ''), '월') EDU_MM
                , C.YM
                , D.PRGRMID
                , CONCAT(E.PRGRM_NM,'(',H.TME_NM,')') PRGRM_NM
                , E.EDU_NOPE
                , C.SAREAID
                , L.CD_NM AS RCPT_MTHD_NM
                , F.SAREA_NM
                , B.TMEID
                , H.TME_NM
                , (SELECT COUNT(T1.STTS_CD) FROM TB_EDU_MVMN_PRGRM_APLY T1 WHERE T1.STTS_CD = '180101' AND T1.APLYID = G.APLYID) ORG_WTNG_APLY_CNT
                , (SELECT COUNT(T2.STTS_CD) FROM TB_EDU_MVMN_PRGRM_APLY T2 WHERE T2.STTS_CD = '180102' AND T2.APLYID = G.APLYID) ORG_WTNG_APPRV_CNT
                , (SELECT COUNT(T3.STTS_CD) FROM TB_EDU_MVMN_PRGRM_APLY T3 WHERE T3.STTS_CD = '180103' AND T3.APLYID = G.APLYID) ORG_APLY_CMPLT_CNT
                , (SELECT COUNT(T4.STTS_CD) FROM TB_EDU_MVMN_PRGRM_APLY T4 WHERE T4.STTS_CD = '180104' AND T4.APLYID = G.APLYID) ORG_CNCL_APLY_CNT
                , (SELECT COUNT(T5.STTS_CD) FROM TB_EDU_MVMN_PRGRM_APLY T5 WHERE T5.STTS_CD = '180105' AND T5.APLYID = G.APLYID) ORG_DNL_APPRV_CNT
                , E.OPER_FOM_CD        
                , C.YM REG_DT
                FROM TB_EDU_MVMN_PRGRM_SCHDL C
                LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_SCHDL_PRGRM D ON D.PRGRM_SCHDLID = C.PRGRM_SCHDLID
                LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME_SCHDL B ON B.PRGRM_SCHDLID = C.PRGRM_SCHDLID  
                LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_APLY_SCHDL G ON G.TME_SCHDLID = B.TME_SCHDLID
                LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME H ON H.TMEID = B.TMEID                 
                LEFT OUTER JOIN TB_EDU_MVMN_PRGRM E ON E.PRGRMID = D.PRGRMID
                LEFT OUTER JOIN TB_EDU_SAREA F ON F.SAREAID = C.SAREAID        
                LEFT OUTER JOIN TB_CMM_CD L ON L.CD = E.RCPT_MTHD_CD     
                WHERE B.TMEID IS NOT NULL
                <if test="searchKeyword != null and searchKeyword != ''">
                AND E.PRGRM_NM LIKE CONCAT('%',#{searchKeyword},'%')
                </if>
                <if test="searchEduYr != null and searchEduYr != ''">
                AND SUBSTRING_INDEX(C.YM, '-', 1) = #{searchEduYr}
                </if>
                <if test="searchSareaId != null and searchSareaId != ''">
                AND C.SAREAID = #{searchSareaId}
                </if>
                <if test="searchClssMm != null and searchClssMm != ''">
                AND SUBSTRING_INDEX(C.YM, '-', -1) = #{searchClssMm}
                </if>
                <if test="searchRcptMthdCd != null and searchRcptMthdCd != ''">
                AND E.RCPT_MTHD_CD = #{searchRcptMthdCd}
                </if>                                
         )Z GROUP BY Z.PRGRM_SCHDLID, Z.YM, Z.PRGRMID, Z.SAREAID                
        <include refid="PaginationMapper.footer"/>        
    </select>

    <!-- 교육신청 관리 게시글 상세목록 조회 -->
    <select id="selectMvmnAplyDetailList" parameterType="MvmnAplyVo" resultType="MvmnAplyVo">
        /* MvmnAplyDao.selectMvmnAplyDetailList */
        <include refid="PaginationMapper.header"/>
        SELECT 
          A.APLYID
        , B.PRGRM_SCHDLID  
        , B.DE
        , C.TME_NM
        , A.REG_DT AS RCPT_DT  
        , A.INSTID
        , E.INST_NM 
        , A.USERID APLY_USERID
        , F.NM APLY_USER_NM
        , B.TME_SCHDLID
        , A.ZIP
        , A.ADDR
        , A.ADDR_DTL
        , A.SIGNGU_CD
        , CONCAT((SELECT TA.CTPRVN_NM FROM TB_CMM_ADDR_CTPRVN TA WHERE TA.CTPRVN_CD = G.CTPRVN_CD), '  <![CDATA[>]]> ', G.SIGNGU_NM) AS SIGNGU_DESC        
        , A.TELNO
        , F.MOBLPHON
        , A.EML
        , A.EDU_NOPE
        , A.MEMO
        , A.STTS_CD
        , D.CD_NM AS STTS_NM
        , C.PRGRMID
        , A.MDFCN_DT
        , A.MDFRID
        , A.REG_DT
        , A.RGTRID
        , H.OPER_FOM_CD  
        FROM TB_EDU_MVMN_PRGRM_APLY A 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_APLY_SCHDL Z ON Z.APLYID = A.APLYID
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME_SCHDL B ON B.TME_SCHDLID = Z.TME_SCHDLID 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME C ON C.TMEID = B.TMEID
        LEFT OUTER JOIN TB_CMM_CD D ON D.CD = A.STTS_CD
        LEFT OUTER JOIN TB_CMM_INST E ON E.INSTID = A.INSTID 
        LEFT OUTER JOIN TB_CMM_USER F ON F.USERID = A.USERID    
        LEFT OUTER JOIN TB_CMM_ADDR_SIGNGU G ON G.SIGNGU_CD = A.SIGNGU_CD
        LEFT OUTER JOIN tb_edu_mvmn_prgrm H ON C.PRGRMID = H.PRGRMID    
        WHERE B.PRGRM_SCHDLID = #{prgrmSchdlid}
            <!-- 신청상태  -->
            <if test="searchSttsCd  != null and searchSttsCd != ''">
                AND A.STTS_CD = #{searchSttsCd}
            </if>                    
            <!-- 키워드.전체 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == ''">
                AND (E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%') OR A.USERID LIKE CONCAT('%',#{searchKeyword},'%') OR F.NM LIKE CONCAT('%',#{searchKeyword},'%') OR F.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%'))
            </if>
            <!-- 키워드.기관명 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchInstNm'">
                AND E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.신청자ID -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserId'">
                AND F.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.신청자명 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserNm'">
                AND F.NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.휴대폰번호 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchTelNo'">
                AND F.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%')
            </if>     
            <!-- 교육일 검색시작일  -->
            <if test="searchEduBgngDt != null and searchEduBgngDt != ''">
            AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[>=]]> #{searchEduBgngDt}
            </if>
            <!-- 교육일 검색종료일  -->
            <if test="searchEduEndDt != null and searchEduEndDt != ''">
            AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[<]]> CAST(CONCAT(#{searchEduEndDt},' 23:59:59') AS DATETIME)
            </if>            
            <!-- 접수일 검색시작일  -->
            <if test="searchBgngDt != null and searchBgngDt != ''">
            AND A.REG_DT <![CDATA[>=]]> #{searchBgngDt}
            </if>
            <!-- 접수일 검색종료일  -->
            <if test="searchEndDt != null and searchEndDt != ''">
            AND A.REG_DT <![CDATA[<]]> CAST(CONCAT(#{searchEndDt},' 23:59:59') AS DATETIME)
            </if>
            <!-- 신청지역 검색  -->
            <if test="searchSigngu != null and searchSigngu != ''">
            AND A.SIGNGU_CD = ${searchSigngu}
            </if>
        GROUP BY A.APLYID    
        <include refid="PaginationMapper.footer"/>        
    </select>

    <!-- 교육신청관리 게시글 신청마감 리스트 조회 -->
    <select id="selectMvmnAplyCloseList" parameterType="MvmnAplyVo" resultType="MvmnAplyVo">
        /* MvmnAplyDao.selectMvmnAplyCloseList */
        <include refid="PaginationMapper.header"/>
        SELECT 
          A.TMEID
        , A.TME_NM
        , B.DE  
        , CASE WHEN USE_YN = 'Y' THEN CASE WHEN NOW() BETWEEN DATE_FORMAT(STR_TO_DATE(CONCAT(B.DE,' ', A.BGNG_TM), '%Y.%m.%d %H:%i:%s'),'%Y-%m-%d %H:%i:%s') AND DATE_FORMAT(STR_TO_DATE(CONCAT(B.DE,' ', A.END_TM), '%Y.%m.%d %H:%i:%s'),'%Y-%m-%d %H:%i:%s') THEN '174102' ELSE '174103' END ELSE '174103' END RCPT_CD
        , A.REG_DT 
        FROM TB_EDU_MVMN_PRGRM_TME A 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME_SCHDL B ON B.TMEID = A.TMEID 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_SCHDL C ON C.PRGRM_SCHDLID = B.PRGRM_SCHDLID 
        WHERE 1=1
        AND NOW() >= DATE_FORMAT(STR_TO_DATE(CONCAT(B.DE,' ', A.BGNG_TM), '%Y.%m.%d %H:%i:%s'),'%Y-%m-%d %H:%i:%s')
        AND SUBSTRING_INDEX(C.YM, '-', 1) = #{eduYr}
        AND C.SAREAID = #{sareaId}
        AND A.PRGRMID = #{prgrmId}
        AND SUBSTRING_INDEX(C.YM, '-', -1) = SUBSTRING_INDEX(#{ym}, '-', -1)
        <include refid="PaginationMapper.footer"/>        
    </select>

    <!-- 교육신청 관리 게시글 상세목록 엑셀 다운로드 -->
    <select id="mvmnAplyExcelDownList" parameterType="MvmnAplyVo" resultType="MvmnAplyVo">
        /* MvmnAplyDao.mvmnAplyExcelDownList */
        SELECT 
          A.APLYID
        , B.PRGRM_SCHDLID  
        , B.DE
        , C.TME_NM
        , A.REG_DT AS RCPT_DT  
        , A.INSTID
        , E.INST_NM 
        , A.USERID APLY_USERID
        , F.NM APLY_USER_NM
        , B.TME_SCHDLID
        , A.ZIP
        , A.ADDR
        , A.ADDR_DTL
        , A.SIGNGU_CD
        , CONCAT((SELECT TA.CTPRVN_NM FROM TB_CMM_ADDR_CTPRVN TA WHERE TA.CTPRVN_CD = G.CTPRVN_CD), '  <![CDATA[>]]> ', G.SIGNGU_NM) AS SIGNGU_DESC
        , A.TELNO
        , F.MOBLPHON
        , A.EML
        , A.EDU_NOPE
        , A.MEMO
        , A.STTS_CD
        , D.CD_NM AS STTS_NM
        , A.MDFCN_DT
        , A.MDFRID
        , A.REG_DT
        , A.RGTRID  
        FROM TB_EDU_MVMN_PRGRM_APLY A 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_APLY_SCHDL Z ON Z.APLYID = A.APLYID
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME_SCHDL B ON B.TME_SCHDLID = Z.TME_SCHDLID 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME C ON C.TMEID = B.TMEID
        LEFT OUTER JOIN TB_CMM_CD D ON D.CD = A.STTS_CD
        LEFT OUTER JOIN TB_CMM_INST E ON E.INSTID = A.INSTID 
        LEFT OUTER JOIN TB_CMM_USER F ON F.USERID = A.USERID  
        LEFT OUTER JOIN TB_CMM_ADDR_SIGNGU G ON G.SIGNGU_CD = A.SIGNGU_CD    
        WHERE B.PRGRM_SCHDLID = #{prgrmSchdlid}
        <!-- 키워드.전체 -->
        <if test="searchKeyword != null and searchKeyword != '' and searchType == ''">
            AND (E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%') OR A.USERID LIKE CONCAT('%',#{searchKeyword},'%') OR F.NM LIKE CONCAT('%',#{searchKeyword},'%') OR F.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%'))
        </if>
        <!-- 키워드.기관명 -->
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchInstNm'">
            AND E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%')
        </if>        
        <!-- 키워드.신청자ID -->
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserId'">
            AND F.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
        </if>        
        <!-- 키워드.신청자명 -->
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserNm'">
            AND F.NM LIKE CONCAT('%',#{searchKeyword},'%')
        </if>        
        <!-- 키워드.휴대폰번호 -->
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchTelNo'">
            AND F.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%')
        </if>     
        <!-- 교육일 검색시작일  -->
        <if test="searchStartDeDt != null and searchStartDeDt != ''">
        AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[>=]]> #{searchStartDeDt}
        </if>
        <!-- 교육일 검색종료일  -->
        <if test="searchEndDeDt != null and searchEndDeDt != ''">
        AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[<]]> CAST(CONCAT(#{searchEndDeDt},' 23:59:59') AS DATETIME)
        </if>            
        <!-- 접수일 검색시작일  -->
        <if test="searchStartRcptDt != null and searchStartRcptDt != ''">
        AND A.REG_DT <![CDATA[>=]]> #{searchStartRcptDt}
        </if>
        <!-- 접수일 검색종료일  -->
        <if test="searchEndRcptDt != null and searchEndRcptDt != ''">
        AND A.REG_DT <![CDATA[<]]> CAST(CONCAT(#{searchEndRcptDt},' 23:59:59') AS DATETIME)
        </if>            
    </select>
    
    <!-- 교육신청 관리 게시글 등록 --> 
    <insert id="insertMvmnAply" parameterType="MvmnAplyVo" useGeneratedKeys="true" keyProperty="aplyId">
        /* MvmnAplyDao.insertMvmnAply */
        INSERT INTO TB_EDU_MVMN_PRGRM_APLY (
            INSTID
            , USERID
            , ZIP
            , ADDR
            , ADDR_DTL
            , SIGNGU_CD
            , TELNO
            , FXNO
            , EML
            , EDU_NOPE
            , HOPE_EDU_BGNG_TM
            , HOPE_EDU_END_TM
            , RMRK
            , MEMO
            , STTS_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        )VALUES (
            #{instid}
            ,#{aplyUserid}
            ,#{zip}
            ,#{addr}
            ,#{addrDtl}
            ,#{signguCd}
            ,#{telno}
            ,#{fxno}
            ,#{eml}
            ,#{eduNope}
            ,#{hopeEduBgngTm}
            ,#{hopeEduEndTm}
            ,#{rmrk}
            ,#{memo}
            ,#{sttsCd}    
            ,NOW()
            ,#{user.userid}
            ,NOW()
            ,#{user.userid}
        )    
    </insert>
        
    <!-- 교육신청 관리 상세조회 -->
    <select id="selectMvmnAplyInfo" parameterType="MvmnAplyVo" resultType="MvmnAplyVo"> 
        /* MvmnAplyDao.selectMvmnAplyInfo */
        SELECT 
          A.APLYID
        , B.TME_SCHDLID  
        , B.DE
        , C.TMEID
        , C.TME_NM
        , A.REG_DT AS RCPT_DT  
        , A.INSTID
        , E.INST_NM 
        , A.USERID APLY_USERID
        , F.NM APLY_USER_NM
        , A.ZIP
        , A.ADDR
        , A.ADDR_DTL
        , A.SIGNGU_CD
        , G.CTPRVN_CD
        , CONCAT((SELECT TA.CTPRVN_NM FROM TB_CMM_ADDR_CTPRVN TA WHERE TA.CTPRVN_CD = G.CTPRVN_CD), '  <![CDATA[>]]> ', G.SIGNGU_NM) AS SIGNGU_DESC
        , A.TELNO
        , A.FXNO
        , F.MOBLPHON
        , A.EML
        , A.EDU_NOPE
        , A.HOPE_EDU_BGNG_TM
        , A.HOPE_EDU_END_TM
        , A.MEMO
        , A.RMRK
        , A.STTS_CD
        , D.CD_NM AS STTS_NM
        ,(SELECT GROUP_CONCAT(EDU_TRGT_CD SEPARATOR',') FROM TB_EDU_MVMN_PRGRM_APLY_EDU_TRGT  WHERE APLYID = #{aplyId} ) AS TRGT_CD
        , A.MDFCN_DT
        , A.MDFRID
        , A.REG_DT
        , A.RGTRID  
        , C.PRGRMID
        , H.EDU_YR
        , H.PRGRM_NM
        , I.SAREAID
        FROM TB_EDU_MVMN_PRGRM_APLY A 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_APLY_SCHDL Z ON Z.APLYID = A.APLYID
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME_SCHDL B ON B.TME_SCHDLID = Z.TME_SCHDLID 
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_TME C ON C.TMEID = B.TMEID
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM H ON C.PRGRMID = H.PRGRMID
        LEFT OUTER JOIN TB_EDU_MVMN_PRGRM_SCHDL I ON B.PRGRM_SCHDLID = I.PRGRM_SCHDLID
        LEFT OUTER JOIN TB_CMM_CD D ON D.CD = A.STTS_CD
        LEFT OUTER JOIN TB_CMM_INST E ON E.INSTID = A.INSTID 
        LEFT OUTER JOIN TB_CMM_USER F ON F.USERID = A.USERID   
        LEFT OUTER JOIN TB_CMM_ADDR_SIGNGU G ON G.SIGNGU_CD = A.SIGNGU_CD  
        WHERE A.APLYID = #{aplyId}
        GROUP BY A.APLYID
    </select>
    
    <!-- 교육신청 관리 상세조회 -->
    <select id="selectMvmnAplyInsertInfo" parameterType="MvmnAplyVo" resultType="MvmnAplyVo"> 
        /* MvmnAplyDao.selectMvmnAplyInfo */
        SELECT
            A.PRGRMID
          , A.EDU_YR
          , A.PRGRM_NM
          , B.SAREAID
          , B.SAREA_NM
          , A.OPER_FOM_CD
        FROM
            TB_EDU_MVMN_PRGRM A
                LEFT OUTER JOIN TB_EDU_SAREA B ON A.SAREAID = B.SAREAID
        WHERE
              1 = 1
          AND PRGRMID = #{prgrmId}
    </select>
    
    <!-- 교육신청 관리 상세조회 -->
    <select id="selectEduYear" parameterType="MvmnAplyVo" resultType="MvmnAplyVo"> 
        /* MvmnAplyDao.selectMvmnAplyInfo */
        SELECT
            A.EDU_YR
        FROM
            TB_EDU_MVMN_PRGRM A
        GROUP BY EDU_YR            
    </select>    
    
    <!-- 교육신청관리 게시글 수정 -->
    <update id="updateMvmnAply" parameterType="MvmnAplyVo" keyProperty="MvmnAplyVo">
        /* MvmnAplyDao.updateMvmnAply */
        UPDATE TB_EDU_MVMN_PRGRM_APLY SET
                INSTID                      = #{instid}
                , USERID                    = #{aplyUserid}
                , ZIP                       = #{zip}
                , ADDR                      = #{addr}
                , ADDR_DTL                  = #{addrDtl}
                , TELNO                     = #{telno}
                , FXNO                      = #{fxno}
                , EML                       = #{eml}
                , EDU_NOPE                  = #{eduNope}
                , HOPE_EDU_BGNG_TM          = #{hopeEduBgngTm}
                , HOPE_EDU_END_TM           = #{hopeEduEndTm}
                , RMRK                      = #{rmrk}
                , SIGNGU_CD                 = #{signguCd}
                , MEMO                      = #{memo}
                , STTS_CD                   = #{sttsCd}
                , MDFCN_DT                  = NOW()
                , MDFRID                    = #{user.userid}
         WHERE APLYID                       = #{aplyId}
    </update>    
    
    <!-- 교육신청관리 교육신청자 신청상태 수정 기능 -->
    <update id="updateSttsCdMvmnAply" parameterType="MvmnAplyVo" keyProperty="MvmnAplyVo">
        /* MvmnAplyDao.updateSttsCdMvmnAply */
        UPDATE TB_EDU_MVMN_PRGRM_APLY SET
                STTS_CD                    = #{sttsCd}
                , MDFCN_DT                 = NOW()
                , MDFRID                   = #{user.userid}
         WHERE APLYID                      = #{aplyId}
    </update>    

    <!-- 교육신청관리 신청마감 수정 기능 -->
    <update id="updateMvmnAplyClose" parameterType="MvmnAplyVo" keyProperty="MvmnAplyVo">
        /* MvmnAplyDao.updateMvmnAplyClose */
        UPDATE TB_EDU_MVMN_PRGRM_TME SET
                USE_YN                     = #{useYn}
                , MDFCN_DT                 = NOW()
                , MDFRID                   = #{user.userid}
         WHERE TMEID                      = #{tmeId}
    </update>    
    
    <!-- 교육대상 저장 -->
    <insert id="insertTrgtCd" parameterType="MvmnAplyVo" >
         /* MvmnAplyDao.insertTrgtCd */
         INSERT INTO TB_EDU_MVMN_PRGRM_APLY_EDU_TRGT(
              APLYID
              ,EDU_TRGT_CD
              ,MDFCN_DT
              ,MDFRID
              ,REG_DT
              ,RGTRID
         )VALUES
          <foreach item="item" collection="trgtCds"  separator=",">
           (
             #{aplyId}
             ,#{item}
             ,NOW()
             ,#{user.userid}
             ,NOW()
             ,#{user.userid}             
            )
          </foreach>
    </insert>
    
    <!-- 교육대상 삭제 -->
    <insert id="deleteTrgtCd" parameterType="MvmnAplyVo" >
         /* MvmnAplyDao.deleteTrgtCd */
         DELETE FROM TB_EDU_MVMN_PRGRM_APLY_EDU_TRGT
         WHERE 1=1
           AND APLYID = #{aplyId}
    </insert>   
        
    <!-- 교육신청 관리 회차 목록 조회(일일교육) -->
    <select id="selectDailyTmeSchdlList" parameterType="MvmnAplyVo" resultType="MvmnAplyVo">
        /* MvmnAplyDao.selectTmeSchdlList */
        SELECT 
            GROUP_CONCAT(REPLACE(A.DE, '.', '-') ORDER BY A.DE SEPARATOR ', ') DE
            , A.TMEID
            , A.TME_SCHDLID
            , B.TME_NM    
            , B.PRGRMID    
        FROM 
            TB_EDU_MVMN_PRGRM_TME_SCHDL A
        LEFT OUTER JOIN 
            TB_EDU_MVMN_PRGRM_TME B ON (B.TMEID = A.TMEID)
        WHERE
            1 = 1 
            AND B.PRGRMID = #{prgrmId}
        GROUP BY A.TMEID            
        ORDER BY 
            A.TMEID
    </select>
    
    <!-- 교육신청 관리 회차 목록 조회(지속교육) -->
    <select id="selectTmeSchdlList" parameterType="MvmnAplyVo" resultType="MvmnAplyVo">
        /* MvmnAplyDao.selectTmeSchdlList */
        SELECT 
            REPLACE(A.DE, '.', '-') DE
            , A.TMEID
            , A.TME_SCHDLID
            , B.TME_NM    
            , B.PRGRMID    
        FROM 
            TB_EDU_MVMN_PRGRM_TME_SCHDL A
        LEFT OUTER JOIN 
            TB_EDU_MVMN_PRGRM_TME B ON (B.TMEID = A.TMEID)
        WHERE
            1 = 1
            AND A.PRGRM_SCHDLID = #{prgrmSchdlid} 
            AND B.PRGRMID = #{prgrmId}
        ORDER BY 
            A.DE, B.ORDR 
    </select>
               
    <!-- 회원정보 조회 -->
    <select id="selectMemberList" parameterType="MvmnAplyVo" resultType="MvmnAplyVo">
        /* MvmnAplyDao.selectMemberList */
        <include refid="PaginationMapper.header"/>
            SELECT
                A.*
            FROM (
                SELECT
                    A.USERID AS APLY_USER_ID
                    , A.ACNT
                    , IFNULL(A.NM, '-') AS APLY_USER_NM
                    , A.EML
                    , A.INSTID
                    , A.STTS_CD
                    , C.INST_NM
                    , C.ADDR
                    , C.ADDR_DTL
                    , C.TELNO
                    , A.MOBLPHON
                    , A.MDFCN_DT
                    , A.REG_DT
                    , CASE WHEN IFNULL(B.ROLECD,'U') = 'U' AND A.INSTID IS NOT NULL THEN 'C'
                      WHEN IFNULL(B.ROLECD,'U') = 'U' AND A.INSTID IS NULL THEN 'U'
                      ELSE B.ROLECD END AS ROLECD
                FROM
                    TB_CMM_USER A
                LEFT OUTER JOIN (
                    SELECT
                        A.USERID
                        ,CASE WHEN INSTR(GROUP_CONCAT(A.ROLEID),'1') > 0 OR INSTR(GROUP_CONCAT(A.ROLEID),'5') > 0 THEN 'A'
                    ELSE 'U' END AS ROLECD
                    FROM
                        TB_CMM_ROLE_USER A
                        , TB_CMM_ROLE B
                    WHERE 
                        1 = 1
                    AND A.ROLEID = B.ROLEID
                    GROUP BY 
                        USERID
                ) B ON (A.USERID = B.USERID)
                LEFT OUTER JOIN
                    TB_CMM_INST C ON (C.INSTID = A.INSTID)
            ) A
            WHERE 1 = 1
            AND A.ROLECD = 'C'
            AND A.STTS_CD = '1' 
            <if test="instid != null and instid != '' ">                     
            AND (A.INSTID IS NULL OR A.INSTID <![CDATA[<>]]> #{instid})  
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'nm'">
            AND A.APLY_USER_NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'acnt'">
            AND A.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'moblphon'">
            AND A.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'eml'">
            AND A.EML LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <include refid="PaginationMapper.footer"/>
    </select>  
    
    <insert id="insertMvmnAplySchdl" parameterType="MvmnAplyVo">
        /* MvmnAplyDao.insertMvmnAplySchdl */
         INSERT INTO TB_EDU_MVMN_PRGRM_APLY_SCHDL(
              APLYID
              ,TME_SCHDLID
              ,REG_DT
              ,RGTRID
         )VALUES(
             #{aplyId}
             ,#{tmeSchdlid}
             ,NOW()
             ,#{user.userid}
         )
    </insert>          
    
    <insert id="updateMvmnAplySchdl" parameterType="MvmnAplyVo">
        /* MvmnAplyDao.updateMvmnAplySchdl */
        UPDATE TB_EDU_MVMN_PRGRM_APLY_SCHDL SET
            TME_SCHDLID = #{tmeSchdlid}
        WHERE
            APLYID = #{aplyId}
    </insert>
</mapper>