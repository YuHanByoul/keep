<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : ReqMngDaoImpl.xml
	Description : 체험환경교육 지원사업 > 사업신청 관리 > 신청관리
-->
<mapper namespace="com.kbrainc.plum.mng.bizAply.req.model.ReqMngDao">
    
    <!-- 신청관리 목록 검색 조건 -->
    <sql id="reqMngSearchCondition">
        <if test="searchFldCd != null and searchFldCd != ''">
        AND FLD_CD = #{searchFldCd}
        </if>
        <if test="searchPcntstNm != null and searchPcntstNm != ''">
        AND PCNTST_NM LIKE CONCAT('%',#{searchPcntstNm},'%')
        </if>
        <if test="searchAplyBgngDe != null and searchAplyBgngDe != ''">
        <![CDATA[
        AND (#{searchAplyBgngDe} BETWEEN DATE_FORMAT(APLY_BGNG_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(APLY_END_DT, '%Y-%m-%d') 
        OR #{searchAplyEndDe} BETWEEN DATE_FORMAT(APLY_BGNG_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(APLY_END_DT, '%Y-%m-%d'))
        ]]>
        </if>
        <if test="searchSrngBgngDe != null and searchSrngBgngDe != ''">
        <![CDATA[
        AND (#{searchSrngBgngDe} BETWEEN SRNG_BGNG_DT AND SRNG_END_DT
        OR #{searchSrngEndDe} BETWEEN SRNG_BGNG_DT AND SRNG_END_DT)
        ]]>
        </if>
        <if test="searchAplyStts != null and searchAplyStts != ''">
            <choose>
                <when test="searchAplyStts == 'before'">
                <![CDATA[
                AND NOW() < APLY_BGNG_DT
                ]]>
                </when>
                <when test="searchAplyStts == 'ing'">
                <![CDATA[
                AND NOW() >= APLY_BGNG_DT AND NOW() <= APLY_END_DT
                ]]>
                </when>
                <when test="searchAplyStts == 'end'">
                <![CDATA[
                AND NOW() > APLY_END_DT
                ]]>
                </when>
            </choose>            
        </if>
<!--         <if test="searchSrngStts != null and searchSrngStts != ''"> -->
<!--             <choose> -->
<!--                 <when test="searchSrngStts == 'before'"> -->
<!--                 <![CDATA[ -->
<!--                 AND NOW() < SRNG_BGNG_DT -->
<!--                 ]]> -->
<!--                 </when> -->
<!--                 <when test="searchSrngStts == 'ing'"> -->
<!--                 <![CDATA[ -->
<!--                 AND NOW() >= SRNG_BGNG_DT AND NOW() <= SRNG_END_DT -->
<!--                 ]]> -->
<!--                 </when> -->
<!--                 <when test="searchSrngStts == 'end'"> -->
<!--                 <![CDATA[ -->
<!--                 AND NOW() > SRNG_END_DT -->
<!--                 ]]> -->
<!--                 </when> -->
<!--             </choose>             -->
<!--         </if> -->
    </sql>
    
    <!-- 신청관리 목록 조회 -->
    <select id="selectReqMngList" parameterType="ReqMngVo" resultType="ReqMngVo">
        /* ReqMngDao.selectReqMngList */
        <if test="excelYn != 'Y'.toString()">
            <include refid="PaginationMapper.header"/>
        </if>
        <![CDATA[
        WITH CNT_FIRST AS (
            SELECT 
                PCNTSTID
                , CYCL
                , SUM(APLYNO_CNT) AS APLYNO_CNT
                , SUM(SRNG_CNT) AS SRNG_CNT
                , SUM(SLCTN_Y_CNT) AS SLCTN_Y_CNT
                , SUM(SLCTN_N_CNT) AS SLCTN_N_CNT
            FROM (
                SELECT 
                    TSP.PCNTSTID
                    , TSJ.CYCL
                    , COUNT(DISTINCT TSA.APLYID) AS APLYNO_CNT   -- 곰오의 신청자 수
                    , CASE WHEN COUNT(TSJ.JDGSID) = COUNT(TSSS.APLYID) THEN 1 ELSE 0 END AS SRNG_CNT    -- 신청자 별 전체 심사위원의 심사건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193102' THEN 1 ELSE 0 END AS SLCTN_Y_CNT   -- 선정 건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193103' THEN 1 ELSE 0 END AS SLCTN_N_CNT   -- 선정탈락 건수
                FROM TB_SPB_PCNTST TSP 
                    INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID
                    INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                    LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = TSP.SRNG_FORMID_FIRST AND TSSS.SBMSN_DT IS NOT NULL 
                WHERE 1 = 1
                AND TSJ.CYCL = 1
                GROUP BY TSP.PCNTSTID
                    , TSJ.CYCL
                    , TSA.APLYID
            ) T
            GROUP BY PCNTSTID
                , CYCL
        ), CNT_SECOND AS (
            SELECT 
                PCNTSTID
                , CYCL
                , SUM(APLYNO_CNT) AS APLYNO_CNT
                , SUM(SRNG_CNT) AS SRNG_CNT
                , SUM(SLCTN_Y_CNT) AS SLCTN_Y_CNT
                , SUM(SLCTN_N_CNT) AS SLCTN_N_CNT
            FROM (
                SELECT 
                    TSP.PCNTSTID
                    , TSJ.CYCL
                    , COUNT(DISTINCT TSA.APLYID) AS APLYNO_CNT   -- 곰오의 신청자 수
                    , CASE WHEN COUNT(TSJ.JDGSID) = COUNT(TSSS.APLYID) THEN 1 ELSE 0 END AS SRNG_CNT    -- 신청자 별 전체 심사위원의 심사건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193102' THEN 1 ELSE 0 END AS SLCTN_Y_CNT   -- 선정 건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193103' THEN 1 ELSE 0 END AS SLCTN_N_CNT   -- 선정탈락 건수
                FROM TB_SPB_PCNTST TSP 
                    INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID AND TSA.SCND_SRNG_TRGT_YN = 'Y'
                    INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                    LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = TSP.SRNG_FORMID_SCND AND TSSS.SBMSN_DT IS NOT NULL 
                WHERE 1 = 1
                AND TSJ.CYCL = 2
                GROUP BY TSP.PCNTSTID
                    , TSJ.CYCL
                    , TSA.APLYID
            ) T
            GROUP BY PCNTSTID
                , CYCL
        )
        SELECT T.*
        FROM (
            SELECT DISTINCT 
                TSP.PCNTSTID
                , FLD_CD
                , TCCA.CD_NM AS FLD_NM
                , TSP.PCNTST_NM
                , CASE WHEN NOW() < APLY_BGNG_DT THEN '신청전' 
                            WHEN NOW() >= APLY_BGNG_DT AND  NOW() <= APLY_END_DT THEN '신청중'
                            WHEN NOW() > APLY_END_DT THEN '신청완료'
                            ELSE ''
                            END AS APLY_STTS_NM
                , CASE WHEN NOW() < SRNG_BGNG_DT THEN '심사전'                
                    WHEN NOW() > SRNG_END_DT OR (FRST.SRNG_CNT = FRST.APLYNO_CNT AND IFNULL(SCND.SRNG_CNT, 0) = IFNULL(SCND.APLYNO_CNT, 0)) THEN '심사완료'
                    WHEN NOW() >= SRNG_BGNG_DT AND  NOW() <= SRNG_END_DT THEN '심사중'
                    ELSE ''
                    END AS SRNG_STTS_NM
                , CONCAT(DATE_FORMAT(TSP.APLY_BGNG_DT, '%Y-%m-%d'), ' - ', DATE_FORMAT(TSP.APLY_END_DT, '%Y-%m-%d')) AS APLY_DT
                , CONCAT(DATE_FORMAT(TSP.SRNG_BGNG_DT, '%Y-%m-%d'), ' - ', DATE_FORMAT(TSP.SRNG_END_DT, '%Y-%m-%d')) AS SRNG_DT
                , FRST.APLYNO_CNT
                , CONCAT(FRST.SRNG_CNT, ' / ', FRST.APLYNO_CNT) AS FRT_SRNG_CNT
                , IF(TSP.ONLN_SRNG_TYPE_CD = '177101', '-', CONCAT(IFNULL(SCND.SRNG_CNT, 0), ' / ', IFNULL(SCND.APLYNO_CNT, 0))) AS SCD_SRNG_CNT
                , TSP.SRNG_FORMID_FIRST
                , TSP.SRNG_FORMID_SCND
                , TSP.ONLN_SRNG_TYPE_CD
                , TCCB.CD_NM AS ONLN_SRNG_TYPE_NM
                , IFNULL(IF(TSP.ONLN_SRNG_TYPE_CD = '177101', FRST.SLCTN_Y_CNT, SCND.SLCTN_Y_CNT), 0) AS SLCTN_Y_CNT
                , IFNULL(IF(TSP.ONLN_SRNG_TYPE_CD = '177101', FRST.SLCTN_N_CNT, FRST.SLCTN_N_CNT+SCND.SLCTN_N_CNT), 0) AS SLCTN_N_CNT
                , MIN(SRNG_END_YN) OVER (PARTITION BY TSP.PCNTSTID) AS SRNG_END_YN
                , MIN(SCND_SRNG_END_YN) OVER (PARTITION BY TSP.PCNTSTID) AS SCND_SRNG_END_YN
                , TSP.REG_DT
                , TSP.MDFCN_DT
                , APLY_BGNG_DT
                , APLY_END_DT
                , DATE_FORMAT(SRNG_BGNG_DT, '%Y-%m-%d') AS SRNG_BGNG_DT
                , DATE_FORMAT(SRNG_END_DT, '%Y-%m-%d') AS SRNG_END_DT
            FROM
                TB_SPB_PCNTST TSP 
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID
                LEFT OUTER JOIN TB_CMM_CD TCCA ON TSP.FLD_CD = TCCA.CD
                LEFT OUTER JOIN TB_CMM_CD TCCB ON TSP.ONLN_SRNG_TYPE_CD = TCCB.CD
                INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                LEFT OUTER JOIN CNT_FIRST FRST ON FRST.PCNTSTID = TSP.PCNTSTID
                LEFT OUTER JOIN CNT_SECOND SCND ON SCND.PCNTSTID = TSP.PCNTSTID
            WHERE 1 = 1
        ]]>
            <if test="pcntstid != null and pcntstid != ''">
            AND TSP.PCNTSTID = #{pcntstid}
            </if>
            <if test="jdgsid != null and jdgsid != ''">
            AND TSJ.JDGSID = #{jdgsid}
            </if>
        ) T
        WHERE 1 = 1
            <include refid="reqMngSearchCondition"/>
        <if test="searchSrngStts != null and searchSrngStts != ''">
            <choose>
                <when test="searchSrngStts == 'before'">
                AND SRNG_STTS_NM = '심사전'
                </when>
                <when test="searchSrngStts == 'ing'">
                AND SRNG_STTS_NM = '심사중'
                </when>
                <when test="searchSrngStts == 'end'">
                AND SRNG_STTS_NM = '심사완료'
                </when>
            </choose>            
        </if>
        <if test="excelYn != 'Y'.toString()">
            <include refid="PaginationMapper.footer"/>
        </if>
    </select>
    
    <!-- 신청자 목록 조회 -->
    <select id="selectReqUserList" parameterType="ReqUserVo" resultType="ReqUserVo">
        /* ReqMngDao.selectReqUserList */
        <if test="excelYn != 'Y'.toString()">
            <include refid="PaginationMapper.header"/>
        </if>
        <![CDATA[
        WITH CNT_FIRST AS (
            SELECT 
                TSP.PCNTSTID
                , TSJ.CYCL
                , TSA.APLYID
                , CASE WHEN COUNT(TSJ.JDGSID) = COUNT(TSSS.APLYID) THEN 1 ELSE 0 END AS SRNG_CNT
            FROM TB_SPB_PCNTST TSP 
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID
                INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = TSP.SRNG_FORMID_FIRST AND TSSS.SBMSN_DT IS NOT NULL 
            WHERE 1 = 1
            AND TSJ.CYCL = 1
            GROUP BY TSP.PCNTSTID
                , TSJ.CYCL
                , TSA.APLYID
        ), CNT_SECOND AS (
            SELECT 
                TSP.PCNTSTID
                , TSJ.CYCL
                , TSA.APLYID
                , CASE WHEN COUNT(TSJ.JDGSID) = COUNT(TSSS.APLYID) THEN 1 ELSE 0 END AS SRNG_CNT
            FROM TB_SPB_PCNTST TSP 
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID AND TSA.SCND_SRNG_TRGT_YN = 'Y'
                INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = TSP.SRNG_FORMID_SCND AND TSSS.SBMSN_DT IS NOT NULL 
            WHERE 1 = 1
            AND TSJ.CYCL = 2
            GROUP BY TSP.PCNTSTID
                , TSJ.CYCL
                , TSA.APLYID
        )
        SELECT DISTINCT T.* 
        FROM (
            SELECT 
                TSA.PCNTSTID
                , TSP.FLD_CD
                , TSA.APLYID
                , TSA.APLYNO 
                , TSA.APLY_STTS_CD
                , IFNULL(TSAS.CD_NM, TCCA.CD_NM) AS APLY_STTS_NM
                , TSA.INST_NM 
                , CONCAT(U.NM, '(', U.ACNT, ')') AS USER_NM 
                , TCCE.CD_NM AS INST_TYPE_NM
                , REG_NO
                , RPRSV_NM
                , INST_ZIP
                , INST_ADDR
                , INST_ADDR_DTL
                , APLY_INST_TELNO
                , APLCNT_NM
                , APLCNT_TELNO
                , APLCNT_EML
                , TSA.PRGRM_NM 
                , TSA.REG_DE 
                , CASE WHEN NOW() > SRNG_END_DT OR (IF(TSP.ONLN_SRNG_TYPE_CD = '177101', FRST.SRNG_CNT = 1 AND SRNG_END_YN = 'Y', IF(TSA.SCND_SRNG_TRGT_YN = 'Y', FRST.SRNG_CNT = 1 AND SCND.SRNG_CNT = 1 AND SCND_SRNG_END_YN = 'Y', FRST.SRNG_CNT = 1 AND SRNG_END_YN = 'Y')))
                        THEN '심사완료'
                    ELSE '심사전'
                    END AS SRNG_STTS_NM
                , IFNULL(IF(SLCTN_STTS_CD = '193101', '-', TCCB.CD_NM), '-') AS SLCTN_STTS_NM
                , SCND_SRNG_TRGT_YN
                , IFNULL(FIRST_SCR, '-') AS FRST_SCR
                , IFNULL(FIRST_GRD, '-') AS FIRST_GRD
                , IFNULL(FIRST_RKNG, '-') AS FIRST_RKNG
                , IFNULL(IF(TSA.SCND_SRNG_TRGT_YN = 'Y' AND IFNULL(SCND_SRNG_END_YN, 'N') = 'N', '대상취소', SCND_SCR), '-') AS SCND_SCR
                , IFNULL(SCND_GRD, '-') AS SCND_GRD
                , IFNULL(SCND_RKNG, '-') AS SCND_RKNG 
                , SRNG_END_YN
                , SCND_SRNG_END_YN
                , TSA.REG_DT
                , TSA.MDFCN_DT
                , FILEGRPID1
                , FILEGRPID2
                , FILEGRPID3
                , TSP.ONLN_SRNG_TYPE_CD
                , LWET_CRTR_SCR_USE_YN_FIRST
                , LWET_CRTR_SCR_USE_YN_SCND
                , LWET_CRTR_SCR_FIRST
                , LWET_CRTR_SCR_SCND
                , NOPE_LMT_USE_YN
                , NOPE_LMT
                , (SELECT IF(COUNT(1) > 0, 'Y', 'N') FROM TB_SPB_JDGS A WHERE TSP.PCNTSTID = A.PCNTSTID AND A.JDGSID = #{user.userid} AND CYCL = 1) AS FRST_SRNG_YN
                , (SELECT IF(COUNT(1) > 0, 'Y', 'N') FROM TB_SPB_JDGS A WHERE TSP.PCNTSTID = A.PCNTSTID AND A.JDGSID = #{user.userid} AND CYCL = 2) AS SCND_SRNG_YN 
                , TCCC.CD_NM AS INST_SAREA_NM
                , TCCD.CTPRVN_NM AS RGN_NM
                , TCCF.CD_NM AS RELGN_NM
            FROM 
                TB_SPB_PCNTST TSP 
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
                INNER JOIN TB_CMM_USER U ON TSA.USERID = U.USERID 
                LEFT OUTER JOIN (
                    SELECT 
                        SPLMNTID
                        , APLYID 
                        , ANS_STTS_CD
                        , B.CD_NM
                    FROM 
                        TB_SPB_APLY_SPLMNT A
                        LEFT OUTER JOIN TB_CMM_CD B ON A.ANS_STTS_CD = B.CD) TSAS ON TSAS.APLYID = TSA.APLYID 
                        AND SPLMNTID = (SELECT MAX(SPLMNTID) FROM TB_SPB_APLY_SPLMNT TSAS WHERE TSAS.APLYID = TSA.APLYID)
                LEFT OUTER JOIN TB_CMM_CD TCCA ON TSA.APLY_STTS_CD = TCCA.CD
                LEFT OUTER JOIN TB_CMM_CD TCCB ON TSA.SLCTN_STTS_CD = TCCB.CD
                LEFT OUTER JOIN CNT_FIRST FRST ON FRST.PCNTSTID = TSP.PCNTSTID AND FRST.APLYID = TSA.APLYID 
                LEFT OUTER JOIN CNT_SECOND SCND ON SCND.PCNTSTID = TSP.PCNTSTID AND SCND.APLYID = TSA.APLYID 
                LEFT OUTER JOIN TB_CMM_CD TCCC ON TSA.INST_SAREA_CD = TCCC.CD
                LEFT OUTER JOIN TB_CMM_ADDR_CTPRVN TCCD ON TSA.RGN_CD = TCCD.CTPRVN_CD
                LEFT OUTER JOIN TB_CMM_CD TCCE ON TSA.INST_TYPE_CD = TCCE.CD
                LEFT OUTER JOIN TB_CMM_CD TCCF ON TSA.RELGN_CD = TCCF.CD
            WHERE 1 = 1
            ]]>
            AND TSA.PCNTSTID = #{pcntstid}
            <if test="searchAplySttsCd != '' and searchAplySttsCd != null">
            AND APLY_STTS_CD = #{searchAplySttsCd}
            </if>
            <if test="aplyid != '' and aplyid != null">
            AND TSA.APLYID = #{aplyid}
            </if>
            <if test="searchKeywordType != null and searchKeywordType != ''">
                <choose>
                    <when test="searchKeywordType == 'I'.toString()">
                    AND IFNULL(INST_NM, '') LIKE CONCAT('%',#{searchCondition},'%')
                    </when>
                    <otherwise>
    <!--                 AND A.SBJCT_CD LIKE CONCAT('%',#{searchKeyword},'%') -->
                    </otherwise>
                </choose>            
            </if>
            <if test="searchSlctnSttsCd != '' and searchSlctnSttsCd != null">
            AND SLCTN_STTS_CD = #{searchSlctnSttsCd}
            </if>
            <if test="searchRegStartDe != '' and searchRegStartDe != null">
            <![CDATA[
            AND REG_DE >= #{searchRegStartDe} AND REG_DE <= #{searchRegEndDe}
            ]]>
            </if>
        ) T
        WHERE 1 = 1
        <if test="searchSrngStts != null and searchSrngStts != ''">
            <choose>
                <when test="searchSrngStts == 'before'">
                AND SRNG_STTS_NM = '심사전'
                </when>
                <when test="searchSrngStts == 'end'">
                AND SRNG_STTS_NM = '심사완료'
                </when>
            </choose>            
        </if>
        <if test="excelYn != 'Y'.toString()">
            <include refid="PaginationMapper.footer"/>
        </if>
    </select>
    
    <!-- 신청자 상세 정보 조회 -->
    <select id="detailReqUser" parameterType="ReqUserVo" resultType="ReqUserVo">
        /* ReqMngDao.detailReqUser */
        SELECT
            APLYID
            , PCNTSTID
            , APLYNO
            , A.INSTID
            , A.USERID
            , CONCAT(U.NM, '(', U.ACNT, ')') AS USER_NM 
            , A.INST_NM
            , PRGRM_NM
            , RPRSV_NM
            , REG_INST_NM
            , REG_NO
            , REG_DE
            , A.INST_TYPE_CD
            , B.CD_NM AS INST_TYPE_NM
            , ETC_CN
            , INST_TYPE_DTL_CD
            , C.CD_NM AS INST_TYPE_DTL_NM
            , HMPG
            , RELGN_CD
            , D.CD_NM AS RELGN_NM
            , APLCNT_NM
            , APLCNT_TELNO
            , APLCNT_EML
            , APLY_INST_TELNO
            , INST_SAREA_CD
            , E.CD_NM AS INST_SAREA_NM
            , INST_ZIP
            , INST_ADDR
            , CONCAT('우)', INST_ZIP, ' ', INST_ADDR) AS ADDR
            , INST_ADDR_DTL
            , INST_EML
            , RGN_CD
            , F.CD_NM AS RGN_NM
            , LDR_MNG_MTHD
            , FILEGRPID1
            , FILEGRPID2
            , FILEGRPID3
            , APLY_STTS_CD
            , G.CD_NM AS APLY_STTS_NM
            , SLCTN_STTS_CD
            , H.CD_NM AS SLCTN_STTS_NM
<!--             , BSNS_CNCL_YN -->
            , EXCCLC_STTS_CD
            , I.CD_NM AS EXCCLC_STTS_NM
            , BNKB_FILEID
            , EXCCLC_ATCH_FILEGRPID
            , RTURN_YN
            , RTURN_AMT
            , RTURN_DT
            , A.MDFCN_DT
            , A.MDFRID
            , A.REG_DT
            , A.RGTRID 
        FROM
            TB_SPB_APLY A
            INNER JOIN TB_CMM_USER U ON A.USERID = U.USERID 
            LEFT OUTER JOIN TB_CMM_CD B ON A.INST_TYPE_CD = B.CD
            LEFT OUTER JOIN TB_CMM_CD C ON A.INST_TYPE_DTL_CD = C.CD
            LEFT OUTER JOIN TB_CMM_CD D ON A.RELGN_CD = D.CD
            LEFT OUTER JOIN TB_CMM_CD E ON A.INST_SAREA_CD = E.CD
            LEFT OUTER JOIN TB_CMM_CD F ON A.RGN_CD = F.CD
            LEFT OUTER JOIN TB_CMM_CD G ON A.APLY_STTS_CD = G.CD
            LEFT OUTER JOIN TB_CMM_CD H ON A.SLCTN_STTS_CD = H.CD
            LEFT OUTER JOIN TB_CMM_CD I ON A.EXCCLC_STTS_CD = I.CD
        WHERE PCNTSTID = #{pcntstid}
        AND APLYID = #{aplyid}
    </select>
    
    <!-- 담당자 목록 조회 -->
    <select id="selectUserList" parameterType="ReqUserVo" resultType="ReqUserVo">
        /* ReqMngDao.selectUserList */
        <include refid="PaginationMapper.header"/>
        SELECT
            A.USERID
          , A.INSTID
          , A.ACNT
          , A.NM AS USER_NM
          , A.MOBLPHON AS APLCNT_TELNO
          , A.EML AS APLCNT_EML
          , B.INST_NM
          , B.RPRSV_NM 
          , B.TELNO AS APLY_INST_TELNO
          , B.INST_TYPE_CD 
          , B.HMPG 
          , B.BRNO AS REG_NO
          , B.ZIP AS INST_ZIP
          , B.ADDR AS INST_ADDR
          , B.ADDR_DTL AS INST_ADDR_DTL
          , B.RGN_CD 
          , (SELECT COUNT(*) FROM TB_SPB_APLY WHERE PCNTSTID = #{pcntstid} AND A.USERID = USERID) AS APLY_CNT
        FROM
        TB_CMM_USER A
        LEFT OUTER JOIN TB_CMM_INST B ON A.INSTID = B.INSTID
        WHERE 1=1
        <choose>
            <when test="fldCd == '173105' or fldCd == '173106'">
            AND IFNULL(A.INSTID, '') = ''
            </when>
            <otherwise>
            AND IFNULL(A.INSTID, '') != ''
            </otherwise>
        </choose>
        <if test="instid != null and instid != ''">
        AND A.INSTID = #{instid}
        </if>
        <if test="searchCondition != null and searchCondition != ''">
            <if test="searchKeywordType == 'userNm'">
        AND A.NM LIKE CONCAT('%',#{searchCondition},'%')
            </if>
            <if test="searchKeywordType == 'instNm'">
        AND B.INST_NM LIKE CONCAT('%',#{searchCondition},'%')
            </if>
        </if>
        <include refid="PaginationMapper.footer"/>
    </select>
    
    <!-- 선정여부 상태 변경 -->
    <update id="updateSlctnSttsCd" parameterType="java.util.ArrayList">
        /* ReqMngDao.updateSlctnSttsCd */
        UPDATE TB_SPB_APLY SET
        SLCTN_STTS_CD = #{slctnSttsCd}
        WHERE APLYID IN
        <foreach item="item" collection="array" index="aplyids" open="(" close=")" separator=",">
        #{item}
        </foreach>
    </update>
    
    <!-- 신청등록 -->
    <insert id="insertReqInfo" parameterType="ReqUserVo" useGeneratedKeys="true" keyProperty="aplyid">
        /* ReqMngDao.insertReqInfo */
        INSERT INTO TB_SPB_APLY (
            APLYID
            , PCNTSTID
            , APLYNO
            , INSTID
            , USERID
            , INST_NM
            , PRGRM_NM
            , RPRSV_NM
            , REG_NO
            , REG_DE
            , INST_TYPE_CD
            , HMPG
            , RELGN_CD
            , APLCNT_NM
            , APLCNT_TELNO
            , APLCNT_EML
            , APLY_INST_TELNO
            , INST_SAREA_CD
            , INST_ZIP
            , INST_ADDR
            , INST_ADDR_DTL
            , RGN_CD
            , FILEGRPID1
            , FILEGRPID2
            , FILEGRPID3
            , APLY_STTS_CD
            , PRIVCY_AGRE_YN
            , PRVC_THPTY_PVSN_AGRE_YN
            , INST_EML
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{pcntstid}
            , (SELECT CONCAT(DATE_FORMAT(NOW(), '%Y'), '-', LPAD(#{pcntstid}, 2, '0'), '-', LPAD((SELECT COUNT(A.APLYID) FROM TB_SPB_APLY A WHERE A.PCNTSTID = #{pcntstid})+1, 4, '0')))
            , #{instid}
            , #{userid}
            , #{instNm}
            , #{prgrmNm}
            , #{rprsvNm}
            , #{regNo}
            , #{regDe}
            , #{instTypeCd}
            , #{hmpg}
            , #{relgnCd}
            , #{aplcntNm}
            , #{aplcntTelno}
            , #{aplcntEml}
            , #{aplyInstTelno}
            , #{instSareaCd}
            , #{instZip}
            , #{instAddr}
            , #{instAddrDtl}
            , #{rgnCd}
            , #{filegrpid1}
            , #{filegrpid2}
            , #{filegrpid3}
            , #{aplySttsCd}
            , 'Y'
            , 'Y'
            , #{instEml}            
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) 
    </insert>

    <!-- 신청정보 탭 저장 -->
    <update id="updateReqInfo" parameterType="ReqUserVo">
        /* ReqMngDao.updateReqInfo */
        UPDATE
            TB_SPB_APLY
        SET
            PRGRM_NM = #{prgrmNm}
            , REG_DE = #{regDe}
            , RELGN_CD = #{relgnCd}
            <if test="userid != null and userid != ''">
            , USERID = #{userid}
            </if>
            <if test="aplcntNm != null and aplcntNm != ''">
            , APLCNT_NM = #{aplcntNm}
            </if>
            <if test="aplcntTelno != null and aplcntTelno != ''">
            , APLCNT_TELNO = #{aplcntTelno}
            </if>
            <if test="aplcntEml != null and aplcntEml != ''">
            , APLCNT_EML = #{aplcntEml}
            </if>
            <if test="fldCd == '173106' or fldCd == '173105'">
            , INST_ADDR = #{instAddr}
            , INST_ADDR_DTL = #{instAddrDtl}
            </if>
            <if test="fldCd == '173105'">
            , INST_NM = #{instNm}
            , RPRSV_NM = #{rprsvNm}
            , APLY_INST_TELNO = #{aplyInstTelno}
            , REG_NO = #{regNo}
            </if>
            , INST_TYPE_CD = #{instTypeCd}
            , ETC_CN = #{etcCn}
            , INST_SAREA_CD = #{instSareaCd}
            , RGN_CD = #{rgnCd}
            , FILEGRPID1 = #{filegrpid1}
            , FILEGRPID2 = #{filegrpid2}
            , FILEGRPID3 = #{filegrpid3}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
        WHERE
            APLYID = #{aplyid}
    </update>

    <!-- 신청정보 탭 > 보완요청 목록 조회 -->
    <select id="selectSplmntList" parameterType="SupplementVo" resultType="SupplementVo">
        /* ReqMngDao.selectSplmntList */
        <include refid="PaginationMapper.header"/>
        SELECT
            SPLMNTID
            , APLYID
            , DMND_CN
            , RQSTRID
            , ANS_CN
            , ANSWRRID
            , DMND_DT
            , ANS_DT
            , ANS_STTS_CD
            , B.CD_NM AS ANS_STTS_NM
            , A.MDFCN_DT
            , A.MDFRID
            , A.REG_DT
            , A.RGTRID
        FROM
            TB_SPB_APLY_SPLMNT A
            LEFT OUTER JOIN TB_CMM_CD B ON A.ANS_STTS_CD = B.CD
        WHERE APLYID = #{aplyid}
        <if test="splmntid != null and splmntid != ''">
        AND SPLMNTID = #{splmntid}
        </if>
        <include refid="PaginationMapper.footer"/>
    </select>
    
    <!-- 신청정보 탭 > 보완요청 -->
    <insert id="insertSplmnt" parameterType="SupplementVo" useGeneratedKeys="true" keyProperty="splmntid">
        /* ReqMngDao.insertSplmnt */
        INSERT INTO TB_SPB_APLY_SPLMNT (
            SPLMNTID
            , APLYID
            , DMND_CN
            , RQSTRID
            , DMND_DT
            , ANS_STTS_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{splmntid}
            , #{aplyid}
            , #{dmndCn}
            , #{user.userid}
            , NOW()
            , #{ansSttsCd}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>

    <!-- 신청정보 탭 > 보완요청 수정 -->
    <update id="updateSplmnt" parameterType="SupplementVo">
        /* ReqMngDao.updateSplmnt */
        UPDATE TB_SPB_APLY_SPLMNT SET
            DMND_CN = #{dmndCn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
        WHERE SPLMNTID = #{splmntid}
    </update>

    <!-- 기관역량 탭 조회 -->
    <select id="detailInst" parameterType="CapabilityVo" resultType="CapabilityVo">
        /* ReqMngDao.detailInst */
        SELECT
            APLYID
            , BSNS_PRPS
            , BSNS_SUMRY
            , FOND_DE
            , OPER_PRD
            , INSTRCTR_CAREER
            , DSGN_YN
            , INSTRCTR_HOLD_YN
            , BFRYY_SPORTBSNS_OPER_YN
            , DSGN_NO
            , QLFC_NO
            , OPERBSNS_NM
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_INST_ABILITY
        WHERE APLYID = #{aplyid}
    </select>

    <!-- 기관역량 탭 저장 -->
    <insert id="insertInst" parameterType="CapabilityVo">
        /* ReqMngDao.insertInst */
        INSERT INTO TB_SPB_INST_ABILITY (
            APLYID
            , BSNS_PRPS
            , BSNS_SUMRY
            , FOND_DE
            , OPER_PRD
            , INSTRCTR_CAREER
            , DSGN_YN
            , INSTRCTR_HOLD_YN
            , BFRYY_SPORTBSNS_OPER_YN
            , DSGN_NO
            , QLFC_NO
            , OPERBSNS_NM
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{bsnsPrps}
            , #{bsnsSumry}
            , #{fondDe}
            , #{operPrd}
            , #{instrctrCareer}
            , #{dsgnYn}
            , #{instrctrHoldYn}
            , #{bfryySportbsnsOperYn}
            , #{dsgnNo}
            , #{qlfcNo}
            , #{operbsnsNm}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) 
    </insert>
    
    <!-- 기관역량 탭 수정 -->
    <update id="updateInst" parameterType="CapabilityVo">
        /* ReqMngDao.updateInst */
        INSERT INTO TB_SPB_INST_ABILITY (
            APLYID
            , BSNS_PRPS
            , BSNS_SUMRY
            , FOND_DE
            , OPER_PRD
            , INSTRCTR_CAREER
            , DSGN_YN
            , INSTRCTR_HOLD_YN
            , BFRYY_SPORTBSNS_OPER_YN
            , DSGN_NO
            , QLFC_NO
            , OPERBSNS_NM
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{bsnsPrps}
            , #{bsnsSumry}
            , #{fondDe}
            , #{operPrd}
            , #{instrctrCareer}
            , #{dsgnYn}
            , #{instrctrHoldYn}
            , #{bfryySportbsnsOperYn}
            , #{dsgnNo}
            , #{qlfcNo}
            , #{operbsnsNm}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) ON DUPLICATE KEY UPDATE
<!--         UPDATE TB_SPB_INST_ABILITY SET  -->
            BSNS_PRPS = #{bsnsPrps}
            , BSNS_SUMRY = #{bsnsSumry}
            , FOND_DE = #{fondDe}
            , OPER_PRD = #{operPrd}
            , INSTRCTR_CAREER = #{instrctrCareer}
            , DSGN_YN = #{dsgnYn}
            , INSTRCTR_HOLD_YN = #{instrctrHoldYn}
            , BFRYY_SPORTBSNS_OPER_YN = #{bfryySportbsnsOperYn}
            , DSGN_NO = #{dsgnNo}
            , QLFC_NO = #{qlfcNo}
            , OPERBSNS_NM = #{operbsnsNm}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
<!--         WHERE APLYID = #{aplyid} -->
    </update>
    
    <!-- 기관역량 탭 > 전년도 지원사업 프로그램 주제 목록 조회 -->
    <select id="selectInstPrgrmList" parameterType="CapabilityVo" resultType="CapabilityVo">
        /* ReqMngDao.selectInstPrgrmList */
        SELECT 
            APLYID
            , SUBSTRING(PRGRM_SBJCT_CD, 1, 6) AS PRGRM_SBJCT_CD1
            , PRGRM_SBJCT_CD
            , B.CD_NM AS PRGRM_SBJCT_NM 
            , REG_DT
            , RGTRID 
        FROM 
            TB_SPB_BFRYY_PRGRM_SBJCT A
            LEFT OUTER JOIN TB_CMM_CD B ON A.PRGRM_SBJCT_CD = B.CD
            LEFT OUTER JOIN TB_CMM_CD C ON SUBSTRING(A.PRGRM_SBJCT_CD, 1, 6) = C.CD
        WHERE APLYID = #{aplyid}
    </select>
    
    <!-- 기관역량 탭 > 전년도 지원사업 프로그램 주제 삭제 -->
    <delete id="deleteInstPrgrm" parameterType="CapabilityVo">
        /* ReqMngDao.deleteInstPrgrm */
        DELETE FROM TB_SPB_BFRYY_PRGRM_SBJCT
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 기관역량 탭 > 전년도 지원사업 프로그램 주제 등록 -->
    <insert id="insertInstPrgrm" parameterType="CapabilityVo">
        /* ReqMngDao.insertInstPrgrm */
        INSERT INTO TB_SPB_BFRYY_PRGRM_SBJCT (
            APLYID
            , PRGRM_SBJCT_CD
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="prgrmSbjctCds" separator=",">
        (
            #{aplyid}
            , #{item}
            , NOW()
            , #{user.userid}
        ) 
        </foreach>
    </insert>
    
    <!-- 기관역량 탭 > 환경교육 운영성과 목록 조회 -->
    <select id="selectInstOperRsltList" parameterType="CapabilityResultVo" resultType="CapabilityResultVo">
        /* ReqMngDao.selectInstOperRsltList */
        SELECT 
            RSLTID
            , APLYID
            , SE_CD
            , B.CD_NM AS SE_NM
            , BSNS_NM
            , BSNS_PRD
            , EDU_NOPE
            , BSNS_BGT
            , OPER_CN
            , ORDR
            , COUNT(SE_CD) OVER (PARTITION BY SE_CD) AS ROW_SPAN
            , A.MDFCN_DT
            , A.MDFRID
            , A.REG_DT
            , A.RGTRID 
        FROM 
            TB_SPB_ENVEDU_OPER_RSLT A
            LEFT OUTER JOIN TB_CMM_CD B ON A.SE_CD = B.CD
        WHERE APLYID = #{aplyid}
        AND A.SE_CD = #{seCd}
    </select>
    
    <!-- 기관역량 탭 > 환경교육 운영성과 삭제 -->
    <delete id="deleteInstOperRslt" parameterType="CapabilityVo">
        /* ReqMngDao.deleteInstOperRslt */
        DELETE FROM TB_SPB_ENVEDU_OPER_RSLT
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 기관역량 탭 > 환경교육 운영성과 저장 -->
    <insert id="insertInstOperRslt" parameterType="CapabilityResultVo">
        /* ReqMngDao.insertInstOperRslt */
        INSERT INTO TB_SPB_ENVEDU_OPER_RSLT (
            RSLTID
            , APLYID
            , SE_CD
            , BSNS_NM
            , BSNS_PRD
            , EDU_NOPE
            , BSNS_BGT
            , OPER_CN
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{rsltid}
            , #{aplyid}
            , #{seCd}
            , #{bsnsNm}
            , #{bsnsPrd}
            , #{eduNope}
            , NULLIF(#{bsnsBgt}, '')
            , #{operCn}
            , #{ordr}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 사업수행계획 탭 조회 -->
    <select id="detailPlan" parameterType="ProcPlanVo" resultType="ProcPlanVo">
        /* ReqMngDao.detailPlan */
        SELECT
            APLYID
            , LBCST_SUM
            , ORPNS_SUM
            , TRVCT_SUM
            , EXPENS_SUM
            , REFUND_SUM
            , IFNULL(LBCST_SUM, 0) + IFNULL(ORPNS_SUM, 0) + IFNULL(TRVCT_SUM, 0) + IFNULL(EXPENS_SUM, 0) + IFNULL(REFUND_SUM, 0) AS TOTAL_SUM
            , OPER_BFR_PRMTN_SE
            , OPER_BFR_PRMTN_SESS
            , OPER_BFR_PRMTN_MTHD
            , OPER_MDL_PRMTN_SE
            , OPER_MDL_PRMTN_SESS
            , OPER_MDL_PRMTN_MTHD
            , OPER_AFTR_PRMTN_SE
            , OPER_AFTR_PRMTN_SESS
            , OPER_AFTR_PRMTN_MTHD
            , TEL_RCPT_YN
            , APLY_RCPT_YN
            , ONLN_RCPT_YN
            , ETC_YN
            , ETC_CN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_BSNSEXC_PLAN
        WHERE APLYID = #{aplyid}
    </select>
    
    <!-- 사업수행계획 저장 -->
    <insert id="insertPlan" parameterType="ProcPlanVo">
        /* ReqMngDao.insertPlan */
        INSERT INTO TB_SPB_BSNSEXC_PLAN (
            APLYID
            , LBCST_SUM
            , ORPNS_SUM
            , TRVCT_SUM
            , EXPENS_SUM
            , REFUND_SUM
            , OPER_BFR_PRMTN_SE
            , OPER_BFR_PRMTN_SESS
            , OPER_BFR_PRMTN_MTHD
            , OPER_MDL_PRMTN_SE
            , OPER_MDL_PRMTN_SESS
            , OPER_MDL_PRMTN_MTHD
            , OPER_AFTR_PRMTN_SE
            , OPER_AFTR_PRMTN_SESS
            , OPER_AFTR_PRMTN_MTHD
            , TEL_RCPT_YN
            , APLY_RCPT_YN
            , ONLN_RCPT_YN
            , ETC_YN
            , ETC_CN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{lbcstSum}
            , #{orpnsSum}
            , #{trvctSum}
            , #{expensSum}
            , #{refundSum}
            , #{operBfrPrmtnSe}
            , #{operBfrPrmtnSess}
            , #{operBfrPrmtnMthd}
            , #{operMdlPrmtnSe}
            , #{operMdlPrmtnSess}
            , #{operMdlPrmtnMthd}
            , #{operAftrPrmtnSe}
            , #{operAftrPrmtnSess}
            , #{operAftrPrmtnMthd}
            , #{telRcptYn}
            , #{aplyRcptYn}
            , #{onlnRcptYn}
            , #{etcYn}
            , #{etcCn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 사업수행계획 수정 -->
    <update id="updatePlan" parameterType="ProcPlanVo">
        /* ReqMngDao.updatePlan */
        INSERT INTO TB_SPB_BSNSEXC_PLAN (
            APLYID
            , LBCST_SUM
            , ORPNS_SUM
            , TRVCT_SUM
            , EXPENS_SUM
            , REFUND_SUM
            , OPER_BFR_PRMTN_SE
            , OPER_BFR_PRMTN_SESS
            , OPER_BFR_PRMTN_MTHD
            , OPER_MDL_PRMTN_SE
            , OPER_MDL_PRMTN_SESS
            , OPER_MDL_PRMTN_MTHD
            , OPER_AFTR_PRMTN_SE
            , OPER_AFTR_PRMTN_SESS
            , OPER_AFTR_PRMTN_MTHD
            , TEL_RCPT_YN
            , APLY_RCPT_YN
            , ONLN_RCPT_YN
            , ETC_YN
            , ETC_CN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{lbcstSum}
            , #{orpnsSum}
            , #{trvctSum}
            , #{expensSum}
            , #{refundSum}
            , #{operBfrPrmtnSe}
            , #{operBfrPrmtnSess}
            , #{operBfrPrmtnMthd}
            , #{operMdlPrmtnSe}
            , #{operMdlPrmtnSess}
            , #{operMdlPrmtnMthd}
            , #{operAftrPrmtnSe}
            , #{operAftrPrmtnSess}
            , #{operAftrPrmtnMthd}
            , #{telRcptYn}
            , #{aplyRcptYn}
            , #{onlnRcptYn}
            , #{etcYn}
            , #{etcCn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) ON DUPLICATE KEY UPDATE
<!--         UPDATE TB_SPB_BSNSEXC_PLAN SET -->
            LBCST_SUM = #{lbcstSum}
            , ORPNS_SUM = #{orpnsSum}
            , TRVCT_SUM = #{trvctSum}
            , EXPENS_SUM = #{expensSum}
            , REFUND_SUM = #{refundSum}
            , OPER_BFR_PRMTN_SE = #{operBfrPrmtnSe}
            , OPER_BFR_PRMTN_SESS = #{operBfrPrmtnSess}
            , OPER_BFR_PRMTN_MTHD = #{operBfrPrmtnMthd}
            , OPER_MDL_PRMTN_SE = #{operMdlPrmtnSe}
            , OPER_MDL_PRMTN_SESS = #{operMdlPrmtnSess}
            , OPER_MDL_PRMTN_MTHD = #{operMdlPrmtnMthd}
            , OPER_AFTR_PRMTN_SE = #{operAftrPrmtnSe}
            , OPER_AFTR_PRMTN_SESS = #{operAftrPrmtnSess}
            , OPER_AFTR_PRMTN_MTHD = #{operAftrPrmtnMthd}
            , TEL_RCPT_YN = #{telRcptYn}
            , APLY_RCPT_YN = #{aplyRcptYn}
            , ONLN_RCPT_YN = #{onlnRcptYn}
            , ETC_YN = #{etcYn}
            , ETC_CN = #{etcCn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
<!--         WHERE APLYID = #{aplyid} -->
    </update>
    
    <!-- 프로그램 정보 탭 조회 -->
    <select id="detailPrgrmInfo" parameterType="ProgramInfoVo" resultType="ProgramInfoVo">
        /* ReqMngDao.detailPrgrmInfo */
        SELECT
            APLYID
            , EDU_TRGT
            , EDU_PLC
            , EDU_MTHD_CD
            , B.CD_NM AS EDU_MTHD_NM
            , LCTR_PLC_SE_CD
            , C.CD_NM AS LCTR_PLC_SE_NM 
            , LCTR_FRM_CD
            , D.CD_NM AS LCTR_FRM_NM 
            , LCTR_TME_MTHD_CD
            , E.CD_NM AS LCTR_TME_MTHD_NM
            , ESSNTL_SBJCT_NM
            , ESSNTL_SBJCT_RND
            , CHOISE_SBJCT_NM
            , CHOISE_SBJCT_RND
            , OPER_SESN
            , SESN_EDU_RND
            , WHOL_OPER_RND
            , RND_EDU_NOPE
            , WHOL_EDU_NOPE
            , PRGRM_BCRN
            , EDU_APPRO
            , PRGRM_DSTNCTN
            , OPER_PLAN
            , FYER_COMPL_PREARNGE_NOPE
            , JAN_CNT
            , FEB_CNT
            , MAR_CNT
            , APR_CNT
            , MAY_CNT
            , JUNE_CNT
            , JULY_CNT
            , AUG_CNT
            , SEPT_CNT
            , OCT_CNT
            , NOV_CNT
            , DCM_CNT
            , (SELECT SUM(S.EDU_RND) FROM TB_SPB_PRGRM_SUMRY S WHERE S.APLYID = A.APLYID) AS TOTAL_EDU_CNT
            , A.MDFCN_DT
            , A.MDFRID
            , A.REG_DT
            , A.RGTRID
        FROM
            TB_SPB_PRGRM A
            LEFT OUTER JOIN TB_CMM_CD B ON A.EDU_MTHD_CD = B.CD
            LEFT OUTER JOIN TB_CMM_CD C ON A.LCTR_PLC_SE_CD = C.CD
            LEFT OUTER JOIN TB_CMM_CD D ON A.LCTR_FRM_CD = D.CD
            LEFT OUTER JOIN TB_CMM_CD E ON A.LCTR_TME_MTHD_CD = E.CD
        WHERE APLYID = #{aplyid}
    </select>
    
    <!-- 프로그램 정보 탭 저장 -->
    <insert id="insertPrgrmInfo" parameterType="ProgramInfoVo">
        /* ReqMngDao.insertPrgrmInfo */
        INSERT INTO TB_SPB_PRGRM (
            APLYID
            , EDU_TRGT
            , EDU_PLC
            , EDU_MTHD_CD
            , LCTR_PLC_SE_CD
            , LCTR_FRM_CD
            , LCTR_TME_MTHD_CD
            , ESSNTL_SBJCT_NM
            , ESSNTL_SBJCT_RND
            , CHOISE_SBJCT_NM
            , CHOISE_SBJCT_RND
            , OPER_SESN
            , SESN_EDU_RND
            , WHOL_OPER_RND
            , RND_EDU_NOPE
            , WHOL_EDU_NOPE
            , PRGRM_BCRN
            , EDU_APPRO
            , PRGRM_DSTNCTN
            , OPER_PLAN
            , FYER_COMPL_PREARNGE_NOPE
            , JAN_CNT
            , FEB_CNT
            , MAR_CNT
            , APR_CNT
            , MAY_CNT
            , JUNE_CNT
            , JULY_CNT
            , AUG_CNT
            , SEPT_CNT
            , OCT_CNT
            , NOV_CNT
            , DCM_CNT
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{eduTrgt}
            , #{eduPlc}
            , #{eduMthdCd}
            , #{lctrPlcSeCd}
            , #{lctrFrmCd}
            , #{lctrTmeMthdCd}
            , #{essntlSbjctNm}
            , #{essntlSbjctRnd}
            , #{choiseSbjctNm}
            , #{choiseSbjctRnd}
            , #{operSesn}
            , #{sesnEduRnd}
            , #{wholOperRnd}
            , #{rndEduNope}
            , #{wholEduNope}
            , #{prgrmBcrn}
            , #{eduAppro}
            , #{prgrmDstnctn}
            , #{operPlan}
            , #{fyerComplPrearngeNope}
            , #{janCnt}
            , #{febCnt}
            , #{marCnt}
            , #{aprCnt}
            , #{mayCnt}
            , #{juneCnt}
            , #{julyCnt}
            , #{augCnt}
            , #{septCnt}
            , #{octCnt}
            , #{novCnt}
            , #{dcmCnt}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        );
                
    </insert>

    <!-- 프로그램 정보 탭 수정 -->
    <update id="updatePrgrmInfo" parameterType="ProgramInfoVo">
        /* ReqMngDao.updatePrgrmInfo */
        INSERT INTO TB_SPB_PRGRM (
            APLYID
            , EDU_TRGT
            , EDU_PLC
            , EDU_MTHD_CD
            , LCTR_PLC_SE_CD
            , LCTR_FRM_CD
            , LCTR_TME_MTHD_CD
            , ESSNTL_SBJCT_NM
            , ESSNTL_SBJCT_RND
            , CHOISE_SBJCT_NM
            , CHOISE_SBJCT_RND
            , OPER_SESN
            , SESN_EDU_RND
            , WHOL_OPER_RND
            , RND_EDU_NOPE
            , WHOL_EDU_NOPE
            , PRGRM_BCRN
            , EDU_APPRO
            , PRGRM_DSTNCTN
            , OPER_PLAN
            , FYER_COMPL_PREARNGE_NOPE
            , JAN_CNT
            , FEB_CNT
            , MAR_CNT
            , APR_CNT
            , MAY_CNT
            , JUNE_CNT
            , JULY_CNT
            , AUG_CNT
            , SEPT_CNT
            , OCT_CNT
            , NOV_CNT
            , DCM_CNT
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{eduTrgt}
            , #{eduPlc}
            , #{eduMthdCd}
            , #{lctrPlcSeCd}
            , #{lctrFrmCd}
            , #{lctrTmeMthdCd}
            , #{essntlSbjctNm}
            , #{essntlSbjctRnd}
            , #{choiseSbjctNm}
            , #{choiseSbjctRnd}
            , #{operSesn}
            , #{sesnEduRnd}
            , #{wholOperRnd}
            , #{rndEduNope}
            , #{wholEduNope}
            , #{prgrmBcrn}
            , #{eduAppro}
            , #{prgrmDstnctn}
            , #{operPlan}
            , #{fyerComplPrearngeNope}
            , #{janCnt}
            , #{febCnt}
            , #{marCnt}
            , #{aprCnt}
            , #{mayCnt}
            , #{juneCnt}
            , #{julyCnt}
            , #{augCnt}
            , #{septCnt}
            , #{octCnt}
            , #{novCnt}
            , #{dcmCnt}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) ON DUPLICATE KEY UPDATE
<!--         UPDATE TB_SPB_PRGRM SET -->
            EDU_TRGT = #{eduTrgt}
            , EDU_PLC = #{eduPlc}
            , EDU_MTHD_CD = #{eduMthdCd}
            , LCTR_PLC_SE_CD = #{lctrPlcSeCd}
            , LCTR_FRM_CD = #{lctrFrmCd}
            , LCTR_TME_MTHD_CD = #{lctrTmeMthdCd}
            , ESSNTL_SBJCT_NM = #{essntlSbjctNm}
            , ESSNTL_SBJCT_RND = #{essntlSbjctRnd}
            , CHOISE_SBJCT_NM = #{choiseSbjctNm}
            , CHOISE_SBJCT_RND = #{choiseSbjctRnd}
            , OPER_SESN = #{operSesn}
            , SESN_EDU_RND = #{sesnEduRnd}
            , WHOL_OPER_RND = #{wholOperRnd}
            , RND_EDU_NOPE = #{rndEduNope}
            , WHOL_EDU_NOPE = #{wholEduNope}
            , PRGRM_BCRN = #{prgrmBcrn}
            , EDU_APPRO = #{eduAppro}
            , PRGRM_DSTNCTN = #{prgrmDstnctn}
            , OPER_PLAN = #{operPlan}
            , FYER_COMPL_PREARNGE_NOPE = #{fyerComplPrearngeNope}
            , JAN_CNT = #{janCnt}
            , FEB_CNT = #{febCnt}
            , MAR_CNT = #{marCnt}
            , APR_CNT = #{aprCnt}
            , MAY_CNT = #{mayCnt}
            , JUNE_CNT = #{juneCnt}
            , JULY_CNT = #{julyCnt}
            , AUG_CNT = #{augCnt}
            , SEPT_CNT = #{septCnt}
            , OCT_CNT = #{octCnt}
            , NOV_CNT = #{novCnt}
            , DCM_CNT = #{dcmCnt}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
<!--         WHERE APLYID = #{aplyid} -->
    </update>
    
    <!-- 프로그램 정보 탭 > 프로그램 개요 목록 조회 -->
    <select id="selectPrgrmList" parameterType="ProgramInfoVo" resultType="PrgrmInfoOutlineVo">
        /* ReqMngDao.selectPrgrmList */
        SELECT
            PRGRMSUMRYID
            , APLYID
            , PRGRM_NM
            , EDU_RND
            , EDU_NOPE
            , ORDR
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_PRGRM_SUMRY
        WHERE
            APLYID = #{aplyid}
    </select>
    
    <!-- 프로그램 정보 탭 > 프로그램 개요 삭제 -->
    <delete id="deletePrgrmOutline" parameterType="ProgramInfoVo">
        /* ReqMngDao.deletePrgrmOutline */
        DELETE FROM TB_SPB_PRGRM_SUMRY
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 프로그램 정보 탭 > 프로그램 개요 저장 -->
    <insert id="insertPrgrmOutline" parameterType="PrgrmInfoOutlineVo" useGeneratedKeys="true" keyProperty="prgrmsumryid">
        /* ReqMngDao.insertPrgrmOutline */
        INSERT INTO TB_SPB_PRGRM_SUMRY (
            PRGRMSUMRYID
            , APLYID
            , PRGRM_NM
            , EDU_RND
            , EDU_NOPE
            , ORDR
            , REG_DT
            , RGTRID
        ) VALUES (
            #{prgrmsumryid}
            , #{aplyid}
            , #{prgrmNm}
            , #{eduRnd}
            , #{eduNope}
            , #{ordr}
            , NOW()
            , #{user.userid}
        ) 
    </insert>

    <!-- 전문강사 확보 탭 > 전문인력 보유현황 및 운영계획 목록 조회 -->
    <select id="selectLeaderPlanList" parameterType="SmrLeaderVo" resultType="SmrLeaderJobVo">
        /* ReqMngDao.selectLeaderPlanList */
        SELECT
            LDRID
            , SE
            , NM
            , TASK_CN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
            , APLYID
        FROM
            TB_SPB_LDR
        WHERE APLYID = #{aplyid}
    </select>

    <!-- 전문강사 확보 탭 > 전문인력 보유현황 및 운영계획 삭제 -->
    <delete id="deleteLeaderPlan" parameterType="SmrLeaderJobVo">
        /* ReqMngDao.deleteLeaderPlan */
        DELETE FROM TB_SPB_LDR
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 전문강사 확보 탭 > 전문인력 보유현황 및 운영계획 저장 -->
    <insert id="insertLeaderPlan" parameterType="SmrLeaderJobVo" useGeneratedKeys="true" keyProperty="ldrid">
        /* ReqMngDao.insertLeaderPlan */
        INSERT INTO TB_SPB_LDR (
            LDRID
            , SE
            , NM
            , TASK_CN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
            , APLYID
        ) VALUES (
            #{ldrid}
            , #{se}
            , #{nm}
            , #{taskCn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
            , #{aplyid}
        )
    </insert>

    <!-- 전문강사 확보 탭 > 지도자 관리방안 / 총괄 운영 담당자 지도자 자격 조회 -->
    <select id="detailSmrLeader" parameterType="SmrLeaderVo" resultType="SmrLeaderVo">
        /* ReqMngDao.detailSmrLeader */
        SELECT
            A.APLYID
            , NM
            , BRDT
            , B.LDR_MNG_MTHD
            , A.MDFCN_DT
            , A.MDFRID
            , A.REG_DT
            , A.RGTRID
        FROM
            TB_SPB_SMRIZELDR_HSTRY A
            INNER JOIN TB_SPB_APLY B ON A.APLYID = B.APLYID
        WHERE A.APLYID = #{aplyid}
    </select>

    <!-- 전문강사 확보 탭 > 지도자 관리방안 저장 -->
    <update id="updateSmrLeaderMgt" parameterType="SmrLeaderVo">
        /* ReqMngDao.updateSmrLeaderMgt */
        UPDATE TB_SPB_APLY SET
            LDR_MNG_MTHD = #{ldrMngMthd}
        WHERE APLYID = #{aplyid}
    </update>
    
    <insert id="insertSmrLeaderInfo" parameterType="SmrLeaderVo">
        /* ReqMngDao.insertSmrLeaderInfo */
        INSERT INTO TB_SPB_SMRIZELDR_HSTRY (
            APLYID
            , NM
            , BRDT
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{nm}
            , #{brdt}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 전문강사 확보 탭 > 총괄 운영 담당자 지도자 자격 저장 -->
    <update id="updateSmrLeaderInfo" parameterType="SmrLeaderVo">
        /* ReqMngDao.updateSmrLeaderInfo */
        INSERT INTO TB_SPB_SMRIZELDR_HSTRY (
            APLYID
            , NM
            , BRDT
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{nm}
            , #{brdt}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) ON DUPLICATE KEY UPDATE
<!--         UPDATE TB_SPB_SMRIZELDR_HSTRY SET -->
            NM = #{nm}
            , BRDT = #{brdt}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
<!--         WHERE APLYID = #{aplyid} -->
    </update>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 학력사항 목록 조회 -->
    <select id="selectLeaderAbilList" parameterType="SmrLeaderVo" resultType="SmrLeaderAcbgVo">
        /* ReqMngDao.selectLeaderAbilList */
        SELECT
            ACBGID
            , APLYID
            , BGNG_DE
            , END_DE
            , CONCAT(BGNG_DE, ' ~ ', END_DE) AS EDU_DE
            , SCHL_NM
            , MJR
            , DGR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_SMRIZELDR_ACBG
        WHERE APLYID = #{aplyid}        
    </select>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 학력사항 삭제 -->
    <delete id="deleteLeaderAbil" parameterType="SmrLeaderAcbgVo">
        /* ReqMngDao.deleteLeaderAbil */
        DELETE FROM TB_SPB_SMRIZELDR_ACBG
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 학력사항 저장 -->
    <insert id="insertLeaderAbil" parameterType="SmrLeaderAcbgVo" useGeneratedKeys="true" keyProperty="acbgid">
        /* ReqMngDao.insertLeaderAbil */
        INSERT INTO TB_SPB_SMRIZELDR_ACBG (
            ACBGID
            , APLYID
            , BGNG_DE
            , END_DE
            , SCHL_NM
            , MJR
            , DGR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES(
            #{acbgid}
            , #{aplyid}
            , #{bgngDe}
            , #{endDe}
            , #{schlNm}
            , #{mjr}
            , #{dgr}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 자격사항 목록 조회 -->
    <select id="selectLeaderLicList" parameterType="SmrLeaderVo" resultType="SmrLeaderLicVo">
        /* ReqMngDao.selectLeaderLicList */
        SELECT
            QLFCID
            , APLYID
            , QLFC_NM
            , GRD
            , ACQS_DE
            , WRKPLC
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_SMRIZELDR_QLFC
        WHERE APLYID = #{aplyid}           
    </select>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 자격사항 삭제 -->
    <delete id="deleteLeaderLic" parameterType="SmrLeaderLicVo">
        /* ReqMngDao.deleteLeaderLic */
        DELETE FROM TB_SPB_SMRIZELDR_QLFC
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 자격사항 저장 -->
    <insert id="insertLeaderLic" parameterType="SmrLeaderLicVo" useGeneratedKeys="true" keyProperty="qlfcid">
        /* ReqMngDao.insertLeaderLic */
        INSERT INTO TB_SPB_SMRIZELDR_QLFC (
            QLFCID
            , APLYID
            , QLFC_NM
            , GRD
            , ACQS_DE
            , WRKPLC
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{qlfcid}
            , #{aplyid}
            , #{qlfcNm}
            , #{grd}
            , #{acqsDe}
            , #{wrkplc}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )                
    </insert>

    <!-- 전문강사 확보 탭 > 환경교육관련 경력사항 목록 조회 -->
    <select id="selectLeaderCarrList" parameterType="SmrLeaderVo" resultType="SmrLeaderCarrVo">
        /* ReqMngDao.selectLeaderCarrList */
        SELECT
            CAREERID
            , APLYID
            , PRD
            , ACTVT_NM
            , ACTVT_TYPE
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_SMRIZELDR_CAREER
        WHERE APLYID = #{aplyid}        
    </select>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 경력사항 삭제 -->
    <delete id="deleteLeaderCarr" parameterType="SmrLeaderCarrVo">
        /* ReqMngDao.deleteLeaderCarr */
        DELETE FROM TB_SPB_SMRIZELDR_CAREER
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 전문강사 확보 탭 > 환경교육관련 경력사항 저장 -->
    <insert id="insertLeaderCarr" parameterType="SmrLeaderCarrVo" useGeneratedKeys="true" keyProperty="careerid">
        /* ReqMngDao.insertLeaderCarr */
        INSERT INTO TB_SPB_SMRIZELDR_CAREER (
            CAREERID
            , APLYID
            , PRD
            , ACTVT_NM
            , ACTVT_TYPE
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{careerid}
            , #{aplyid}
            , #{prd}
            , #{actvtNm}
            , #{actvtType}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )       
    </insert>
    
    <!-- 안전관리 적정성 탭 조회 -->
    <select id="detailSafetyMng" parameterType="SafetyMngVo" resultType="SafetyMngVo">
        /* ReqMngDao.detailSafetyMng */
        SELECT
            APLYID
            , QLFC_YN
            , QLFC_NO
            , LDR_EDU_SESS
            , LDR_EDU_PIC
            , LDR_EDU_CN
            , PRTCPNT_EDU_SESS
            , PRTCPNT_EDU_PIC
            , PRTCPNT_EDU_CN
            , PIC_NM
            , PIC_TELNO
            , MAIN_TCHER_ROLE
            , ASSTN_TCHER_ROLE
            , FRSTT_NM
            , FRSTT_TELNO
            , POLCSTTN_NM
            , POLCSTTN_TELNO
            , PARMACY_NM
            , PARMACY_TELNO
            , HSPTL_NM
            , HSPTL_TELNO
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_SFTY_MNG
        WHERE APLYID = #{aplyid}
    </select>
    
    <!-- 안전관리 적정성 탭 > 평가방식 -->
    <select id="detailPrgrmEvl" parameterType="SafetyMngVo" resultType="PrgrmEvlVo">
        /* ReqMngDao.detailPrgrmEvl */
        SELECT
            APLYID
            , EVL_PRPS
            , BFR_LDR_EVL_ARTCL
            , BFR_LDR_EVL_TL
            , AFTR_LDR_EVL_ARTCL
            , AFTR_LDR_EVL_TL
            , BFR_PRTPNT_EVL_ARTCL
            , BFR_PRTPNT_EVL_TL
            , AFTR_PRTPNT_EVL_ARTCL
            , AFTR_PRTPNT_EVL_TL
            , BFR_GDR_EVL_ARTCL
            , BFR_GDR_EVL_TL
            , AFTR_GDR_EVL_ARTCL
            , AFTR_GDR_EVL_TL
            , DATABASE_WRT_YN
            , CLSJRNL_WRT_YN
            , ETC_YN
            , ETC_CN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        FROM
            TB_SPB_PRGRM_EVL
        WHERE APLYID = #{aplyid}
    </select>
    
    <!-- 안전관리 적정성 탭 > 안전관리 저장 -->
    <update id="updateSafetyMng" parameterType="SafetyMngVo">
        /* ReqMngDao.updateSafetyMng */
        INSERT INTO TB_SPB_SFTY_MNG (
            APLYID
            , QLFC_YN
            , QLFC_NO
            , LDR_EDU_SESS
            , LDR_EDU_PIC
            , LDR_EDU_CN
            , PRTCPNT_EDU_SESS
            , PRTCPNT_EDU_PIC
            , PRTCPNT_EDU_CN
            , PIC_NM
            , PIC_TELNO
            , MAIN_TCHER_ROLE
            , ASSTN_TCHER_ROLE
            , FRSTT_NM
            , FRSTT_TELNO
            , POLCSTTN_NM
            , POLCSTTN_TELNO
            , PARMACY_NM
            , PARMACY_TELNO
            , HSPTL_NM
            , HSPTL_TELNO
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{qlfcYn}
            , #{qlfcNo}
            , #{ldrEduSess}
            , #{ldrEduPic}
            , #{ldrEduCn}
            , #{prtcpntEduSess}
            , #{prtcpntEduPic}
            , #{prtcpntEduCn}
            , #{picNm}
            , #{picTelno}
            , #{mainTcherRole}
            , #{asstnTcherRole}
            , #{frsttNm}
            , #{frsttTelno}
            , #{polcsttnNm}
            , #{polcsttnTelno}
            , #{parmacyNm}
            , #{parmacyTelno}
            , #{hsptlNm}
            , #{hsptlTelno}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) ON DUPLICATE KEY UPDATE
            QLFC_YN = #{qlfcYn}
            , QLFC_NO = #{qlfcNo}
            , LDR_EDU_SESS = #{ldrEduSess}
            , LDR_EDU_PIC = #{ldrEduPic}
            , LDR_EDU_CN = #{ldrEduCn}
            , PRTCPNT_EDU_SESS = #{prtcpntEduSess}
            , PRTCPNT_EDU_PIC = #{prtcpntEduPic}
            , PRTCPNT_EDU_CN = #{prtcpntEduCn}
            , PIC_NM = #{picNm}
            , PIC_TELNO = #{picTelno}
            , MAIN_TCHER_ROLE = #{mainTcherRole}
            , ASSTN_TCHER_ROLE = #{asstnTcherRole}
            , FRSTT_NM = #{frsttNm}
            , FRSTT_TELNO = #{frsttTelno}
            , POLCSTTN_NM = #{polcsttnNm}
            , POLCSTTN_TELNO = #{polcsttnTelno}
            , PARMACY_NM = #{parmacyNm}
            , PARMACY_TELNO = #{parmacyTelno}
            , HSPTL_NM = #{hsptlNm}
            , HSPTL_TELNO = #{hsptlTelno}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
    </update>
    
    <!-- 안전관리 적정성 탭 > 프로그램 평가 저장 -->
    <update id="updatePrgrmEvl" parameterType="SafetyMngVo">
        /* ReqMngDao.updatePrgrmEvl */
        INSERT INTO TB_SPB_PRGRM_EVL (
            APLYID
            , EVL_PRPS
            , BFR_LDR_EVL_ARTCL
            , BFR_LDR_EVL_TL
            , AFTR_LDR_EVL_ARTCL
            , AFTR_LDR_EVL_TL
            , BFR_PRTPNT_EVL_ARTCL
            , BFR_PRTPNT_EVL_TL
            , AFTR_PRTPNT_EVL_ARTCL
            , AFTR_PRTPNT_EVL_TL
            , BFR_GDR_EVL_ARTCL
            , BFR_GDR_EVL_TL
            , AFTR_GDR_EVL_ARTCL
            , AFTR_GDR_EVL_TL
            , DATABASE_WRT_YN
            , CLSJRNL_WRT_YN
            , ETC_YN
            , ETC_CN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{evlPrps}
            , #{bfrLdrEvlArtcl}
            , #{bfrLdrEvlTl}
            , #{aftrLdrEvlArtcl}
            , #{aftrLdrEvlTl}
            , #{bfrPrtpntEvlArtcl}
            , #{bfrPrtpntEvlTl}
            , #{aftrPrtpntEvlArtcl}
            , #{aftrPrtpntEvlTl}
            , #{bfrGdrEvlArtcl}
            , #{bfrGdrEvlTl}
            , #{aftrGdrEvlArtcl}
            , #{aftrGdrEvlTl}
            , #{databaseWrtYn}
            , #{clsjrnlWrtYn}
            , #{etcYn}
            , #{etcCn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) ON DUPLICATE KEY UPDATE
            EVL_PRPS = #{evlPrps}
            , BFR_LDR_EVL_ARTCL = #{bfrLdrEvlArtcl}
            , BFR_LDR_EVL_TL = #{bfrLdrEvlTl}
            , AFTR_LDR_EVL_ARTCL = #{aftrLdrEvlArtcl}
            , AFTR_LDR_EVL_TL = #{aftrLdrEvlTl}
            , BFR_PRTPNT_EVL_ARTCL = #{bfrPrtpntEvlArtcl}
            , BFR_PRTPNT_EVL_TL = #{bfrPrtpntEvlTl}
            , AFTR_PRTPNT_EVL_ARTCL = #{aftrPrtpntEvlArtcl}
            , AFTR_PRTPNT_EVL_TL = #{aftrPrtpntEvlTl}
            , BFR_GDR_EVL_ARTCL = #{bfrGdrEvlArtcl}
            , BFR_GDR_EVL_TL = #{bfrGdrEvlTl}
            , AFTR_GDR_EVL_ARTCL = #{aftrGdrEvlArtcl}
            , AFTR_GDR_EVL_TL = #{aftrGdrEvlTl}
            , DATABASE_WRT_YN = #{databaseWrtYn}
            , CLSJRNL_WRT_YN = #{clsjrnlWrtYn}
            , ETC_YN = #{etcYn}
            , ETC_CN = #{etcCn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
    </update>
    
    <!-- 소요예산 탭 조회 -->
    <select id="selectBudgetList" parameterType="BudgetVo" resultType="BudgetVo">
        /* ReqMngDao.selectBudgetList */
        WITH T AS (
            SELECT
                BGTID
                , APLYID
                , EXPITM_CD 
                , AMT
                , DSCTN
                , SUM(AMT) OVER (PARTITION BY APLYID) AS TOTAL_AMT
                , MDFCN_DT
                , MDFRID
                , REG_DT
                , RGTRID
            FROM
                TB_SPB_REQRE_BGT
            WHERE APLYID = #{aplyid}
        )
        SELECT 
            T.*
            , B.CD AS CODE
            , B.CD_NM  AS EXPITM_NM
        FROM TB_CMM_CD B
            LEFT OUTER JOIN T ON T.EXPITM_CD = B.CD 
        WHERE 1 = 1 
        AND B.CDGRPID = '218'
        <if test="fldCd == '173106'"><!-- 그린캠퍼스 -->
        AND B.UPPR_CD = '218301'
        </if>
        <if test="fldCd == '173105'"><!-- 교사학습공동체 -->
        AND B.UPPR_CD = '218401'
        </if>
        <if test="fldCd == '173104'"><!-- 환경동아리 -->
        AND B.UPPR_CD = '218201'
        </if>
        <if test="fldCd == '173107'"><!-- 환경교육 우수학교 -->
        AND B.UPPR_CD = '218501'
        </if>
        ORDER BY B.CD
    </select>
    
    <!-- 소요예산 수정 -->
    <update id="updateBudget" parameterType="BudgetVo">
        /* ReqMngDao.updateBudget */
        REPLACE INTO TB_SPB_REQRE_BGT 
        VALUES (
            #{bgtid}
            , #{aplyid}
            , #{expitmCd}
            , #{amt}
            , #{dsctn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </update>
    
    <!-- 운영개요 탭 상세조회 -->
    <select id="detailOper" parameterType="OperVo" resultType="OperVo">
        SELECT 
            APLYID
            , CLUB_NM
            , EDU_NOPE
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID 
        FROM 
            TB_SPB_OPER_SUMRY
        WHERE APLYID = #{aplyid}
    </select>
    
    <!-- 운영개요 탭 교육주제 목록 -->
    <select id="selectOperSubjectList" parameterType="OperVo" resultType="OperVo">
        /* ReqMngDao.selectOperSubjectList */
        SELECT 
            APLYID
            , SUBSTRING(EDU_SBJCT_CD, 1, 6) AS EDU_SBJCT_CD1
            , EDU_SBJCT_CD
            , B.CD_NM AS EDU_SBJCT_NM 
            , A.REG_DT
            , A.RGTRID 
        FROM 
            TB_SPB_OPER_EDU_SBJCT_MAPNG A
            LEFT OUTER JOIN TB_CMM_CD B ON A.EDU_SBJCT_CD = B.CD
            LEFT OUTER JOIN TB_CMM_CD C ON SUBSTRING(A.EDU_SBJCT_CD, 1, 6) = C.CD
        WHERE APLYID = #{aplyid}
    </select>
    
    <!-- 운영개요 탭 운영차시 목록 -->
    <select id="selectOperSubjectRndList" parameterType="OperVo" resultType="OperRndVo">
        SELECT 
            RNDID
            , APLYID
            , SBJCT_SE_CD
            , B.CD_NM AS SBJCT_SE_NM
            , RND
            , SUBSTRING(EDU_SBJCT_CD, 1, 6) AS EDU_SBJCT_CD1
            , EDU_SBJCT_CD
            , COUNT(SBJCT_SE_CD) OVER (PARTITION BY SBJCT_SE_CD) AS ROW_SPAN
            , A.MDFCN_DT
            , A.MDFRID
            , A.REG_DT
            , A.RGTRID 
        FROM 
            TB_SPB_OPER_RND A
            LEFT OUTER JOIN TB_CMM_CD B ON A.SBJCT_SE_CD = B.CD
            LEFT OUTER JOIN TB_CMM_CD C ON A.EDU_SBJCT_CD = C.CD
            LEFT OUTER JOIN TB_CMM_CD D ON SUBSTRING(A.EDU_SBJCT_CD, 1, 6) = D.CD
        WHERE APLYID = #{aplyid}
        AND SBJCT_SE_CD = #{sbjctSeCd}
        ORDER BY SBJCT_SE_CD, RND
    </select>
    
    <!-- 운영개요 탭 수정 -->
    <update id="updateOper" parameterType="OperVo">
        /* ReqMngDao.updateOper */
        INSERT INTO TB_SPB_OPER_SUMRY (
            APLYID
            , CLUB_NM
            , EDU_NOPE
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{aplyid}
            , #{clubNm}
            , #{eduNope}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        ) ON DUPLICATE KEY UPDATE
<!--         UPDATE TB_SPB_OPER_SUMRY SET -->
            CLUB_NM = #{clubNm}
            , EDU_NOPE = #{eduNope}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
<!--         WHERE APLYID = #{aplyid} -->
    </update>
    
    <!-- 운영개요 탭 > 교육주제 삭제 -->
    <delete id="deleteOperSubject" parameterType="OperVo">
        /* ReqMngDao.deleteOperSubject */
        DELETE FROM TB_SPB_OPER_EDU_SBJCT_MAPNG
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 운영개요 탭 > 교육주제 등록 -->
    <insert id="insertOperSubject" parameterType="OperVo">
        /* ReqMngDao.insertOperSubject */
        INSERT INTO TB_SPB_OPER_EDU_SBJCT_MAPNG (
            APLYID
            , EDU_SBJCT_CD
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="eduSbjctCds" separator=",">
        (
            #{aplyid}
            , #{item}
            , NOW()
            , #{user.userid}
        ) 
        </foreach>
    </insert>
    
    <!-- 운영개요 탭 > 운영차시 삭제 -->
    <delete id="deleteOperSubjectRnd" parameterType="OperVo">
        /* ReqMngDao.deleteOperSubjectRnd */
        DELETE FROM TB_SPB_OPER_RND
        WHERE APLYID = #{aplyid}
    </delete>
    
    <!-- 운영개요 탭 > 운영차시 등록 -->
    <insert id="insertOperSubjectRnd" parameterType="OperRndVo" useGeneratedKeys="true" keyProperty="rndid">
        /* ReqMngDao.insertOperSubjectRnd */
        INSERT INTO TB_SPB_OPER_RND (
            RNDID
            , APLYID
            , SBJCT_SE_CD
            , RND
            , EDU_SBJCT_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{rndid}
            , #{aplyid}
            , #{sbjctSeCd}
            , #{rnd}
            , #{eduSbjctCd}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 심사관리 탭 목록 조회 -->
    <select id="selectSrngList" parameterType="SrngTabVo" resultType="SrngTabVo">
        /* ReqMngDao.selectSrngList */
        SELECT 
            TSA.APLYID
            , IFNULL(TSSS.SBMSNID, 0) AS SBMSNID
            , TSSS.FORMID
            , TSJ.CYCL
            , TSJ.JDGSID
            , TCU.NM 
            , IFNULL(DATE_FORMAT(TSSS.SBMSN_DT, '%Y-%m-%d'), '-') AS SBMSN_DT
            , IFNULL(TSSS.SCR, '-') AS SCR
            , IFNULL(SUM(TSSS.SCR) OVER (PARTITION BY TSA.APLYID), '-') AS TOT_SCR
            , ROUND(IFNULL(SUM(TSSS.SCR) OVER (PARTITION BY TSA.APLYID) / COUNT(TSJ.JDGSID) OVER (PARTITION BY TSJ.PCNTSTID), 0), 1) AS AVG_SCR
            , IFNULL(TSA.FIRST_GRD, '-') AS FIRST_GRD
            , IFNULL(TSA.FIRST_RKNG, '-') AS FIRST_RKNG 
            , IFNULL(TSA.SCND_GRD, '-') AS SCND_GRD
            , IFNULL(TSA.SCND_RKNG, '-') AS SCND_RKNG
            , IFNULL(TSA.SCND_SRNG_TRGT_YN, '-') AS SCND_SRNG_TRGT_YN
            , IFNULL(TSA.SRNG_END_YN, '-') AS SRNG_END_YN
            , TCC.CD_NM AS SLCTN_STTS_NM 
            , TSSS.SRNG_OPNN 
            , TSSS.OPNN1 
            , TSSS.OPNN2 
            , TSSS.OPNN3 
            , TSSS.OPNN4 
            , LWET_CRTR_SCR_USE_YN_FIRST
            , LWET_CRTR_SCR_USE_YN_SCND
            , LWET_CRTR_SCR_FIRST
            , LWET_CRTR_SCR_SCND
            , NOPE_LMT_USE_YN
            , NOPE_LMT
        FROM TB_SPB_PCNTST TSP
            INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
            INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
            INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
            LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = IF(TSJ.CYCL = 1, TSP.SRNG_FORMID_FIRST, TSP.SRNG_FORMID_SCND)
            LEFT OUTER JOIN TB_CMM_CD TCC ON TSA.SLCTN_STTS_CD = TCC.CD 
        WHERE 1 = 1
        AND TSJ.CYCL = #{cycl}
        AND TSA.APLYID = #{aplyid}
        ORDER BY TSJ.CYCL, TCU.NM
    </select>
    
    <!-- 평균점수, 문항 조회 -->
    <select id="selectSrngUserList" parameterType="SrngTabVo" resultType="SrngTabVo">
        /* ReqMngDao.selectSrngUserList */
        <![CDATA[
        WITH SCORE AS (
            SELECT DISTINCT TSSSQ.QITEMID 
                , ROUND(IFNULL(SUM(TSSSQ.SCR) OVER (PARTITION BY TSSSQ.QITEMID) / (SELECT COUNT(1) FROM TB_SPB_JDGS A WHERE A.PCNTSTID = TSP.PCNTSTID AND A.CYCL = TSJ.CYCL), 0), 2) AS SUM_AVG
                , ROUND(IFNULL(SUM(TSSS.SCR) OVER (PARTITION BY TSSSQ.QITEMID) / (SELECT COUNT(1) FROM TB_SPB_JDGS A WHERE A.PCNTSTID = TSP.PCNTSTID AND A.CYCL = TSJ.CYCL), 0), 2) AS TOT_SUM_AVG
            FROM TB_SPB_PCNTST TSP
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
                INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
                LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = IF(TSJ.CYCL = 1, TSP.SRNG_FORMID_FIRST, TSP.SRNG_FORMID_SCND)
                LEFT OUTER JOIN TB_SPB_SRNG_SBMSN_QITEM TSSSQ ON TSSSQ.SBMSNID = TSSS.SBMSNID
                LEFT OUTER JOIN TB_CMM_CD TCC ON TCC.CD = TSSSQ.QITEM_SE_CD 
            WHERE TSJ.CYCL = #{cycl}
            AND TSA.APLYID = #{aplyid}
        )
        SELECT 
            T.QITEMID
            , QITEM
            , QITEM_SE_NM
            , ROW_NUMBER() OVER(PARTITION BY FORMID, QITEM_SE_NM ORDER BY ORDR) AS ROW_NUM
            , COUNT(QITEM_SE_NM) OVER (PARTITION BY FORMID, QITEM_SE_NM) AS COLSPAN
            , IF(S.QITEMID IS NULL, 0, S.SUM_AVG) AS SUM_AVG
            , IF(S.QITEMID IS NULL, 0, S.TOT_SUM_AVG) AS TOT_SUM_AVG
            , CASE WHEN IF(CYCL = 1, LWET_CRTR_SCR_USE_YN_FIRST, LWET_CRTR_SCR_USE_YN_SCND) = 'Y' AND IFNULL(IF(CYCL = 1, LWET_CRTR_SCR_FIRST, LWET_CRTR_SCR_SCND), 0) <= IF(S.QITEMID IS NULL, 0, S.TOT_SUM_AVG) THEN 'text-info' 
                WHEN IF(CYCL = 1, LWET_CRTR_SCR_USE_YN_FIRST, LWET_CRTR_SCR_USE_YN_SCND) = 'Y' AND IFNULL(IF(CYCL = 1, LWET_CRTR_SCR_FIRST, LWET_CRTR_SCR_SCND), 0) > IF(S.QITEMID IS NULL, 0, S.TOT_SUM_AVG) THEN 'text-danger' 
                ELSE '' END AS FONT_COLOR
        FROM (
            SELECT DISTINCT  
                TSSFQ.FORMID
                , CYCL
                , LWET_CRTR_SCR_USE_YN_FIRST
                , LWET_CRTR_SCR_USE_YN_SCND
                , LWET_CRTR_SCR_FIRST
                , LWET_CRTR_SCR_SCND
                , TSSFQ.QITEMID
                , TSSFQ.QITEM
                , TCC.CD_NM AS QITEM_SE_NM 
                , ORDR
            FROM TB_SPB_PCNTST TSP
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
                INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
                INNER JOIN TB_SPB_SRNG_FORM TSSF ON TSSF.FORMID = IF(TSJ.CYCL = 1, TSP.SRNG_FORMID_FIRST, TSP.SRNG_FORMID_SCND)
                INNER JOIN TB_SPB_SRNG_FORM_QITEM TSSFQ ON TSSFQ.FORMID = TSSF.FORMID  
                LEFT OUTER JOIN TB_CMM_CD TCC ON TCC.CD = TSSFQ.QITEM_SE_CD 
            WHERE 1 = 1
            AND TSJ.CYCL = #{cycl}
            AND TSA.APLYID = #{aplyid}
        ) T LEFT OUTER JOIN SCORE S ON T.QITEMID = S.QITEMID
        ORDER BY ORDR    
        ]]>
    </select>
    
    <!-- 심사관리 탭 상세 조회 -->
    <select id="detailSrngList" parameterType="SrngTabVo" resultType="SrngTabVo">
        /* ReqMngDao.detailSrngList */
        WITH SCORE AS (
            SELECT
                TSSS.SBMSNID AS SBMSNID
                , TSJ.JDGSID 
                , TSSSQ.QITEMID 
                , TSSSQ.QITEM
                , TSSSQ.SCR 
            FROM TB_SPB_PCNTST TSP
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
                INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
                LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = IF(TSJ.CYCL = 1, TSP.SRNG_FORMID_FIRST, TSP.SRNG_FORMID_SCND)
                LEFT OUTER JOIN TB_SPB_SRNG_SBMSN_QITEM TSSSQ ON TSSSQ.SBMSNID = TSSS.SBMSNID
                LEFT OUTER JOIN TB_CMM_CD TCC ON TCC.CD = TSSSQ.QITEM_SE_CD 
            WHERE 1 = 1
            AND TSJ.CYCL = #{cycl}
            AND TSA.APLYID = #{aplyid}
        )
        SELECT 
            S.SBMSNID
            , T.JDGSID
            , T.QITEM
            , IFNULL(S.SCR, '-') AS SCR
        FROM (
            SELECT
                TSSFQ.QITEMID
                , TSSFQ.QITEM
                , TSSFQ.ORDR
                , TSJ.JDGSID 
            FROM TB_SPB_PCNTST TSP
                INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
                INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
                INNER JOIN TB_SPB_SRNG_FORM TSSF ON TSSF.FORMID = IF(TSJ.CYCL = 1, TSP.SRNG_FORMID_FIRST, TSP.SRNG_FORMID_SCND)
                INNER JOIN TB_SPB_SRNG_FORM_QITEM TSSFQ ON TSSFQ.FORMID = TSSF.FORMID  
                LEFT OUTER JOIN TB_CMM_CD TCC ON TCC.CD = TSSFQ.QITEM_SE_CD 
            WHERE 1 = 1
            AND TSJ.CYCL = #{cycl}
            AND TSA.APLYID = #{aplyid}
        ) T LEFT OUTER JOIN SCORE S ON T.QITEMID = S.QITEMID AND T.JDGSID = S.JDGSID
        ORDER BY IFNULL(S.SBMSNID, T.JDGSID), T.ORDR
    </select>
    
    <!-- 심사보기 팝업 -->
    <select id="selectSrngResult" parameterType="SrngTabVo" resultType="SrngTabVo">
        /* ReqMngDao.selectSrngResult */
        SELECT
            TCU.NM
            , DATE_FORMAT(TSSS.SBMSN_DT, '%Y-%m-%d') AS SBMSN_DT
            , TCC.CD_NM AS QITEM_SE_NM
            , TSSSQ.QITEM
            , TSSSQ.ALTM
            , TSSSQ.SCR AS ITEM_SCR
            , TSSS.TOT_SCR 
            , TSSS.SCR 
            , TSSS.SRNG_OPNN 
            , TSSS.OPNN1 
            , TSSS.OPNN2 
            , TSSS.OPNN3 
            , TSSS.OPNN4 
            , TSJ.CYCL 
        FROM TB_SPB_PCNTST TSP
            INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
            INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
            INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
            LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = IF(TSJ.CYCL = 1, TSP.SRNG_FORMID_FIRST, TSP.SRNG_FORMID_SCND)
            LEFT OUTER JOIN TB_SPB_SRNG_SBMSN_QITEM TSSSQ ON TSSSQ.SBMSNID = TSSS.SBMSNID
            LEFT OUTER JOIN TB_CMM_CD TCC ON TCC.CD = TSSSQ.QITEM_SE_CD 
        WHERE 1 = 1
        AND TSSS.SBMSNID = #{sbmsnid}
        ORDER BY TSSSQ.ORDR 
    </select>
    
    <!-- 심사일정 캘린더 -->
    <select id="selectScheduleList" parameterType="ReqMngVo" resultType="ReqMngVo">
        /* ReqMngDao.selectScheduleList */
        <![CDATA[
        WITH CNT_FIRST AS (
            SELECT 
                PCNTSTID
                , CYCL
                , SUM(APLYNO_CNT) AS APLYNO_CNT
                , SUM(SRNG_CNT) AS SRNG_CNT
                , SUM(SLCTN_Y_CNT) AS SLCTN_Y_CNT
                , SUM(SLCTN_N_CNT) AS SLCTN_N_CNT
            FROM (
                SELECT 
                    TSP.PCNTSTID
                    , TSJ.CYCL
                    , COUNT(DISTINCT TSA.APLYID) AS APLYNO_CNT   -- 곰오의 신청자 수
                    , CASE WHEN COUNT(TSJ.JDGSID) = COUNT(TSSS.APLYID) THEN 1 ELSE 0 END AS SRNG_CNT    -- 신청자 별 전체 심사위원의 심사건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193102' THEN 1 ELSE 0 END AS SLCTN_Y_CNT   -- 선정 건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193103' THEN 1 ELSE 0 END AS SLCTN_N_CNT   -- 선정탈락 건수
                FROM TB_SPB_PCNTST TSP 
                    INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID
                    INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                    LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = TSP.SRNG_FORMID_FIRST AND TSSS.SBMSN_DT IS NOT NULL 
                WHERE 1 = 1
                AND TSJ.CYCL = 1
                GROUP BY TSP.PCNTSTID
                    , TSJ.CYCL
                    , TSA.APLYID
            ) T
            GROUP BY PCNTSTID
                , CYCL
        ), CNT_SECOND AS (
            SELECT 
                PCNTSTID
                , CYCL
                , SUM(APLYNO_CNT) AS APLYNO_CNT
                , SUM(SRNG_CNT) AS SRNG_CNT
                , SUM(SLCTN_Y_CNT) AS SLCTN_Y_CNT
                , SUM(SLCTN_N_CNT) AS SLCTN_N_CNT
            FROM (
                SELECT 
                    TSP.PCNTSTID
                    , TSJ.CYCL
                    , COUNT(DISTINCT TSA.APLYID) AS APLYNO_CNT   -- 곰오의 신청자 수
                    , CASE WHEN COUNT(TSJ.JDGSID) = COUNT(TSSS.APLYID) THEN 1 ELSE 0 END AS SRNG_CNT    -- 신청자 별 전체 심사위원의 심사건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193102' THEN 1 ELSE 0 END AS SLCTN_Y_CNT   -- 선정 건수
                    , CASE WHEN TSA.SLCTN_STTS_CD = '193103' THEN 1 ELSE 0 END AS SLCTN_N_CNT   -- 선정탈락 건수
                FROM TB_SPB_PCNTST TSP 
                    INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID AND TSA.SCND_SRNG_TRGT_YN = 'Y'
                    INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                    LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = TSP.SRNG_FORMID_SCND AND TSSS.SBMSN_DT IS NOT NULL 
                WHERE 1 = 1
                AND TSJ.CYCL = 2
                GROUP BY TSP.PCNTSTID
                    , TSJ.CYCL
                    , TSA.APLYID
            ) T
            GROUP BY PCNTSTID
                , CYCL
        )
        SELECT DISTINCT
            TSP.PCNTSTID
            , TSP.PCNTST_NM 
            , CONCAT(DATE_FORMAT(TSP.SRNG_BGNG_DT, '%Y-%m-%d'), ' ~ ', DATE_FORMAT(TSP.SRNG_END_DT, '%Y-%m-%d')) AS SRNG_DT 
            , DATE_FORMAT(TSP.SRNG_BGNG_DT, '%Y-%m-%d') AS SRNG_BGNG_DT 
            , DATE_FORMAT(DATE_ADD(TSP.SRNG_END_DT, INTERVAL +1 DAY), '%Y-%m-%d') AS SRNG_END_DT    -- fullCalendar에서 종료일 하루 앞까지 그려져서 +1 추가...
            , CASE WHEN NOW() < SRNG_BGNG_DT THEN '심사전'                
                WHEN NOW() > SRNG_END_DT OR (FRST.SRNG_CNT = FRST.APLYNO_CNT AND IFNULL(SCND.SRNG_CNT, 0) = IFNULL(SCND.APLYNO_CNT, 0)) THEN '심사완료'
                WHEN NOW() >= SRNG_BGNG_DT AND NOW() <= SRNG_END_DT THEN '심사중'
                ELSE ''
                END AS SRNG_STTS_NM
        FROM 
            TB_SPB_PCNTST TSP
            INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
            INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
            INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
            LEFT OUTER JOIN CNT_FIRST FRST ON FRST.PCNTSTID = TSP.PCNTSTID
            LEFT OUTER JOIN CNT_SECOND SCND ON SCND.PCNTSTID = TSP.PCNTSTID
        WHERE 1 = 1
        AND TSJ.JDGSID = #{user.userid}
        ]]>
    </select>
    
    <!-- 심사 정보 수정 -->
    <update id="updateSrngScore" parameterType="ReqUserVo">
        /* ReqMngDao.updateSrngScore */
        UPDATE TB_SPB_APLY SET
            MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
            <if test="scndSrngTrgtYn != null and scndSrngTrgtYn != ''">
            , SCND_SRNG_TRGT_YN = #{scndSrngTrgtYn}
            </if>
            <if test="firstScr != null and firstScr != ''">
            , FIRST_SCR = #{firstScr}
            </if>
            <if test="firstGrd != null and firstGrd != ''">
            , FIRST_GRD = #{firstGrd}
            </if>
            <if test="firstRkng != null and firstRkng != ''">
            , FIRST_RKNG = #{firstRkng}
            </if>
            <if test="scndScr != null and scndScr != ''">
            , SCND_SCR = #{scndScr}
            </if>
            <if test="scndGrd != null and scndGrd != ''">
            , SCND_GRD = #{scndGrd}
            </if>
            <if test="scndRkng != null and scndRkng != ''">
            , SCND_RKNG = #{scndRkng}
            </if>
            <if test="srngEndYn != null and srngEndYn != ''">
            , SRNG_END_YN = #{srngEndYn}
            </if>
            <if test="scndSrngEndYn != null and scndSrngEndYn != ''">
            , SCND_SRNG_END_YN = #{scndSrngEndYn}
            </if>
            <if test="slctnSttsCd != null and slctnSttsCd != ''">
            , SLCTN_STTS_CD = #{slctnSttsCd}
            </if>
        WHERE APLYID = #{aplyid}
    </update>
    
    <!-- 점수 산정 -->    
    <select id="selectScoreList" parameterType="ReqUserVo" resultType="ReqUserVo">
        /* ReqMngDao.selectScoreList */
        <![CDATA[
        WITH SCORE_CARD AS (
            SELECT
                PCNTSTID
                , GRD_NM
                , TOTAL_CNT
                , RT 
                , CASE WHEN STD_CNT = 0 THEN 0 ELSE SUM(HIGH_SCORE) OVER (PARTITION BY PCNTSTID ORDER BY GRD_NM) END AS HIGH_SCORE
                , STD_CNT
                , LOW_SCORE
            FROM (
                SELECT
                    COUNT(TSA.APLYID) AS TOTAL_CNT
                    , TSSGS.PCNTSTID
                    , TSSGS.GRD_NM 
                    , TSSGS.RT
                    , IFNULL(LAG(ROUND(COUNT(TSA.APLYID) * TSSGS.RT / 100)) OVER (ORDER BY TSSGS.GRD_NM), 1) AS HIGH_SCORE
                    , ROUND(COUNT(TSA.APLYID) * TSSGS.RT / 100) AS STD_CNT
                    , SUM(ROUND(COUNT(TSA.APLYID) * TSSGS.RT / 100)) OVER (PARTITION BY TSSGS.PCNTSTID ORDER BY TSSGS.GRD_NM) AS LOW_SCORE 
                FROM TB_SPB_SRNG_GRD_STNG TSSGS
                INNER JOIN TB_SPB_APLY TSA ON TSSGS.PCNTSTID = TSA.PCNTSTID 
                WHERE TSSGS.PCNTSTID = #{pcntstid}
                GROUP BY TSSGS.PCNTSTID
                    , TSSGS.GRD_NM 
                    , TSSGS.RT 
            ) T
        )
        SELECT 
            APLYID
            , FIRST_SCR
            , FIRST_RKNG
            , IF(SRNG_RT_USE_YN = 'Y', (SELECT GRD_NM FROM SCORE_CARD SC WHERE SC.PCNTSTID = PCNTSTID AND SC.LOW_SCORE >= FIRST_RKNG AND SC.HIGH_SCORE <= FIRST_RKNG), '') AS FIRST_GRD
        FROM (
            SELECT 
                APLYID
                , FIRST_SCR
                , SRNG_RT_USE_YN
                , RANK() OVER (ORDER BY FIRST_SCR DESC) AS FIRST_RKNG
            FROM (
                SELECT
                    TSP.PCNTSTID
                    , TSA.APLYID
                    , TSP.SRNG_RT_USE_YN
                    , ROUND(IFNULL(SUM(TSSS.SCR) / COUNT(TSJ.JDGSID), 0), 1) AS FIRST_SCR
                FROM TB_SPB_PCNTST TSP
                    INNER JOIN TB_SPB_APLY TSA ON TSP.PCNTSTID = TSA.PCNTSTID 
                    INNER JOIN TB_SPB_JDGS TSJ ON TSA.PCNTSTID = TSJ.PCNTSTID
                    INNER JOIN TB_CMM_USER TCU ON TCU.USERID = TSJ.JDGSID
                    LEFT OUTER JOIN TB_SPB_SRNG_SBMSN TSSS ON TSSS.USERID = TSJ.JDGSID AND TSSS.APLYID = TSA.APLYID AND TSSS.FORMID = IF(TSJ.CYCL = 1, TSP.SRNG_FORMID_FIRST, TSP.SRNG_FORMID_SCND)
                WHERE 1 = 1
        ]]>
                AND TSP.PCNTSTID = #{pcntstid}
                AND TSJ.CYCL = #{cycl}
                <if test="cycl == 2">
                AND TSA.SCND_SRNG_TRGT_YN = 'Y'
                </if>
                GROUP BY TSP.PCNTSTID, TSA.APLYID, TSP.SRNG_RT_USE_YN 
            ) T
        ) T
    </select>
</mapper>