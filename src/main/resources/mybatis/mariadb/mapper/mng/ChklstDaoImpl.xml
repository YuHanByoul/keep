<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : ChklstDaoImpl.xml
	Description : 체크리스트관리
-->
<mapper namespace="com.kbrainc.plum.mng.chklst.model.ChklstDao">
    
    <!-- 체크리스트 문항 등록 -->
    <insert id="insertChklstQitem" parameterType="ChklstQitemVo" useGeneratedKeys="true" keyProperty="qitemid">
        /* ChklstDao.insertChklstQitem */
        INSERT INTO TB_ASS_CHKLST_QITEM (
            SE_CD
            , CN
            , IDNTY_MTTR
            , ALTM
            , USE_YN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{seCd}
            , #{cn}
            , #{idntyMttr}
            , #{altm}
            , #{useYn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 체크리스트 문항구분 코드 목록 -->
    <select id="selectChklstQitemCdList" parameterType="CodeVo" resultType="CodeVo">
        /* ChklstDao.selectChklstQitemCdList */
        SELECT
            A.CD
            , B.CD_NM AS UPPR_CD_NM
            , A.CD_NM
        FROM
            TB_CMM_CD A
        LEFT OUTER JOIN
            TB_CMM_CD B ON (B.CD = A.UPPR_CD)
        WHERE
            A.CDGRPID = '140'
            AND A.UPPR_CD != '0'
        ORDER BY
            A.CD ASC
    </select>
    
    <!-- 체크리스트 문항 목록 조회 -->
    <select id="selectChklstQitemList" parameterType="ChklstQitemVo" resultType="ChklstQitemVo">
        /* ChklstDao.selectChklstQitemList */
        <include refid="PaginationMapper.header"/>
        SELECT
            A.QITEMID
            , A.SE_CD
            , B.UPPR_CD_NM
            , B.CD_NM
            , A.CN
            , A.ALTM
            , A.USE_YN
            , A.REG_DT
            , A.MDFCN_DT
        FROM
            TB_ASS_CHKLST_QITEM A
        LEFT OUTER JOIN (
            SELECT
                A.CD
                , B.CD_NM AS UPPR_CD_NM
                , A.CD_NM
            FROM
                TB_CMM_CD A
            JOIN
                TB_CMM_CD B ON (B.CD = A.UPPR_CD)
            WHERE
                A.CDGRPID = '140'
                AND A.UPPR_CD != 0
        ) B ON (B.CD = A.SE_CD)    
        WHERE 
            1 = 1
         <if test="useYn != null and useYn != ''">
            AND A.USE_YN = #{useYn}
        </if>                               
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'cn'">
            AND A.CN LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <if test="searchSeCd != null and searchSeCd != ''">
            AND A.SE_CD = #{searchSeCd}
        </if>
        <include refid="PaginationMapper.footer"/>
    </select>
    
    <!-- 체크리스트 문항 정보 조회 -->
    <select id="selectChklstQitemInfo" parameterType="ChklstQitemVo" resultType="ChklstQitemVo">
        /* ChklstDao.selectChklstQitemInfo */
        SELECT
            QITEMID
            , SE_CD
            , CN
            , ALTM
            , IDNTY_MTTR
            , USE_YN
            , REG_DT
        FROM
            TB_ASS_CHKLST_QITEM
        WHERE 
            QITEMID = #{qitemid}
    </select>
    
    <!-- 체크리스트 문항 업데이트 -->
    <update id="updateChklstQitem" parameterType="ChklstQitemVo">
        /* ChklstDao.updateChklstQitem */
        UPDATE TB_ASS_CHKLST_QITEM SET
            SE_CD = #{seCd}
            , CN = #{cn}
            , ALTM = #{altm}
            , IDNTY_MTTR = #{idntyMttr}
            , USE_YN = #{useYn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
        WHERE 
            QITEMID = #{qitemid}
    </update>
    
    <!-- 체크리스트 등록 -->
    <insert id="insertChklst" parameterType="ChklstVo" useGeneratedKeys="true" keyProperty="chklstid">
        /* ChklstDao.insertChklst */
        INSERT INTO TB_ASS_CHKLST (
            CHKLST_NM
            , CHKLST_EXPLN
            , OPER_FRM_CD
            , USE_YN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{chklstNm}
            , #{chklstExpln}
            , #{operFrmCd}
            , #{useYn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 체크리스트 목록 조회 -->
    <select id="selectChklstList" parameterType="ChklstVo" resultType="ChklstVo">
        /* ChklstDao.selectChklstList */
        <include refid="PaginationMapper.header"/>
        SELECT
            A.CHKLSTID
            , A.CHKLST_NM
            , A.OPER_FRM_CD
            , D.CD_NM AS OPER_FRM_CD_NM
            , A.USE_YN
            , A.MDFCN_DT
            , A.REG_DT
            , COUNT(C.QITEMID) AS QITEM_CNT
        FROM
            TB_ASS_CHKLST A
        LEFT OUTER JOIN
            TB_ASS_CHKLST_QITEM_MAPNG B ON (B.CHKLSTID = A.CHKLSTID)
        LEFT OUTER JOIN
            TB_ASS_CHKLST_QITEM C ON (C.USE_YN = 'Y' AND C.QITEMID = B.QITEMID)
        INNER JOIN (
            SELECT
                CD
                , CD_NM
            FROM 
                TB_CMM_CD 
            WHERE 
                CDGRPID = 145
        ) D ON (D.CD = A.OPER_FRM_CD) 
        WHERE 
            1 = 1
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'cn'">
            AND A.CN LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <if test="searchOperFrmCd != null and searchOperFrmCd != ''">
            AND A.OPER_FRM_CD = #{searchOperFrmCd}
        </if>
        GROUP BY
            A.CHKLSTID
        <include refid="PaginationMapper.footer"/>
    </select>
    
    <!-- 체크리스트 정보 조회 -->
    <select id="selectChklstInfo" parameterType="ChklstVo" resultType="ChklstVo">
        /* ChklstDao.selectChklstQitemInfo */
        SELECT
            CHKLSTID
            , CHKLST_NM
            , CHKLST_EXPLN
            , OPER_FRM_CD
            , USE_YN
            , MDFCN_DT
            , REG_DT
        FROM
            TB_ASS_CHKLST
        WHERE 
            CHKLSTID = #{chklstid}
    </select>
    
    <!-- 체크리스트 업데이트 -->
    <update id="updateChklst" parameterType="ChklstVo">
        /* ChklstDao.updateChklst */
        UPDATE TB_ASS_CHKLST SET
            CHKLST_NM = #{chklstNm}
            , CHKLST_EXPLN = #{chklstExpln}
            , OPER_FRM_CD = #{operFrmCd}
            , USE_YN = #{useYn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
        WHERE 
            CHKLSTID = #{chklstid}
    </update>
    
    <!-- 사용중인 체크리스트 여부 확인 -->
    <select id="isUseChklst" parameterType="ChklstVo" resultType="ChklstVo">
        /* SrvyDao.isUseChklst */
        SELECT
            CASE WHEN COUNT(CHKLSTID) = 0 THEN 'N' ELSE 'Y' END AS IS_USE_CHKLST
        FROM
            TB_ASS_CHKLST
        WHERE
            OPER_FRM_CD = #{operFrmCd}
            AND USE_YN = 'Y'
    </select>
    
    <!-- 체크리스트 문항구성 목록 조회 -->
    <select id="selectChklstQitemMapngList" parameterType="ChklstQitemMapngVo" resultType="ChklstQitemMapngVo">
        /* ChklstDao.selectChklstQitemMapngList */
        WITH RECURSIVE CODE_CTE(LV1KEY, LV2KEY, TITLE, TREE_ORD, QITEMID) AS (
            SELECT
                IFNULL(UPPR_CD , '')  AS LV1KEY
                , CD AS LV2KEY
                , CONCAT(CD_NM) AS TITLE
                , CASE WHEN UPPR_CD  = 0 THEN 1 ELSE 2 END AS TREE_ORD
                , 0 AS QITEMID
            FROM
                TB_CMM_CD
            WHERE 
                1 = 1
                AND CDGRPID != 'G0001'
                AND CDGRPID  = '140'
            UNION ALL
            SELECT
                IFNULL(UPPR_CD, '') AS LV1KEY
                , CD AS LV2KEY
                , CD_NM AS TITLE
                , 3 AS TREE_ORD
                , D.QITEMID AS QITEMID
            FROM (
                SELECT  
                    (SELECT UPPR_CD FROM TB_CMM_CD WHERE C.SE_CD = CD) AS UPPR_CD
                    , C.SE_CD AS CD
                    , C.CN AS CD_NM
                    , B.ORDR AS ORD
                    , C.QITEMID
                FROM
                    TB_ASS_CHKLST_QITEM_MAPNG B
                LEFT OUTER JOIN
                    TB_ASS_CHKLST_QITEM C ON (B.QITEMID = C.QITEMID)
                WHERE 
                    1 = 1
                    AND B.CHKLSTID = #{chklstid}
                    AND C.USE_YN = 'Y'
            ) D
            JOIN
                CODE_CTE C
            WHERE
                UPPR_CD = C.LV2KEY
        )
        SELECT
            A.LV1KEY
            , A.LV2KEY
            , A.TITLE AS CN
            , A.TREE_ORD
            , A.QITEMID
            , B.ALTM
            , 'N' AS NEW_YN
        FROM
            CODE_CTE A
        LEFT OUTER JOIN (
            SELECT
                B.QITEMID
                , C.SE_CD
                , C.CN
                , C.IDNTY_MTTR
                , C.ALTM
                , C.USE_YN
                , C.MDFCN_DT
                , C.MDFRID
                , C.REG_DT
                , C.RGTRID
                , B.CHKLSTID
                , B.ORDR
            FROM
                TB_ASS_CHKLST_QITEM_MAPNG B
            LEFT OUTER JOIN
                TB_ASS_CHKLST_QITEM C ON (B.QITEMID = C.QITEMID)
            WHERE
                B.CHKLSTID = #{chklstid} 
        ) B ON (A.QITEMID = B.QITEMID)
        ORDER BY  
            A.LV2KEY, A.TREE_ORD, B.ORDR
    </select>
    
    <!-- 체크리스트 문항구성 등록 -->
    <insert id="insertChklstQitemMapng" parameterType="ChklstQitemVo">
        /* ChklstDao.insertChklstQitemMapng */
        INSERT INTO TB_ASS_CHKLST_QITEM_MAPNG (
            CHKLSTID
            , QITEMID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{chklstid}
            , #{qitemid}
            , #{ordr}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 체크리스트 문항구성 업데이트 -->
    <update id="updateChklstQitemMapng" parameterType="ChklstQitemVo">
        /* ChklstDao.updateChklstQitemMapng */
        UPDATE TB_ASS_CHKLST_QITEM_MAPNG SET
            ORDR = #{ordr}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
        WHERE 
            CHKLSTID = #{chklstid} 
            AND QITEMID = #{qitemid}
    </update>
    
</mapper>