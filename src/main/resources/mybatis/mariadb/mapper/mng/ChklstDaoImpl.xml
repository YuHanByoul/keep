<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : ChklstDaoImpl.xml
	Description : 체크리스트관리
-->
<mapper namespace="com.kbrainc.plum.mng.chklst.model.ChklstDao">
    
    <!-- 체크리스트 문항 등록 -->
    <insert id="insertChklstQitem" parameterType="ChklstQitemVo" useGeneratedKeys="true" keyProperty="qitemid">
        /* ChklstDao.insertChklstQitem */
        INSERT INTO TB_ASS_CHKLST_QITEM (
            SE_CD
            , CN
            , IDNTY_MTTR
            , ALTM
            , USE_YN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{seCd}
            , #{cn}
            , #{idntyMttr}
            , #{altm}
            , #{useYn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 체크리스트 문항구분 코드 목록 -->
    <select id="selectChklstQitemCdList" parameterType="CodeVo" resultType="CodeVo">
        /* ChklstDao.selectChklstQitemCdList */
        SELECT
            A.CD
            , B.CD_NM AS UPPR_CD_NM
            , A.CD_NM
        FROM
            TB_CMM_CD A
        LEFT OUTER JOIN
            TB_CMM_CD B ON (B.CD = A.UPPR_CD)
        WHERE
            A.CDGRPID = '140'
            AND A.UPPR_CD != '0'
        ORDER BY
            A.CD ASC
    </select>
    
    <!-- 체크리스트 문항 목록 조회 -->
    <select id="selectChklstQitemList" parameterType="ChklstQitemVo" resultType="ChklstQitemVo">
        /* ChklstDao.selectChklstQitemList */
        <include refid="PaginationMapper.header"/>
        SELECT
            A.QITEMID
            , A.SE_CD
            , B.UPPR_CD_NM
            , B.CD_NM
            , A.CN
            , A.ALTM
            , A.USE_YN
            , A.REG_DT
            , A.MDFCN_DT
        FROM
            TB_ASS_CHKLST_QITEM A
        LEFT OUTER JOIN (
            SELECT
                A.CD
                , B.CD_NM AS UPPR_CD_NM
                , A.CD_NM
            FROM
                TB_CMM_CD A
            JOIN
                TB_CMM_CD B ON (B.CD = A.UPPR_CD)
            WHERE
                A.CDGRPID = '140'
                AND A.UPPR_CD != 0
        ) B ON (B.CD = A.SE_CD)    
        WHERE 
            1 = 1
         <if test="useYn != null and useYn != ''">
            AND A.USE_YN = #{useYn}
        </if>                               
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'cn'">
            AND A.CN LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <if test="searchSeCd != null and searchSeCd != ''">
            AND A.SE_CD = #{searchSeCd}
        </if>
        <if test="qitemArr != null">
            AND A.QITEMID NOT IN(
            -1,
            <foreach collection="qitemArr" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <include refid="PaginationMapper.footer"/>
    </select>
    
    <!-- 체크리스트 문항 정보 조회 -->
    <select id="selectChklstQitemInfo" parameterType="ChklstQitemVo" resultType="ChklstQitemVo">
        /* ChklstDao.selectChklstQitemInfo */
        SELECT
            QITEMID
            , SE_CD
            , CN
            , ALTM
            , IDNTY_MTTR
            , USE_YN
            , REG_DT
        FROM
            TB_ASS_CHKLST_QITEM
        WHERE 
            QITEMID = #{qitemid}
    </select>
    
    <!-- 체크리스트 문항 업데이트 -->
    <update id="updateChklstQitem" parameterType="ChklstQitemVo">
        /* ChklstDao.updateChklstQitem */
        UPDATE TB_ASS_CHKLST_QITEM SET
            SE_CD = #{seCd}
            , CN = #{cn}
            , ALTM = #{altm}
            , IDNTY_MTTR = #{idntyMttr}
            , USE_YN = #{useYn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
        WHERE 
            QITEMID = #{qitemid}
    </update>
    
    <!-- 체크리스트 등록 -->
    <insert id="insertChklst" parameterType="ChklstVo" useGeneratedKeys="true" keyProperty="chklstid">
        /* ChklstDao.insertChklst */
        INSERT INTO TB_ASS_CHKLST (
            CHKLST_NM
            , CHKLST_EXPLN
            , OPER_FRM_CD
            , USE_YN
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES (
            #{chklstNm}
            , #{chklstExpln}
            , #{operFrmCd}
            , #{useYn}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
        )
    </insert>
    
    <!-- 체크리스트 목록 조회 -->
    <select id="selectChklstList" parameterType="ChklstVo" resultType="ChklstVo">
        /* ChklstDao.selectChklstList */
        <include refid="PaginationMapper.header"/>
        SELECT
            A.CHKLSTID
            , A.CHKLST_NM
            , A.OPER_FRM_CD
            , D.CD_NM AS OPER_FRM_CD_NM
            , A.USE_YN
            , A.MDFCN_DT
            , A.REG_DT
            , COUNT(C.QITEMID) AS QITEM_CNT
        FROM
            TB_ASS_CHKLST A
        LEFT OUTER JOIN
            TB_ASS_CHKLST_QITEM_MAPNG B ON (B.CHKLSTID = A.CHKLSTID)
        LEFT OUTER JOIN
            TB_ASS_CHKLST_QITEM C ON (C.USE_YN = 'Y' AND C.QITEMID = B.QITEMID)
        INNER JOIN (
            SELECT
                CD
                , CD_NM
            FROM 
                TB_CMM_CD 
            WHERE 
                CDGRPID = 145
        ) D ON (D.CD = A.OPER_FRM_CD) 
        WHERE 
            1 = 1
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'chklstNm'">
            AND A.CHKLST_NM LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'chklstExpln'">
            AND A.CHKLST_EXPLN LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <if test="searchOperFrmCd != null and searchOperFrmCd != ''">
            AND A.OPER_FRM_CD = #{searchOperFrmCd}
        </if>
        GROUP BY
            A.CHKLSTID
        <include refid="PaginationMapper.footer"/>
    </select>
    
    <!-- 체크리스트 정보 조회 -->
    <select id="selectChklstInfo" parameterType="ChklstVo" resultType="ChklstVo">
        /* ChklstDao.selectChklstQitemInfo */
        SELECT
            CHKLSTID
            , CHKLST_NM
            , CHKLST_EXPLN
            , OPER_FRM_CD
            , USE_YN
            , MDFCN_DT
            , REG_DT
        FROM
            TB_ASS_CHKLST
        WHERE 
            CHKLSTID = #{chklstid}
    </select>
    
    <!-- 체크리스트 업데이트 -->
    <update id="updateChklst" parameterType="ChklstVo">
        /* ChklstDao.updateChklst */
        UPDATE TB_ASS_CHKLST SET
            CHKLST_NM = #{chklstNm}
            , CHKLST_EXPLN = #{chklstExpln}
            , OPER_FRM_CD = #{operFrmCd}
            , USE_YN = #{useYn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
        WHERE 
            CHKLSTID = #{chklstid}
    </update>
    
    <!-- 사용중인 체크리스트 여부 확인 -->
    <select id="isUseChklst" parameterType="ChklstVo" resultType="ChklstVo">
        /* SrvyDao.isUseChklst */
        SELECT
            CASE WHEN COUNT(CHKLSTID) = 0 THEN 'N' ELSE 'Y' END AS IS_USE_CHKLST
        FROM
            TB_ASS_CHKLST
        WHERE
            OPER_FRM_CD = #{operFrmCd}
            AND USE_YN = 'Y'
    </select>
    
    <!-- 체크리스트 문항구성 목록 조회 -->
    <select id="selectChklstQitemMapngList" parameterType="ChklstQitemMapngVo" resultType="ChklstQitemMapngVo">
        /* ChklstDao.selectChklstQitemMapngList */
        WITH RECURSIVE CODE_VIEW(PSE_CD, SE_CD, CN, QITM_ORDR, TREE_ORD, QITEMID)  AS (
            SELECT
                '-' AS PSE_CD
                 , CD AS SE_CD
                 , CONCAT(CD_NM) AS CN
                 , 0 AS QITM_ORDR
                 , CASE WHEN UPPR_CD  = 0 THEN 1 ELSE 2 END AS TREE_ORD
                 , 0 AS QITEMID
            FROM
                TB_CMM_CD CCD
            WHERE
                1 = 1
              AND CCD.CDGRPID != 'G0001'
              AND CCD.CDGRPID  = '140'
              AND CCD.UPPR_CD = 0
            UNION ALL
            SELECT
                IFNULL(CCD.UPPR_CD, '-') AS PSE_CD
                 , CD AS SE_CD
                 , CONCAT(CD_NM) AS CN
                 , 0 AS QITM_ORDR
                 , CASE WHEN UPPR_CD  = 0 THEN 1 ELSE 2 END AS TREE_ORD
                 , 0 AS QITEMID
            FROM
                TB_CMM_CD CCD
            WHERE
                1 = 1
              AND CCD.CDGRPID != 'G0001'
              AND CCD.CDGRPID  = '140'
              AND CCD.UPPR_CD != 0
            UNION ALL
            SELECT
                B.SE_CD AS PSE_CD
                 , '-' AS SE_CD
                 , B.IDNTY_MTTR
                 , A.ORDR AS QITM_ORDR
                 , 3 AS TREE_ORD
                 , A.QITEMID AS QITEMID
            FROM
                TB_ASS_CHKLST_QITEM_MAPNG A
                    LEFT OUTER JOIN TB_ASS_CHKLST_QITEM B
                                    ON B.QITEMID = A.QITEMID
            WHERE
                A.CHKLSTID = #{chklstid}
        )
        SELECT
            CV.PSE_CD
             , CV.SE_CD
             , CV.CN
             , CV.QITM_ORDR
             , CV.TREE_ORD
             , CV.QITEMID
             , BB.SE_ORDR
        FROM CODE_VIEW CV
                 LEFT OUTER JOIN (
            SELECT
                ACSO.CHKLSTID
                 , ACSO.SE_CD
                 , ACSO.ORDR SE_ORDR
            FROM
                TB_ASS_CHKLST_SE_ORDR ACSO
            WHERE
                ACSO.CHKLSTID = #{chklstid}
        ) BB ON BB.SE_CD = CV.SE_CD
        ORDER BY CV.TREE_ORD, CV.QITM_ORDR, BB.SE_ORDR, CV.SE_CD
    </select>

    <!-- 체크리스트 1,2뎁스 순서 삭제 전 있는지 체크 -->
    <select id="selectChklstQitemOrdr" resultType="int">
        /* ChklstDao.selectChklstQitemOrdr */
        SELECT
            COUNT(0)
        FROM TB_ASS_CHKLST_SE_ORDR
        WHERE CHKLSTID = #{chklstid}
    </select>

    <!-- 체크리스트 문항 매핑 삭제 전 있는지 체크 -->
    <select id="selectChklstQitemMang" resultType="int">
        /* ChklstDao.selectChklstQitemMang */
        SELECT
            COUNT(0)
        FROM TB_ASS_CHKLST_QITEM_MAPNG
        WHERE CHKLSTID = #{chklstid}
    </select>

    <!-- 체크리스트 1,2뎁스 순서 삭제 -->
    <delete id="deleteChklstSeCdOrdr">
        /* ChklstDao.deleteChklstSeCdOrdr */
        DELETE FROM TB_ASS_CHKLST_SE_ORDR
        WHERE
            CHKLSTID = #{chklstid}
    </delete>

    <!-- 체크리스트 문항 매핑 삭제 -->
    <delete id="deleteChklstQitem">
        /* ChklstDao.deleteChklstQitem */
        DELETE FROM TB_ASS_CHKLST_QITEM_MAPNG
        WHERE
            CHKLSTID = #{chklstid}
    </delete>

    <!-- 체크리스트 1,2뎁스 순서 등록 -->
    <insert id="insertChklstSeCdOrdr">
        /* ChklstDao.insertChklstSeCdOrdr */
        INSERT INTO TB_ASS_CHKLST_SE_ORDR (
            CHKLSTID
            , SE_CD
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="seCds" separator="," index="index">
            (
            #{chklstid}
            , #{item}
            , #{index}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
            )
        </foreach>
    </insert>

    <!-- 체크리스트 문항구성 등록 -->
    <insert id="insertChklstQitemMapng">
        /* ChklstDao.insertChklstQitemMapng */
        INSERT INTO TB_ASS_CHKLST_QITEM_MAPNG (
            CHKLSTID
            , QITEMID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="qitemids" separator="," index="index">
            (
            #{chklstid}
            , #{item}
            , #{index}
            , NOW()
            , #{user.userid}
            , NOW()
            , #{user.userid}
            )
        </foreach>
    </insert>
</mapper>