<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : MobileAsgsysSrngDaoImpl.xml
	Description : 시설
-->
<mapper namespace="com.kbrainc.plum.mng.mobileAsgsysSrng.model.MobileAsgsysSrngDao">

    <!-- 프로그램 목록 조회 -->
    <sql id="searchCondition1">
        <!-- 키워드.프로그램명 -->
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchPrgrmNm'">
            AND A.PRGRM_NM LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <!-- 키워드.기관명 -->
        <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchInstNm'">
            AND A.INST_NM LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <!-- 진행상태  -->
        <if test="searchSttsCd != null and searchSttsCd != ''">
            AND A.STTS_CD = #{searchSttsCd}
        </if>
        <!-- 신청일 검색시작일  -->
        <if test="searchYear != null and searchYear != ''">
            AND YEAR(A.APLY_DT) >= #{searchYear} AND #{searchYear} >= YEAR(A.APLY_DT)
        </if>
        <!-- 심사위원 심사상태-->
        <if test="searchSrngSttsCd != null and searchSrngSttsCd != ''">
            AND B.SRNG_STTS_CD = #{searchSrngSttsCd}
        </if>
        <!-- 지원단 심사상태-->
        <if test="searchSrgnSttsCd != null and searchSrgnSttsCd != ''">
            AND C.SRGN_STTS_CD = #{searchSrgnSttsCd }
        </if>
        <!-- 현장점검지정일 시작일-->
        <if test="searchChckDsgnStartDt != null and searchChckDsgnStartDt != ''">
            AND C.VST_DE >= #{searchChckDsgnStartDt}
        </if>
        <!-- 현장점검지정일 종료일-->
        <if test="searchChckDsgnEndDt != null and searchChckDsgnEndDt != ''">
            AND C.VST_DE <![CDATA[<]]> CAST(CONCAT(#{searchChckDsgnEndDt},' 23:59:59') AS DATETIME)
        </if>
    </sql>

    <!-- 지원단심사 목록 조회 -->
    <select id="selectAsgsysSrngList" parameterType="MobileAsgsysSrngVo" resultType="MobileAsgsysSrngVo">
        /* MobileAsgsysSrngDao.selectAsgsysSrngList*/
        <include refid="PaginationMapper.header"/>
        SELECT
        A.PRGRMID
        , A.SPRTGRPID
        , B.PRGRM_NM        /* 프로그램명 */
        , B.STTS_CD
        , B.INST_NM         /* 기관명 */
        , A.SRGN_STTS_CD    /* (지원단)심사 진행상태 */
        , A.REG_DT          /* 배정일 */
        , A.VST_DE          /* (현장점검) 방문일 */
        , A.VST_HR          /* (현장점검) 방문시 */
        , A.VST_MNT         /* (현장점검) 방문분 */
        , CONCAT(A.VST_DE , " " , A.VST_HR , ":" , A.VST_MNT) AS VST_DT
        , C.STY_YN          /* 숙박여부 */
        , A.SPLMNT_DMND_OPNN
        , A.SRNG_OPNN
        , A.MDFCN_DT
        , A.MDFRID
        , A.RGTRID
        FROM
        TB_ASS_SPRTGRP_SRNG A
        INNER JOIN
        TB_ASS_PRGRM B ON A.PRGRMID = B.PRGRMID
        LEFT OUTER JOIN
        TB_ASS_PRGRM_DSTNCTN C ON A.PRGRMID = C.PRGRMID
        LEFT OUTER JOIN    /* 심사위원 */
        (
        SELECT
        PRGRMID
        , SRNG_STTS_CD
        , JDGSID
        , COUNT(1) AS CNT
        FROM TB_ASS_PRGRM_JDGS
        ) D ON B.PRGRMID  = D.PRGRMID
        WHERE 1=1
        AND A.SPRTGRPID = #{user.userid}
        <!-- 신청일 검색시작일  -->
        <if test="searchYear != null and searchYear != ''">
            AND YEAR(A.APLY_DT) >= #{searchYear} AND #{searchYear} >= YEAR(A.APLY_DT)
        </if>
        <!-- 심사위원 심사상태-->
        <if test="searchSrngSttsCd != null and searchSrngSttsCd != ''">
            AND D.SRNG_STTS_CD = #{searchSrngSttsCd}
        </if>
        <include refid="PaginationMapper.footer"/>
    </select>

    <!-- 지원단심사 상세 조회 -->
    <select id="selectAsgsysSrngInfo" parameterType="MobileAsgsysSrngVo" resultType="MobileAsgsysSrngVo">
        /* MobileAsgsysSrngDao.selectAsgsysSrngInfo*/
        SELECT
            A.PRGRMID
             , A.SPRTGRPID
             , B.PRGRM_NM        /* 프로그램명 */
             , B.INST_NM         /* 기관명 */
             , A.SRGN_STTS_CD    /* (지원단)심사 진행상태 */
             , A.REG_DT          /* 배정일 */
             , C.STY_YN          /* 숙박여부 */
             , A.SPLMNT_DMND_OPNN
             , A.SRNG_OPNN
             , A.MDFCN_DT
             , A.MDFRID
             , A.RGTRID
             , C.STY_NIGHT
             , C.STY_DAYTM
             , C.OPER_FRM_CD
             , C1.CD_NM AS OPER_FRM_CD_NM
             , IFNULL(E.PRGRMID,'N') AS SFTY_MNG_YN
             , B.FILEGRPID  AS APLY_FILEGRPID
             , E.BFR_CERT_FILEGRPID
             , CONCAT(A.VST_DE , " " , A.VST_HR , ":" , A.VST_MNT) AS VST_DT
             , B.CHKLSTID
             , G.CHKLST_RSLT_CN
             , G.SBMSNID
             , G.SCR
             , H.SBMSNID    AS APLCNT_SBMSNID
        FROM
            TB_ASS_SPRTGRP_SRNG A
                LEFT OUTER JOIN
            TB_ASS_PRGRM B ON A.PRGRMID = B.PRGRMID
                LEFT OUTER JOIN
            TB_ASS_PRGRM_DSTNCTN C ON A.PRGRMID = C.PRGRMID
            INNER JOIN (
                SELECT
                    CD
                     , CD_NM
                FROM
                    TB_CMM_CD
                WHERE
                    CDGRPID = 120
            ) C1 ON (C1.CD = C.OPER_FRM_CD)
                LEFT OUTER JOIN
            TB_ASS_SFTY_MNG E ON A.PRGRMID = E.PRGRMID
                LEFT OUTER JOIN
            TB_ASS_SPRTGRP_SRNG F ON A.PRGRMID = F.PRGRMID
                LEFT OUTER JOIN
            (
                SELECT PRGRMID , SBMSNID ,CHKLSTID, CHKLST_RSLT_CN ,SCR
                FROM TB_ASS_CHKLST_SBMSN
                WHERE SBMSN_SE_CD ='242102'
            ) G ON A.PRGRMID = G.PRGRMID
                LEFT OUTER JOIN
            (
                SELECT PRGRMID , SBMSNID ,CHKLSTID, CHKLST_RSLT_CN ,SCR, USERID
                FROM TB_ASS_CHKLST_SBMSN
                WHERE SBMSN_SE_CD ='242101'
            ) H ON A.PRGRMID = H.PRGRMID AND B.APLCNTID = H.USERID /*자가진단*/
        WHERE 1=1
          AND  A.PRGRMID = #{prgrmid}
    </select>

    <!-- 지원단심사 체크리스트 조회 -->
    <select id="selectCheckList" parameterType="MobileAsgsysSrngVo" resultType="MobileAsgsysSrngVo">
        /* MobileAsgsysSrngDao.selectCheckList*/
        WITH RECURSIVE CODE_CTE(LV1KEY, LV2KEY, TITLE, TREE_ORD, QITEMID) AS (
            SELECT
                IFNULL(UPPR_CD , '')  AS LV1KEY
                 , CD AS LV2KEY
                 , CONCAT(CD_NM) AS TITLE
                 , CASE WHEN UPPR_CD  = 0 THEN 1 ELSE 2 END AS TREE_ORD
                 , 0 AS QITEMID
            FROM
                TB_CMM_CD
            WHERE
                1 = 1
              AND CDGRPID != 'G0001'
            AND CDGRPID  = '140'
        UNION ALL
        SELECT
            IFNULL(UPPR_CD, '') AS LV1KEY
             , CD AS LV2KEY
             , CD_NM AS TITLE
             , 3 AS TREE_ORD
             , D.QITEMID AS QITEMID
        FROM (
                 SELECT
                         (SELECT UPPR_CD FROM TB_CMM_CD WHERE C.SE_CD = CD) AS UPPR_CD
                      , C.SE_CD AS CD
                      , C.CN AS CD_NM
                      , B.ORDR AS ORD
                      , C.QITEMID
                 FROM
                     TB_ASS_CHKLST_QITEM_MAPNG B
                         LEFT OUTER JOIN
                     TB_ASS_CHKLST_QITEM C ON (B.QITEMID = C.QITEMID)
                 WHERE
                     1 = 1
                   AND B.CHKLSTID = #{chklstid}
                   AND C.USE_YN = 'Y'
             ) D
                 JOIN
             CODE_CTE C
        WHERE
            UPPR_CD = C.LV2KEY
            )
        SELECT
            A.LV1KEY
             , A.LV2KEY
             , A.TITLE    AS CN
             , A.TREE_ORD
             , A.QITEMID
             , B.ALTM
             , B.ORDR
             , B.SCR
             , B.APLCNT_SCR
        FROM
            CODE_CTE A
                LEFT OUTER JOIN (
                SELECT
                    B.QITEMID
                     , C.SE_CD
                     , C.CN
                     , C.IDNTY_MTTR
                     , C.ALTM
                     , C.USE_YN
                     , C.MDFCN_DT
                     , C.MDFRID
                     , C.REG_DT
                     , C.RGTRID
                     , B.CHKLSTID
                     , B.ORDR
                     , D.SCR
                     , E.SCR    AS APLCNT_SCR
                FROM
                    TB_ASS_CHKLST_QITEM_MAPNG B
                        LEFT OUTER JOIN
                    TB_ASS_CHKLST_QITEM C ON (B.QITEMID = C.QITEMID)
                        LEFT OUTER JOIN
                    (
                        SELECT
                            SBMSNID
                             , QITEMID
                             , SCR
                        FROM
                            TB_ASS_CHKLST_ANS
                        WHERE
                            SBMSNID = #{sbmsnid}
                    ) D ON (C.QITEMID = D.QITEMID)
                        LEFT OUTER JOIN
                    (
                        SELECT
                            SBMSNID
                             , QITEMID
                             , SCR
                        FROM
                            TB_ASS_CHKLST_ANS
                        WHERE
                            SBMSNID = #{aplcntSbmsnid}
                    ) E ON (C.QITEMID = E.QITEMID)
                WHERE
                    B.CHKLSTID = #{chklstid}
            ) B ON (A.QITEMID = B.QITEMID)
        ORDER BY LV2KEY, TREE_ORD, B.ORDR
    </select>
</mapper>