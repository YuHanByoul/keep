<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : MemberDaoImpl.xml
	Description : 사용자관리
-->
<mapper namespace="com.kbrainc.plum.mng.member.model.MemberDao">
    
	<!-- 사용자정보 저장 --> 
  	<insert id="insertMember" parameterType="MemberVo" useGeneratedKeys="true" keyProperty="userid">
   		/* MemberDao.insertMember */
        INSERT INTO TB_CMM_USER (
               ACNT
               ,PSWD
               ,NM
               ,NCNM
               ,MOBLPHON
               ,TELNO
               ,EML
               ,BRDT
               ,GNDR
               ,ZIP
               ,ADDR
               ,ADDR_DTL
               ,INSTID
               ,INSTPIC_ROLE_CD
               ,TOS_AGRE_YN
               ,PRIVCY_AGRE_YN
               ,MARKT_EML_AGRE_YN
               ,MARKT_SMS_AGRE_YN
               ,PRVC_VLDTY
               ,ACNT_LOCK_YN
               ,ACNT_LOCK_CD
               ,TMPR_PSWD_YN
               ,PSWD_MDFCN_DT
               ,STTS_CD
               ,DEL_YN
               ,BLCKLST_YN
               ,MDFCN_DT
               ,MDFRID
               ,REG_DT
               ,RGTRID
		  )VALUES(
                #{acnt}
               ,#{pswd}
               ,#{nm}
               ,#{ncnm}
               ,#{moblphon}
               ,#{telno}
               ,#{eml}
               ,#{brdt}
               ,#{gndr}
               ,#{zip}
               ,#{addr}
               ,#{addrDtl}
               ,#{instid}
               ,#{instpicRoleCd}
               ,'Y'
               ,'Y'
               ,#{marktEmlAgreYn}
               ,#{marktSmsAgreYn}
               ,1
               ,#{acntLockYn}
               ,#{acntLockCd}
               ,#{tmprPswdYn}
               ,#{pswdMdfcnDt}
               ,#{sttsCd}
               ,#{delYn}
               ,'N'
               ,NOW()
               ,#{user.userid}
               ,NOW()
               ,#{user.userid}
		  )
	</insert>
    
    <!-- 사용자 관심분야 저장 --> 
    <insert id="insertItrstfld" parameterType="MemberVo" >
         /* MemberDao.insertItrstfld */
         INSERT INTO TB_CMM_USER_ITRSTFLD(
              USERID
              ,ITRSTFLD_CD
              ,MDFCN_DT
              ,MDFRID
              ,REG_DT
              ,RGTRID
         )VALUES
          <foreach item="item" collection="itrstfldCds"  separator=",">
           (
             #{userid}
             ,#{item}
             ,NOW()
             ,#{user.userid       }
             ,NOW()
             ,#{user.userid       }
            )
          </foreach>
    </insert>
    
    <!-- 사용자 관심분야 삭제 --> 
    <insert id="deleteItrstfld" parameterType="MemberVo" >
         /* MemberDao.deleteItrstfld */
         DELETE FROM TB_CMM_USER_ITRSTFLD
         WHERE 1=1 
           AND userid = #{userid}
        <if test="itrstfldCd != null and itrstfldCd != '' ">
           AND ITRSTFLD_CD = #{itrstfldCd}
        </if>
    </insert>
    
    <!-- 사용자 간편로그인 저장 --> 
    <insert id="insertEsylgn" parameterType="MemberVo" >
         /* MemberDao.insertEsylgn */
         INSERT INTO TB_CMM_USER_ESYLGN(
              USERID
              ,ESYLGN_CD
         )VALUES
          <foreach item="item" collection="esylgnCds"  separator=",">
            (
              #{userid}
             ,#{item}
            )
          </foreach>
    </insert>
    
    <!-- 사용자 환경분야 저장 --> 
    <insert id="insertEnvfld" parameterType="MemberVo" >
         /* MemberDao.insertItrstyfld */
         INSERT INTO TB_CMM_USER_ENVFLD(
              USERID
              ,ENVFLD_CD
              ,MDFCN_DT
              ,MDFRID
              ,REG_DT
              ,RGTRID
         )VALUES
          <foreach item="item" collection="envfldCds"  separator=",">
          (
             #{userid}
            ,#{item}
            ,NOW()
            ,#{user.userid}
            ,NOW()
            ,#{user.userid}
           )
          </foreach>
    </insert>
    
    <!-- 사용자 환경분야 삭제 --> 
    <insert id="deleteEnvfld" parameterType="MemberVo" >
         /* MemberDao.deleteEnvfld */
         DELETE FROM TB_CMM_USER_ENVFLD
         WHERE 1=1 
           AND userid = #{userid}
        <if test="envfldCd != null and envfldCd != '' ">
           AND ENVFLD_CD = #{envfldCd}
        </if>
    </insert>
    
    <!-- 사용자 간편로그인 삭제 --> 
    <insert id="deletetEsylgn" parameterType="MemberVo" >
         /* MemberDao.deletetEsylgn */
         DELETE FROM  TB_CMM_USER_ESYLGN
         WHERE 1=1 
           AND USERID = #{userid} 
        <if test="esylgnCd != null and esylgnCd != '' ">
           AND ESYLGN_CD = #{esylgnCd}
        </if>
    </insert>
    
    <!-- 계정중복 확인 --> 
	<select id="checkIdYn" parameterType="MemberVo" resultType="String">
    	/* MemberDao.checkIdYn */
    	SELECT MAX(YN)
        FROM
        (
            SELECT CASE WHEN COUNT(ACNT) > 0  THEN 'Y'
                        ELSE 'N'
                    END AS YN
              FROM TB_CMM_USER
             WHERE 1=1
               -- AND DEL_YN = 'N'
               AND ACNT = #{acnt}
            UNION ALL
            SELECT CASE WHEN COUNT(ACNT) > 0  THEN 'Y'
                        ELSE 'N'
                    END AS YN
              FROM TB_CMM_USER_DRMNCY
             WHERE 1=1 
               AND ACNT = #{acnt}
        ) T
	</select>
	
    <!-- 사용자정보 조회 -->
    <select id="selectMemberInfo" parameterType="MemberVo" resultType="MemberVo"> 
    	/* MemberDao.selectMemberInfo */
             SELECT
                A.USERID
               ,A.ACNT
               ,A.PSWD
               ,A.NM
               ,A.NCNM
               ,A.MOBLPHON
               ,A.TELNO
               ,A.EML
               ,A.BRDT
               ,A.GNDR
               ,A.ZIP
               ,A.ADDR
               ,A.ADDR_DTL
               ,A.INSTID
               ,A.INSTPIC_ROLE_CD
               ,A.TOS_AGRE_YN
               ,A.PRIVCY_AGRE_YN
               ,A.MARKT_EML_AGRE_YN
               ,A.MARKT_SMS_AGRE_YN
               ,A.PRVC_VLDTY
               ,A.ACNT_LOCK_YN
               ,A.ACNT_LOCK_CD
               ,A.TMPR_PSWD_YN
               ,A.PSWD_MDFCN_DT
               ,A.STTS_CD
               ,A.DEL_YN
               ,A.BLCKLST_YN
               ,A.LGN_DT
               ,A.LGN_FAIL_CNT
               ,A.MDFCN_DT
               ,A.MDFRID
               ,A.REG_DT
               ,A.RGTRID
               ,(SELECT GROUP_CONCAT(ITRSTFLD_CD SEPARATOR',') FROM TB_CMM_USER_ITRSTFLD  WHERE USERID = #{userid} ) AS ITRSTFLD_CD
               ,(SELECT GROUP_CONCAT(ENVFLD_CD SEPARATOR',') FROM TB_CMM_USER_ENVFLD  WHERE USERID = #{userid} ) AS ENVFLD_CD
               <!-- ,(SELECT GROUP_CONCAT(ESYLGN_CD SEPARATOR',') FROM TB_CMM_USER_ESYLGN  WHERE USERID = #{userid} ) AS ESYLGN_CD -->
               ,IFNULL(B.ROLECD ,'' ) AS ROLEIDS
               ,CASE WHEN INSTR(B.ROLECD,'1') > 0 OR INSTR(B.ROLECD,'5') > 0 THEN 'A'
                     WHEN A.INSTID IS NOT NULL THEN 'C'
                     ELSE 'U'
               END AS ROLECD
             FROM
               TB_CMM_USER A
               LEFT OUTER JOIN (
                 SELECT USERID , GROUP_CONCAT(ROLEID SEPARATOR  ',') AS ROLECD FROM TB_CMM_ROLE_USER  WHERE USERID = #{userid} 
               )B
               ON(A.USERID =B.USERID)
           WHERE A.USERID = #{userid}
    </select>
    
    <!-- 사용자정보 목록 조회 -->
    <select id="selectMemberList" parameterType="MemberVo" resultType="MemberVo">
        /* MemberDao.selectMemberList */
        <include refid="PaginationMapper.header"/>
             SELECT 
                A.*
                FROM 
                (
                  SELECT
                      A.USERID
                      ,A.ACNT
                      ,A.NM
                      ,A.EML
                      ,A.MOBLPHON
                      ,A.BLCKLST_YN
                      ,A.DEL_YN
                      ,A.REG_DT
                      ,A.MDFCN_DT
                      ,A.INSTID
                      ,A.STTS_CD
                      ,CASE WHEN IFNULL(B.ROLECD,'U') = 'U' AND A.INSTID IS NOT NULL THEN 'C'
                           WHEN IFNULL(B.ROLECD,'U') = 'U' AND A.INSTID IS NULL THEN 'U'
                           ELSE B.ROLECD
                      END AS ROLECD 
                    FROM
                      TB_CMM_USER A
                      LEFT OUTER JOIN (    
                           SELECT
                               A.USERID
                              ,CASE WHEN INSTR(GROUP_CONCAT(A.ROLEID),'1') > 0 OR INSTR(GROUP_CONCAT(A.ROLEID),'5') > 0 THEN 'A'             
                                    ELSE 'U'
                               END AS ROLECD
                            FROM 
                              TB_CMM_ROLE_USER A
                              ,TB_CMM_ROLE B
                             WHERE 1=1
                               AND A.ROLEID = B.ROLEID
                              GROUP BY USERID
                       ) B
                      ON(A.USERID = B.USERID)
                ) A
           WHERE 1=1
 	    <if test="searchKeyword != null and searchKeyword != '' and searchType == 'id'">
	       AND A.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
	    </if>
 	    <if test="searchKeyword != null and searchKeyword != '' and searchType == 'name'">
	       AND A.NM LIKE CONCAT('%',#{searchKeyword},'%')
	    </if>
 	    <if test="searchStartDay != null and searchStartDay != ''">
			AND A.REG_DT >= #{searchStartDay}
		</if>
		<if test="searchEndDay != null and searchEndDay != ''">
			AND A.REG_DT <![CDATA[<]]> CAST(CONCAT(#{searchEndDay},' 23:59:59') AS DATETIME)
		</if>
		<if test="searchRoleCd != null and searchRoleCd != ''">
			AND A.ROLECD = #{searchRoleCd}
		</if>
		<if test="searchSttsCd != null and searchSttsCd != ''">
			AND A.STTS_CD = #{searchSttsCd}
		</if>
        
        <include refid="PaginationMapper.footer"/>
    </select>
   
    <!-- 사용자수정 -->
    <update id="updateMember" parameterType="MemberVo">
	    /* MemberDao.updateMember */
	    UPDATE TB_CMM_USER SET
               NM                = #{nm}                         
               ,NCNM              = #{ncnm}                       
               ,MOBLPHON          = #{moblphon}                   
               ,TELNO             = #{telno}                      
               ,EML               = #{eml}                        
               ,BRDT              = #{brdt}                       
               ,GNDR              = #{gndr}                       
               ,ZIP               = #{zip}                        
               ,ADDR              = #{addr}                       
               ,ADDR_DTL          = #{addrDtl}                    
               ,INSTID            = #{instid}                     
               ,INSTPIC_ROLE_CD   = #{instpicRoleCd}
              <!--           
               ,TOS_AGRE_YN       = #{tosAgreYn}                          
               ,PRIVCY_AGRE_YN    = #{privcyAgreYn}                          
               ,MARKT_EML_AGRE_YN = #{marktEmlAgreYn}             
               ,MARKT_SMS_AGRE_YN = #{marktSmsAgreYn}             
               ,PRVC_VLDTY        = #{prvcyVldty} 
              -->
               <choose>
                  <when test='acntLockYn == "N" '>
                   ,ACNT_LOCK_YN      = 'N'                 
                   ,ACNT_LOCK_CD      = null
                   ,LGN_FAIL_CNT      = 0
                  </when>
                  <otherwise>
                   ,ACNT_LOCK_YN      = 'Y'                 
                   ,ACNT_LOCK_CD      = #{acntLockCd}
                  </otherwise>
               </choose>
               ,STTS_CD           = #{sttsCd}                     
               ,MDFCN_DT          = NOW()                         
               ,MDFRID            = #{user.userid}                
         WHERE userid = #{userid} 
    </update>
    
    <!-- 회원의 임시비밀번호를 수정한다 -->
    <update id="updateMemberTempPwd" parameterType="TempPwdVo">
	    /* MemberDao.updateMemberTempPwd */
	    UPDATE TB_CMM_USER SET 
			    PSWD = #{pswd}
			   ,TMPR_PSWD_YN = 'Y'
			   ,PSWD_MDFCN_DT = NOW()
			   ,MDFCN_DT = NOW()          
			   ,MDFRID = #{user.userid}
	     WHERE userid = #{userid} 
    </update>
    
    <!-- 사용자들의 연락정보를 조회한다 -->
    <select id="selectUserContactInfoList" parameterType="ContractVo" resultType="ContractVo">
        /* MemberDao.selectUserContactInfoList */
        WITH B 
		AS 
		(
			SELECT COUNT(1) AS TOTALCOUNT FROM TB_CMM_USER WHERE USERID IN 
			<foreach item="item" collection="userids" open="(" close=")" separator=",">
			    #{item}
			</foreach>
		)
		SELECT B.totalCount - ROW_NUMBER() OVER (ORDER BY (SELECT 1)) + 1 AS rowNumber,
		       A.USERID
		      ,A.ACNT
		      ,A.NM
		      ,A.EMAIL
		      ,A.MOBNO
		 FROM TB_CMM_USER A CROSS JOIN B
		 WHERE A.USERID IN
		 <foreach item="item" collection="userids" open="(" close=")" separator=",">
		     #{item}
	   	 </foreach>
    </select>
    
    <!-- 휴면계정 사용자들의 연락정보를 조회한다 -->
    <select id="selectUserDrmncyContactInfoList" parameterType="ContractVo" resultType="ContractVo">
        /* MemberDao.selectUserDrmncyContactInfoList */
        WITH B 
		AS 
		(
			SELECT COUNT(1) AS TOTALCOUNT FROM TB_CMM_USER_DRMNCY WHERE USERID IN 
			<foreach item="item" collection="userids" open="(" close=")" separator=",">
			    #{item}
			</foreach>
		)
		SELECT B.totalCount - ROW_NUMBER() OVER (ORDER BY (SELECT 1)) + 1 AS rowNumber,
		       A.USERID
		      ,A.ACNT
		      ,A.NM
		      ,A.EMAIL
		      ,A.MOBNO
		 FROM TB_CMM_USER_DRMNCY A CROSS JOIN B
		 WHERE A.USERID IN
		 <foreach item="item" collection="userids" open="(" close=")" separator=",">
		     #{item}
	   	 </foreach>
    </select>
    
    <!-- 휴면회원정보 목록을 조회한다 -->
    <select id="selectDrmncyMemberList" parameterType="MemberVo" resultType="MemberVo">
        /* MemberDao.selectDrmncyMemberList */
		<include refid="PaginationMapper.header"/> 
	     SELECT 
	       B.USERID
	      ,B.ACNT
	      ,B.NM
	      ,B.EMAIL
	      ,B.MOBNO
	      ,A.DEL_YN
	      ,A.REG_DT
	      ,A.MDFCN_DT
	      ,B.LOGIN_DT
		  ,B.REG_DT AS DRMNCY_DT
		  ,DATE_ADD(B.REG_DT, INTERVAL 1 YEAR) AS EXPECTED_DEL_DT
	    FROM
	     TB_CMM_USER A
	     ,TB_CMM_USER_DRMNCY B
	     WHERE 1=1
	       	AND B.USER_SE_CD = 'P'
	       	AND A.USERID = B.USERID
 	    <if test="searchKeyword != null and searchKeyword != '' and searchType == 'id'">
	       	AND B.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
	    </if>
 	    <if test="searchKeyword != null and searchKeyword != '' and searchType == 'name'">
	       	AND B.NM LIKE CONCAT('%',#{searchKeyword},'%')
	    </if>
	    <if test="searchStartDay != null and searchStartDay != ''">
			AND A.REG_DT >= #{searchStartDay}
		</if>
		<if test="searchEndDay != null and searchEndDay != ''">
			AND A.REG_DT <![CDATA[<]]> CAST(CONCAT(#{searchEndDay},' 23:59:59') AS DATETIME)
		</if>
		<if test="searchDelYn != null">
		    AND A.DEL_YN IN 
		    <foreach item="item" collection="searchDelYn" open="(" close=")" separator=",">
		    	#{item}
		   	</foreach>
		</if>
		<include refid="PaginationMapper.footer"/>
	</select>

    <!-- 로그인접속정보 이력 조회 -->
    <select id="selectLoginHistList" parameterType="MemberVo" resultType="LoginHistVo">
    	/* MemberDao.selectLoginHistList */
    	<include refid="PaginationMapper.header"/> 
	    SELECT LOGIN_HIST_ID
		       ,USERID
			   ,DEVICE_CD
			   ,IP
			   ,LOGIN_DT
 		   FROM TB_CMM_LOGIN_HIST
		  WHERE USERID = #{userid}
        <include refid="PaginationMapper.footer"/>
    </select> 

    <!-- 수신이메일 정보 조회 -->
    <select id="selectEamilSndngHistInfo" parameterType="MailVo" resultType="MailVo"> 
        /* MemberDao.selectEamilSndngHistInfo */
        SELECT A.EMAIL_SNDNG_HIST_ID AS mailSndngHistId
             ,B.NM AS sndngUserNm
             ,A.REG_DT AS regDt
             ,A.TITLE
             ,A.CNTNTS
        FROM TB_CMM_EMAIL_SNDNG_HIST A
        LEFT OUTER JOIN TB_CMM_USER B ON A.SNDNG_USERID = B.USERID
       WHERE A.EMAIL_SNDNG_HIST_ID = #{mailSndngHistId} 
         AND A.RCPTN_USERID = #{rcptnUserid}
    </select>
    
    <!-- 수신이메일 이력 조회 -->
    <select id="selectEmailReceiveHistList" parameterType="MailVo" resultType="MailVo">
        /* MemberDao.selectEmailReceiveHistList */
        <include refid="PaginationMapper.header"/> 
        SELECT A.EMAIL_SNDNG_HIST_ID AS mailSndngHistId
               ,B.NM AS sndngUserNm
               ,A.TITLE
               ,A.REG_DT AS regDt
           FROM TB_CMM_EMAIL_SNDNG_HIST A
           LEFT OUTER JOIN TB_CMM_USER B ON A.SNDNG_USERID = B.USERID
          WHERE A.RCPTN_USERID = #{rcptnUserid}
        <include refid="PaginationMapper.footer"/>
    </select>
    
    <!-- 사용자정보 목록 엑셀 다운로드 -->
    <select id="selectMemberExcelList" parameterType="MemberVo" resultType="MemberVo">
        /* MemberDao.selectMemberExcelList */
	    SELECT 
	       A.USERID
	      ,A.ACNT
	      ,A.NM
	      ,A.EMAIL
	      ,A.MOBNO
	      ,A.DEL_YN
	      ,A.REG_DT
	      ,A.MDFCN_DT
	      ,B.BRTHDY 
	      ,B.ADDR 
	      ,B.ADDR_DTL 
	      ,B.INTRCN
	    FROM
	      TB_CMM_USER A
	     ,TB_CMM_USER_DTL B
	     WHERE 1=1
	       AND A.USER_SE_CD = 'P'
	       AND A.USERID = B.USERID
 	     <if test="searchKeyword != null and searchKeyword != '' and searchType == 'id'">
	       AND A.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
	     </if>
 	     <if test="searchKeyword != null and searchKeyword != '' and searchType == 'name'">
	       AND A.NM LIKE CONCAT('%',#{searchKeyword},'%')
	     </if>
	     <if test="searchStartDay != null and searchStartDay != ''">
			AND A.REG_DT >= #{searchStartDay}
		</if>
		<if test="searchEndDay != null and searchEndDay != ''">
			AND A.REG_DT <![CDATA[<]]> CAST(CONCAT(#{searchEndDay},' 23:59:59') AS DATETIME)
		</if>
		<if test="searchDelYn != null">
		    AND A.DEL_YN IN 
		    <foreach item="item" collection="searchDelYn" open="(" close=")" separator=",">
		    	#{item}
		   	</foreach>
		</if>
    </select>
    
    <!--*********************************************************************************************-->
     
    <!-- 사용자 블랙리스트 내역 저장 --> 
    <insert id="insertBlcklstDsctn" parameterType="BlcklstDsctnVo" >
         /* MemberDao.insertBlcklstDsctn */
         INSERT INTO TB_CMM_USER_BLCKLST_DSCTN(
             USERID
             ,BLCKLST_RSN
             ,BLCKLST_YN
             ,PRCS_DT
             ,MDFCN_DT
             ,MDFRID
             ,REG_DT
             ,RGTRID
         )VALUES
          <foreach item="item" collection="blcklstIds"  separator=",">
          (
             #{item}
            ,#{blcklstRsn}
            ,#{blcklstYn}
            ,NOW()
            ,NOW()
            ,#{user.userid}
            ,NOW()
            ,#{user.userid}
           )
          </foreach>
    </insert>
    
    <!-- 블랙리스트여부 수정한다 -->
    <update id="updateMemberBlcklstYn" parameterType="BlcklstDsctnVo">
        /* MemberDao.updateMemberBlcklstYn */
        UPDATE TB_CMM_USER SET 
               BLCKLST_YN = #{blcklstYn}
               ,MDFCN_DT = NOW()          
               ,MDFRID = #{user.userid}
         WHERE 1=1
           AND userid IN
           (
             <foreach item="item" collection="blcklstIds"  separator=",">
                #{item}
             </foreach>
           )  
    </update>
    
    <!-- 사용자 블랙리스트 검색 --> 
    <select id="selectBlcklstMemberChkList" parameterType="BlcklstDsctnVo" resultType="BlcklstDsctnVo"  >
     SELECT 
        CASE 
          WHEN IFNULL(AA.BLCKLST_YN,'N') != #{blcklstYn} AND IFNULL(BB.BLCKLST_YN,'N') != #{blcklstYn}  THEN '1'  -- user 업데이트, blacklst 인서트  대상
          WHEN IFNULL(AA.BLCKLST_YN,'N') != #{blcklstYn} AND IFNULL(BB.BLCKLST_YN,'N')  = #{blcklstYn}  THEN '2'  -- user  업데이트 대상
          WHEN IFNULL(AA.BLCKLST_YN,'N')  = #{blcklstYn} AND IFNULL(BB.BLCKLST_YN,'N') != #{blcklstYn}  THEN '3'  -- blacklst  인서트 대상
          WHEN IFNULL(AA.BLCKLST_YN,'N')  = #{blcklstYn} AND IFNULL(BB.BLCKLST_YN,'N')  = #{blcklstYn}  THEN '4'  -- 업데이트 대상 아님
        END AS UPDT_CD
        ,AA.USERID
       FROM
         TB_CMM_USER AA
         LEFT OUTER JOIN 
         (
           SELECT 
              A.USERID
              ,A.BLCKLST_YN 
              ,B.BLCKLSTID
             FROM 
             TB_CMM_USER_BLCKLST_DSCTN A
             INNER JOIN 
             (
              SELECT 
                  USERID
                  ,MAX(BLCKLSTID) AS BLCKLSTID
                FROM 
                  TB_CMM_USER_BLCKLST_DSCTN 
                WHERE 1=1
                 AND USERID IN (
                     <foreach item="item" collection="blcklstIds"  separator=",">
                      #{item}
                     </foreach>
                 )
                 GROUP BY USERID
             )B ON A.BLCKLSTID = B.BLCKLSTID 
         )BB ON AA.USERID = BB.USERID
        WHERE 1=1
          AND AA.USERID IN (
            <foreach item="item" collection="blcklstIds"  separator=",">
             #{item}
            </foreach>
          )
    </select>
    
    <!-- 블랙리스트 사용자  검색 --> 
    <select id="selectBlcklstMemberList" parameterType="BlcklstDsctnVo" resultType="MemberVo"  >
       SELECT 
         *
         FROM
           TB_CMM_USER A
        WHERE 1=1  
          AND A.USERID IN (
            <foreach item="item" collection="blcklstIds"  separator=",">
             #{item}
            </foreach>
          )
    </select>
    
    <!-- 계정 잠김 해제 처리-->
    <update id="updateLockStts" parameterType="MemberVo">
        /* MemberDao.updateLockStts */
        UPDATE TB_CMM_USER SET
               ACNT_LOCK_YN      = 'N'                 
               ,ACNT_LOCK_CD      = null
               ,LGN_FAIL_CNT      = 0
               ,MDFCN_DT          = NOW()                         
               ,MDFRID            = #{user.userid}                
         WHERE userid = #{userid} 
    </update>
    
    <!-- 탈퇴 처리-->
    <update id="updateMemberDelYn" parameterType="MemberVo">
        /* MemberDao.updateLockStts */
        UPDATE TB_CMM_USER SET
               STTS_CD      = '9'
               -- ,DEL_YN = #{delYn}
               ,PRVC_VLDTY  =  0                 
               ,ACNT_LOCK_YN      = 'Y'                 
               ,ACNT_LOCK_CD      = '101106'
               ,MDFCN_DT          = NOW()                         
               ,MDFRID            = #{user.userid}                
         WHERE userid = #{userid} 
    </update>
    
    <!-- 회원 역할 권한 등록 -->
    <insert id="insertRoleId" parameterType="MemberVo" >
        /* MemberDao.insertRoleId */
        INSERT INTO TB_CMM_ROLE_USER (
           ROLEID
           ,USERID
           ,ROLE_STRT_DD
           ,ROLE_END_DD
           ,MDFCN_DT
           ,MDFRID
           ,REG_DT
           ,RGTRID
        ) VALUES (
           #{roleid  }
           ,#{userid }
           ,DATE_FORMAT(NOW(),'%Y-%m-%d')
           ,'9999-12-31'  
           ,NOW()
           ,#{userid }
           ,NOW()
           ,#{userid}
        )
    </insert>
    <!-- 회원 기관정보 수정--> 
    <update id="updateInstMemberRole" parameterType="MemberVo" >
         /* MemberDao.updateInstMemberRole */
        UPDATE TB_CMM_USER SET
               INSTID            = #{instid}                     
               ,INSTPIC_ROLE_CD   = #{instpicRoleCd}
               ,MDFCN_DT          = NOW()                         
               ,MDFRID            = #{user.userid}                
         WHERE 1=1
           AND userid = #{userid}
    </update>
    <!-- 회원 역할 정보 삭제--> 
    <update id="deleteRoleUser" parameterType="MemberVo" >
         /* MemberDao.deleteRoleUser */
        DELETE FROM  TB_CMM_ROLE_USER                
          WHERE 1=1
            AND userid = #{userid}
            AND ROLEID = #{roleid}
    </update>
    
</mapper>