<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : InfntAplyDaoImpl.xml
	Description : 참여신청관리 -> 교육신청관리
-->
<mapper namespace="com.kbrainc.plum.mng.prtpn.infntAply.model.InfntAplyDao">
    
    <!-- 교육신청 관리 게시글 목록 조회 -->
    <select id="selectInfntAplyList" parameterType="InfntAplyVo" resultType="InfntAplyVo">
        /* InfntAplyDao.selectInfntAplyList */
        <include refid="PaginationMapper.header"/>
        SELECT
            A.PRGRMID
          , A.EDU_YR
          , B.CLSSRMID
          , B.CLSSRM_NM
          , A.PRGRM_NM
          , NVL(CONCAT(REPLACE(SUBSTRING_INDEX(F.YM, '-', -1), '0', ''), '월'), '-') EDU_MM
          , CDT.CD_NM AS RCPT_MTHD_NM
          , A.EDU_NOPE
          , D.PRGRM_SCHDLID
          , NVL(E1.CNT, 0) AS WTNG_APLY_CNT
          , NVL(E2.CNT, 0) AS WTNG_APPRV_CNT
          , NVL(E3.CNT, 0) AS APLY_CMPLT_CNT
          , NVL(E4.CNT, 0) AS CNCL_APLY_CNT
          , NVL(E5.CNT, 0) AS DNL_APPRV_CNT
          , D.REG_DT
        FROM
            TB_EDU_INFNT_PRGRM A
                LEFT OUTER JOIN TB_EDU_CLSSRM B ON A.CLSSRMID = B.CLSSRMID
                LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME C ON A.PRGRMID = C.PRGRMID
                LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL D ON C.TMEID = D.TMEID
        
                LEFT OUTER JOIN (
                                SELECT
                                    TB2.PRGRM_SCHDLID
                                  , COUNT(TB1.APLYID) AS CNT
                                FROM
                                    TB_EDU_INFNT_PRGRM_APLY TB1
                                        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL TB2 ON TB1.TME_SCHDLID = TB2.TME_SCHDLID
                                WHERE
                                    TB1.STTS_CD = 180101
                                GROUP BY TB2.PRGRM_SCHDLID
                                ) E1 ON D.PRGRM_SCHDLID = E1.PRGRM_SCHDLID
                LEFT OUTER JOIN (
                                SELECT
                                    TB2.PRGRM_SCHDLID
                                  , COUNT(TB1.APLYID) AS CNT
                                FROM
                                    TB_EDU_INFNT_PRGRM_APLY TB1
                                        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL TB2 ON TB1.TME_SCHDLID = TB2.TME_SCHDLID
                                WHERE
                                    TB1.STTS_CD = 180102
                                GROUP BY TB2.PRGRM_SCHDLID
                                ) E2 ON D.PRGRM_SCHDLID = E2.PRGRM_SCHDLID
                LEFT OUTER JOIN (
                                SELECT
                                    TB2.PRGRM_SCHDLID
                                  , COUNT(TB1.APLYID) AS CNT
                                FROM
                                    TB_EDU_INFNT_PRGRM_APLY TB1
                                        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL TB2 ON TB1.TME_SCHDLID = TB2.TME_SCHDLID
                                WHERE
                                    TB1.STTS_CD = 180103
                                GROUP BY TB2.PRGRM_SCHDLID
                                ) E3 ON D.PRGRM_SCHDLID = E3.PRGRM_SCHDLID
                LEFT OUTER JOIN (
                                SELECT
                                    TB2.PRGRM_SCHDLID
                                  , COUNT(TB1.APLYID) AS CNT
                                FROM
                                    TB_EDU_INFNT_PRGRM_APLY TB1
                                        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL TB2 ON TB1.TME_SCHDLID = TB2.TME_SCHDLID
                                WHERE
                                    TB1.STTS_CD = 180104
                                GROUP BY TB2.PRGRM_SCHDLID
                                ) E4 ON D.PRGRM_SCHDLID = E4.PRGRM_SCHDLID
                LEFT OUTER JOIN (
                                SELECT
                                    TB2.PRGRM_SCHDLID
                                  , COUNT(TB1.APLYID) AS CNT
                                FROM
                                    TB_EDU_INFNT_PRGRM_APLY TB1
                                        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL TB2 ON TB1.TME_SCHDLID = TB2.TME_SCHDLID
                                WHERE
                                    TB1.STTS_CD = 180105
                                GROUP BY TB2.PRGRM_SCHDLID
                                ) E5 ON D.PRGRM_SCHDLID = E5.PRGRM_SCHDLID
                LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_SCHDL F ON D.PRGRM_SCHDLID = F.PRGRM_SCHDLID
                
                LEFT OUTER JOIN TB_CMM_CD CDT ON A.RCPT_MTHD_CD = CDT.CD                                
                WHERE
                    1 = 1
                    AND D.PRGRM_SCHDLID IS NOT NULL
                    <if test="searchKeyword != null and searchKeyword != ''">
                    AND A.PRGRM_NM LIKE CONCAT('%',#{searchKeyword},'%')
                    </if>
                    <if test="searchEduYr != null and searchEduYr != ''">
                    AND SUBSTRING_INDEX(F.YM, '-', 1) = #{searchEduYr}
                    </if>
                    <if test="searchClssrmId != null and searchClssrmId != ''">
                    AND B.CLSSRMID = #{searchClssrmId}
                    </if>
                    <if test="searchClssrmMm != null and searchClssrmMm != ''">
                    AND SUBSTRING_INDEX(F.YM, '-', -1) = #{searchClssrmMm}
                    </if>
                    <if test="searchRcptMthdCd != null and searchRcptMthdCd != ''">
                    AND A.RCPT_MTHD_CD = #{searchRcptMthdCd}
                    </if>
                    <if test="searchSttsCd != null and searchSttsCd != ''">
                        <choose>
                            <when test="searchSttsCd == '174103'">
                                AND B.RCPT_END_DT <![CDATA[<]]> NOW()
                            </when>
                            <when test="searchSttsCd == '174102'">
                                AND NOW() BETWEEN B.RCPT_BGNG_DT AND B.RCPT_END_DT
                            </when>
                            <otherwise>
                                AND B.RCPT_BGNG_DT <![CDATA[>]]> NOW()                    
                            </otherwise>
                        </choose>
                    </if>
                GROUP BY D.PRGRM_SCHDLID
        <include refid="PaginationMapper.footer"/>        
    </select>

    <!-- 교육신청 관리 게시글 상세목록 조회 -->
    <select id="selectInfntAplyDetailList" parameterType="InfntAplyVo" resultType="InfntAplyVo">
        /* InfntAplyDao.selectInfntAplyDetailList */
        <include refid="PaginationMapper.header"/>
            SELECT 
              A.APLYID
            , B.PRGRM_SCHDLID  
            , B.DE
            , C.TME_NM
            , A.REG_DT AS RCPT_DT  
            , A.INSTID
            , E.INST_NM 
            , A.USERID APLY_USERID
            , F.NM APLY_USER_NM
            , A.TME_SCHDLID
            , A.ZIP
            , A.ADDR
            , A.ADDR_DTL
            , A.CTPRVN_CD
            , A.TELNO
            , A.MOBLPHON
            , A.EML
            , A.EDU_NOPE
            , A.TCHER_NOPE
            , A.ETC
            , A.TOWWAY_ONLN_EDU_AGRE_YN
            , A.STTS_CD
            , D.CD_NM AS STTS_NM
            , C.PRGRMID
            , A.MDFCN_DT
            , A.MDFRID
            , A.REG_DT
            , A.RGTRID  
            FROM TB_EDU_INFNT_PRGRM_APLY A 
            LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL B ON B.TME_SCHDLID = A.TME_SCHDLID 
            LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME C ON C.TMEID = B.TMEID
            LEFT OUTER JOIN TB_CMM_CD D ON D.CD = A.STTS_CD
            LEFT OUTER JOIN TB_CMM_INST E ON E.INSTID = A.INSTID 
            LEFT OUTER JOIN TB_CMM_USER F ON F.USERID = A.USERID        
            WHERE B.PRGRM_SCHDLID = #{prgrmSchdlid}
            <!-- 신청상태  -->
            <if test="searchSttsCd  != null and searchSttsCd != ''">
                AND A.STTS_CD = #{searchSttsCd}
            </if>                    
            <!-- 키워드.전체 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == ''">
                AND (E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%') OR A.USERID LIKE CONCAT('%',#{searchKeyword},'%') OR F.NM LIKE CONCAT('%',#{searchKeyword},'%') OR A.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%'))
            </if>
            <!-- 키워드.기관명 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchInstNm'">
                AND E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.신청자ID -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserId'">
                AND F.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.신청자명 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserNm'">
                AND F.NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.휴대폰번호 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchTelNo'">
                AND A.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%')
            </if>     
            <!-- 교육일 검색시작일  -->
            <if test="searchEduBgngDt != null and searchEduBgngDt != ''">
            AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[>=]]> #{searchEduBgngDt}
            </if>
            <!-- 교육일 검색종료일  -->
            <if test="searchEduEndDt != null and searchEduEndDt != ''">
            AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[<]]> CAST(CONCAT(#{searchEduEndDt},' 23:59:59') AS DATETIME)
            </if>            
            <!-- 접수일 검색시작일  -->
            <if test="searchBgngDt != null and searchBgngDt != ''">
            AND A.REG_DT <![CDATA[>=]]> #{searchBgngDt}
            </if>
            <!-- 접수일 검색종료일  -->
            <if test="searchEndDt != null and searchEndDt != ''">
            AND A.REG_DT <![CDATA[<]]> CAST(CONCAT(#{searchEndDt},' 23:59:59') AS DATETIME)
            </if>
        <include refid="PaginationMapper.footer"/>        
    </select>

    <!-- 교육신청 관리 게시글 상세목록 엑셀 다운로드 -->
    <select id="infntAplyExcelDownList" parameterType="InfntAplyVo" resultType="InfntAplyVo">
        /* InfntAplyDao.infntAplyExcelDownList */
        SELECT 
          A.APLYID
        , B.PRGRM_SCHDLID  
        , B.DE
        , C.TME_NM
        , A.REG_DT AS RCPT_DT  
        , A.INSTID
        , E.INST_NM 
        , A.USERID APLY_USERID
        , F.NM APLY_USER_NM
        , A.TME_SCHDLID
        , A.ZIP
        , A.ADDR
        , A.ADDR_DTL
        , A.CTPRVN_CD
        , A.TELNO
        , A.MOBLPHON
        , A.EML
        , A.EDU_NOPE
        , A.TCHER_NOPE
        , A.ETC
        , A.TOWWAY_ONLN_EDU_AGRE_YN
        , A.STTS_CD
        , D.CD_NM AS STTS_NM
        , A.MDFCN_DT
        , A.MDFRID
        , A.REG_DT
        , A.RGTRID  
        FROM TB_EDU_INFNT_PRGRM_APLY A 
        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL B ON B.TME_SCHDLID = A.TME_SCHDLID 
        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME C ON C.TMEID = B.TMEID
        LEFT OUTER JOIN TB_CMM_CD D ON D.CD = A.STTS_CD
        LEFT OUTER JOIN TB_CMM_INST E ON E.INSTID = A.INSTID 
        LEFT OUTER JOIN TB_CMM_USER F ON F.USERID = A.USERID        
        WHERE B.PRGRM_SCHDLID = #{prgrmSchdlid}
            <!-- 키워드.전체 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == ''">
                AND (E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%') OR A.USERID LIKE CONCAT('%',#{searchKeyword},'%') OR F.NM LIKE CONCAT('%',#{searchKeyword},'%') OR A.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%'))
            </if>
            <!-- 키워드.기관명 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchInstNm'">
                AND E.INST_NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.신청자ID -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserId'">
                AND F.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.신청자명 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchUserNm'">
                AND F.NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>        
            <!-- 키워드.휴대폰번호 -->
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'searchTelNo'">
                AND A.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%')
            </if>     
            <!-- 교육일 검색시작일  -->
            <if test="searchStartDeDt != null and searchStartDeDt != ''">
            AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[>=]]> #{searchStartDeDt}
            </if>
            <!-- 교육일 검색종료일  -->
            <if test="searchEndDeDt != null and searchEndDeDt != ''">
            AND DATE_FORMAT(STR_TO_DATE(B.DE, '%Y.%m.%d'),'%Y-%m-%d') <![CDATA[<]]> CAST(CONCAT(#{searchEndDeDt},' 23:59:59') AS DATETIME)
            </if>            
            <!-- 접수일 검색시작일  -->
            <if test="searchStartRcptDt != null and searchStartRcptDt != ''">
            AND A.REG_DT <![CDATA[>=]]> #{searchStartRcptDt}
            </if>
            <!-- 접수일 검색종료일  -->
            <if test="searchEndRcptDt != null and searchEndRcptDt != ''">
            AND A.REG_DT <![CDATA[<]]> CAST(CONCAT(#{searchEndRcptDt},' 23:59:59') AS DATETIME)
            </if>          
    </select>
    
    <!-- 교육신청 관리 게시글 등록 --> 
    <insert id="insertInfntAply" parameterType="InfntAplyVo" useGeneratedKeys="true" keyProperty="aplyId">
        /* InfntAplyDao.insertInfntAply */
        INSERT INTO TB_EDU_INFNT_PRGRM_APLY (
            INSTID
            , USERID
            , TME_SCHDLID
            , ZIP
            , ADDR
            , ADDR_DTL
            , CTPRVN_CD
            , TELNO
            , MOBLPHON
            , EML
            , EDU_NOPE
            , TCHER_NOPE
            , ETC
            , TOWWAY_ONLN_EDU_AGRE_YN
            , STTS_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        )
        SELECT 
            #{instid}
            ,#{aplyUserid}
            ,#{tmeSchdlid}
            ,#{zip}
            ,#{addr}
            ,#{addrDtl}
            ,#{ctprvnCd}
            ,#{telno}
            ,#{moblphon}
            ,#{eml}
            ,#{eduNope}
            ,#{tcherNope}
            ,#{etc}
            ,#{towwayOnlnEduAgreYn}
            ,CASE WHEN C.RCPT_MTHD_CD = '156101' THEN '180102' ELSE CASE WHEN COUNT(D.STTS_CD) <![CDATA[<=]]> C.EDU_NOPE THEN '180102' ELSE '180101' END END    
            ,NOW()
            ,#{user.userid}
            ,NOW()
            ,#{user.userid}
          FROM TB_EDU_INFNT_PRGRM_TME_SCHDL A
          LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME B ON B.TMEID = A.TMEID
          LEFT OUTER JOIN TB_EDU_INFNT_PRGRM C ON C.PRGRMID = B.PRGRMID                
          LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_APLY D ON D.TME_SCHDLID = #{tmeSchdlid}                 
         WHERE A.TME_SCHDLID = #{tmeSchdlid}    
    </insert>
        
    <!-- 교육신청 관리 상세조회 -->
    <select id="selectInfntAplyInfo" parameterType="InfntAplyVo" resultType="InfntAplyVo"> 
        /* InfntAplyDao.selectInfntAplyInfo */
        SELECT 
          A.APLYID
        , A.TME_SCHDLID  
        , B.DE
        , C.TMEID
        , C.TME_NM
        , A.REG_DT AS RCPT_DT  
        , A.INSTID
        , E.INST_NM 
        , A.USERID APLY_USERID
        , F.NM APLY_USER_NM
        , A.TME_SCHDLID
        , A.ZIP
        , A.ADDR
        , A.ADDR_DTL
        , A.CTPRVN_CD
        , A.TELNO
        , A.MOBLPHON
        , A.EML
        , A.EDU_NOPE
        , A.TCHER_NOPE
        , A.ETC
        , A.TOWWAY_ONLN_EDU_AGRE_YN
        , A.STTS_CD
        , D.CD_NM AS STTS_NM
        ,(SELECT GROUP_CONCAT(EDU_TRGT_CD SEPARATOR',') FROM TB_EDU_INFNT_PRGRM_APLY_EDU_TRGT  WHERE APLYID = #{aplyId} ) AS TRGT_CD
        , A.MDFCN_DT
        , A.MDFRID
        , A.REG_DT
        , A.RGTRID
        , C.PRGRMID  
        FROM TB_EDU_INFNT_PRGRM_APLY A 
        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME_SCHDL B ON B.TME_SCHDLID = A.TME_SCHDLID 
        LEFT OUTER JOIN TB_EDU_INFNT_PRGRM_TME C ON C.TMEID = B.TMEID
        LEFT OUTER JOIN TB_CMM_CD D ON D.CD = A.STTS_CD
        LEFT OUTER JOIN TB_CMM_INST E ON E.INSTID = A.INSTID 
        LEFT OUTER JOIN TB_CMM_USER F ON F.USERID = A.USERID        
        WHERE A.APLYID = #{aplyId}
    </select>
    
    <!-- 교육신청관리 게시글 수정 -->
    <update id="updateInfntAply" parameterType="InfntAplyVo" keyProperty="InfntAplyVo">
        /* InfntAplyDao.updateInfntAply */
        UPDATE TB_EDU_INFNT_PRGRM_APLY SET
                INSTID                      = #{instid}
                , USERID                    = #{aplyUserid}
                , TME_SCHDLID         = #{tmeSchdlid}
                , ZIP                       = #{zip}
                , ADDR                      = #{addr}
                , ADDR_DTL                  = #{addrDtl}
                , CTPRVN_CD                 = #{ctprvnCd}
                , TELNO                     = #{telno}
                , MOBLPHON                  = #{moblphon}
                , EML                       = #{eml}
                , EDU_NOPE                  = #{eduNope}
                , TCHER_NOPE                = #{tcherNope}
                , ETC                       = #{etc}
                , TOWWAY_ONLN_EDU_AGRE_YN   = #{towwayOnlnEduAgreYn}
                , MDFCN_DT                  = NOW()
                , MDFRID                    = #{user.userid}
         WHERE APLYID                      = #{aplyId}
    </update>
    
    <!-- 교육신청 교육년도 조회 -->
    <select id="selectEduYear" parameterType="InfntAplyVo" resultType="InfntAplyVo"> 
        /* InfntAplyDao.selectEduYear */
        SELECT
            EDU_YR
        FROM
            TB_EDU_INFNT_PRGRM
        GROUP BY EDU_YR
    </select>
    
    <!-- 교육신청관리 교육신청자 신청상태 수정 기능 -->
    <update id="updateSttsCdInfntAply" parameterType="InfntAplyVo" keyProperty="InfntAplyVo">
        /* InfntAplyDao.updateSttsCdInfntAply */
        UPDATE TB_EDU_INFNT_PRGRM_APLY SET
                STTS_CD                    = #{sttsCd}
                , MDFCN_DT                 = NOW()
                , MDFRID                   = #{user.userid}
         WHERE APLYID                      = #{aplyId}
    </update>    
    
    <!-- 교육대상 저장 -->
    <insert id="insertTrgtCd" parameterType="InfntAplyVo" >
         /* InfntAplyDao.insertTrgtCd */
         INSERT INTO TB_EDU_INFNT_PRGRM_APLY_EDU_TRGT(
              APLYID
              ,EDU_TRGT_CD
              ,MDFCN_DT
              ,MDFRID
              ,REG_DT
              ,RGTRID
         )VALUES
          <foreach item="item" collection="trgtCds"  separator=",">
           (
             #{aplyId}
             ,#{item}
             ,NOW()
             ,#{user.userid}
             ,NOW()
             ,#{user.userid}             
            )
          </foreach>
    </insert>
    
    <!-- 교육대상 삭제 -->
    <insert id="deleteTrgtCd" parameterType="InfntAplyVo" >
         /* InfntAplyDao.deleteTrgtCd */
         DELETE FROM TB_EDU_INFNT_PRGRM_APLY_EDU_TRGT
         WHERE 1=1
           AND APLYID = #{aplyId}
    </insert>   
        
    <!-- 교육신청 관리 회차 목록 조회 -->
    <select id="selectTmeSchdlList" parameterType="InfntAplyVo" resultType="InfntAplyVo">
        /* InfntAplyDao.selectTmeSchdlList */
        SELECT 
            REPLACE(A.DE, '.', '-') DE
            , A.TMEID
            , A.TME_SCHDLID
            , B.TME_NM    
            , B.PRGRMID    
        FROM 
            TB_EDU_INFNT_PRGRM_TME_SCHDL A
        LEFT OUTER JOIN 
            TB_EDU_INFNT_PRGRM_TME B ON (B.TMEID = A.TMEID)
        WHERE
            1 = 1
            AND A.PRGRM_SCHDLID = #{prgrmSchdlid} 
            AND B.PRGRMID = #{prgrmId}
        ORDER BY 
            A.DE, B.ORDR 
    </select>
               
    <!-- 회원정보 조회 -->
    <select id="selectMemberList" parameterType="InfntAplyVo" resultType="InfntAplyVo">
        /* InfntAplyDao.selectMemberList */
        <include refid="PaginationMapper.header"/>
            SELECT
                A.*
            FROM (
                SELECT
                    A.USERID AS APLY_USER_ID
                    , A.ACNT
                    , IFNULL(A.NM, '-') AS APLY_USER_NM
                    , A.EML
                    , A.INSTID
                    , A.STTS_CD
                    , C.INST_NM
                    , C.ADDR
                    , C.ADDR_DTL
                    , C.TELNO
                    , A.MOBLPHON
                    , A.MDFCN_DT
                    , A.REG_DT
                    , CASE WHEN IFNULL(B.ROLECD,'U') = 'U' AND A.INSTID IS NOT NULL THEN 'C'
                      WHEN IFNULL(B.ROLECD,'U') = 'U' AND A.INSTID IS NULL THEN 'U'
                      ELSE B.ROLECD END AS ROLECD
                FROM
                    TB_CMM_USER A
                LEFT OUTER JOIN (
                    SELECT
                        A.USERID
                        ,CASE WHEN INSTR(GROUP_CONCAT(A.ROLEID),'1') > 0 OR INSTR(GROUP_CONCAT(A.ROLEID),'5') > 0 THEN 'A'
                    ELSE 'U' END AS ROLECD
                    FROM
                        TB_CMM_ROLE_USER A
                        , TB_CMM_ROLE B
                    WHERE 
                        1 = 1
                    AND A.ROLEID = B.ROLEID
                    GROUP BY 
                        USERID
                ) B ON (A.USERID = B.USERID)
                LEFT OUTER JOIN
                    TB_CMM_INST C ON (C.INSTID = A.INSTID)
            ) A
            WHERE 1 = 1
            AND A.ROLECD = 'C'
            AND A.STTS_CD = '1' 
            <if test="instid != null and instid != '' ">                     
            AND (A.INSTID IS NULL OR A.INSTID <![CDATA[<>]]> #{instid})  
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'nm'">
            AND A.APLY_USER_NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'acnt'">
            AND A.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'moblphon'">
            AND A.MOBLPHON LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchKeyword != null and searchKeyword != '' and searchType == 'eml'">
            AND A.EML LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <include refid="PaginationMapper.footer"/>
    </select>  
</mapper>