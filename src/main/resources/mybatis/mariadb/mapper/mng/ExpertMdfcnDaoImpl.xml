<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : ExpertMdfcnDaoImpl.xml
	Description : 전문가 정보변경 관리
-->
<mapper namespace="com.kbrainc.plum.mng.expertPoolMng.model.ExpertMdfcnDao">
    <insert id="insertExpertTrgt">
        INSERT INTO TB_ASS_EXPRT_TRGT(
          USERID
          , TRGT_CD
          , MDFCN_DT
          , MDFRID
          , REG_DT
          , RGTRID
          ) VALUES
        <foreach item="item" collection="exprtTrgtArr" separator=",">
            (
            #{userid}
            ,#{item}
            ,NOW()
            ,#{userid}
            ,NOW()
            ,#{userid}
            )
        </foreach>
    </insert>

    <insert id="insertExpertSbjct">
        INSERT INTO TB_ASS_EXPRT_SBJCT(
            USERID
            , SBJCT_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="exprtSbjctArr" separator=",">
            (
            #{userid}
            ,#{item}
            ,NOW()
            ,#{userid}
            ,NOW()
            ,#{userid}
            )
        </foreach>
    </insert>

    <insert id="insertExpertActvtScope">
        INSERT INTO TB_ASS_EXPRT_ACTVT_SCOPE (
        USERID
        , RGN_CD
        , MDFCN_DT
        , MDFRID
        , REG_DT
        , RGTRID
        ) VALUES
        <foreach item="item" collection="exprtActvtScopeArr" separator=",">
            (
            #{userid}
            ,#{item}
            ,NOW()
            ,#{userid}
            ,NOW()
            ,#{userid}
            )
        </foreach>
    </insert>

    <insert id="insertExpertActvtRgn">
        INSERT INTO TB_ASS_EXPRT_ACTVT_RGN(
        USERID
        , RGN_CD
        , MDFCN_DT
        , MDFRID
        , REG_DT
        , RGTRID
        ) VALUES
        <foreach item="item" collection="exprtActvtRgnArr" separator=",">
            (
            #{userid}
            ,#{item}
            ,NOW()
            ,#{userid}
            ,NOW()
            ,#{userid}
            )
        </foreach>
    </insert>

    <insert id="insertExpertHdof">
        INSERT INTO TB_ASS_EXPRT_HDOF(
            USERID
            , HDOF_SE_CD
            , INST_NM
            , DEPT_NM
            , JBGD_NM
            , HDOF_BGNG_DE
            , HDOF_END_DE
            , HDOF_YN
            , HDOFCRTF_FILEID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="expertHdofList" separator=",">
            (
            #{userid}
            , #{item.hdofSeCd}
            , #{item.instNm}
            , #{item.deptNm}
            , #{item.jbgdNm}
            , #{item.hdofBgngDe}
            , #{item.hdofEndDe}
            , #{item.hdofYn}
            , #{item.hdofcrtfFileid}
            , #{item.ordr}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <insert id="insertExpertCrtfct">
        INSERT INTO TB_ASS_EXPRT_CRTFCT(
            USERID
            , CRTFCT_NM
            , ACQS_INST
            , ACQS_NO
            , ACQS_GRD
            , ACQS_DE
            , CRTFCT_FILEID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="expertCrtfctList" separator=",">
            (
            #{userid}
            , #{item.crtfctNm}
            , #{item.acqsInst}
            , #{item.acqsNo}
            , #{item.acqsGrd}
            , #{item.acqsDe}
            , #{item.crtfctFileid}
            , #{item.ordr}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <insert id="insertExpertCareer">
        INSERT INTO TB_ASS_EXPRT_CAREER(
            USERID
            , FLD_NM
            , ACTVT_BGNG_DE
            , ACTVT_END_DE
            , ACTVT_YN
            , ACTVT_HR
            , IDNTY_INST_NM
            , ACTVT_CN
            , IDNTY_DE
            , CRTF_FILEID
            , ARTCLASS_FILEID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach item="item" collection="expertCareerList" separator=",">
            (
            #{userid}
            , #{item.fldNm}
            , #{item.actvtBgngDe}
            , #{item.actvtEndDe}
            , #{item.actvtYn}
            , #{item.actvtHr}
            , #{item.idntyInstNm}
            , #{item.actvtCn}
            , #{item.idntyDe}
            , #{item.crtfFileid}
            , #{item.artclassFileid}
            , #{item.ordr}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <update id="updateStts">
        UPDATE TB_ASS_EXPRT_MDFCN_DMND
        SET STTS_CD = #{sttsCd}
        WHERE MDFCN_DMND_ID = #{mdfcnDmndId}
    </update>

    <update id="updateExpertInfo">
        UPDATE TB_ASS_EXPRT
        SET EXPRT_TYPE_CD = #{exprtTypeCd}
            , FLD_LCTR_YN = #{fldLctrYn}
            , FLD_PLANNG_YN = #{fldPlanngYn}
            , FLD_CNSLTNG_YN = #{fldCnsltngYn}
            , FLD_ETC_YN = #{fldEtcYn}
            , FLD_ETC_CN = #{fldEtcCn}
            , MDFCN_DT = NOW()
            , MDFRID = #{user.userid}
            , ENV_EDU_CAREER_MM = #{envEduCareerMm}
            , ENV_EDU_CAREER_YY = #{envEduCareerYy}
        WHERE USERID = #{userid}
    </update>

    <delete id="deleteExpertCareer">
        DELETE FROM TB_ASS_EXPRT_CAREER
        WHERE USERID= #{userid}
    </delete>

    <delete id="deleteExpertCrtfct">
        DELETE FROM TB_ASS_EXPRT_CRTFCT
        WHERE USERID= #{userid}
    </delete>

    <delete id="deleteExpertActvtRgn">
        DELETE FROM TB_ASS_EXPRT_ACTVT_RGN
        WHERE USERID= #{userid}
    </delete>

    <delete id="deleteExpertActvtScope">
        DELETE FROM TB_ASS_EXPRT_ACTVT_SCOPE
        WHERE USERID= #{userid}
    </delete>

    <delete id="deleteExpertHdof">
        DELETE FROM TB_ASS_EXPRT_HDOF
        WHERE USERID= #{userid}
    </delete>

    <delete id="deleteExpertSbjct">
        DELETE FROM TB_ASS_EXPRT_SBJCT
        WHERE USERID= #{userid}
    </delete>

    <delete id="deleteExpertTrgt">
        DELETE FROM TB_ASS_EXPRT_TRGT
        WHERE USERID= #{userid}
    </delete>

    <select id="selectExpertMdfcnList" resultType="ExpertMdfcnVo">
        <include refid="PaginationMapper.header"/>
        SELECT
            A.MDFCN_DMND_ID
            , A.USERID
            , B.NM
            , B.ACNT
            , A.EXPRT_TYPE_CD
            , A.STTS_CD
            , A.REG_DT
            , A.MDFCN_DT
            , A.MDFRID
            , C.RGTRID AS PROCID
            , C.REG_DT AS PROC_DT
            , C.ACNT AS PROC_ACNT
        FROM TB_ASS_EXPRT_MDFCN_DMND A
            INNER JOIN TB_CMM_USER B ON A.USERID = B.USERID
            LEFT OUTER JOIN (
                SELECT
                TAEL.RGTRID
                , TAEL.REG_DT
                , TCU.ACNT
                , TAEL.MDFCN_DMND_ID
                FROM TB_ASS_EXPRT_LOG TAEL
                INNER JOIN TB_CMM_USER TCU ON TAEL.RGTRID = TCU.USERID
                <!-- ORDER BY TAEL.REG_DT DESC LIMIT 1 -->
            ) C
            ON C.MDFCN_DMND_ID = A.MDFCN_DMND_ID
        WHERE 1=1
            AND (A.REG_DT) NOT IN(
                SELECT MIN(REG_DT)
                FROM TB_ASS_EXPRT_MDFCN_DMND
                GROUP BY USERID
            )
        <if test="searchKeyword != null and searchKeyword != ''">
            <if test="searchType == 'nm' ">
            AND B.NM LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchType == 'acnt' ">
            AND B.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
        </if>
        <if test="sttsCd != null and sttsCd != ''">
            AND A.STTS_CD = #{sttsCd}
        </if>
        <include refid="PaginationMapper.footer"/>
    </select>

    <select id="selectExpertMdfcnInfo" resultType="ExpertVo">
        SELECT
            A.USERID
             , A.MDFCN_DMND_ID
             , A.STTS_CD
             , A.ENV_EDU_CAREER_MM
             , A.ENV_EDU_CAREER_YY
             , A.EXPRT_TYPE_CD
             , A.FLD_LCTR_YN
             , A.FLD_PLANNG_YN
             , A.FLD_CNSLTNG_YN
             , A.FLD_ETC_YN
             , A.MOBLPHON_RLS_YN
             , A.EML_RLS_YN
             , A.QLFC_RLS_YN
             , A.HDOF_RLS_YN
             , A.CAREER_RLS_YN
             , A.ENT_LCTR_DMND_RCPTN_YN
             , A.LCTR_GDNC_RCPTN_YN
             , B.ACNT
             , B.NM
             , B.GNDR
             , B.BRDT
             , B.TELNO
             , B.MOBLPHON
             , B.EML
             , (SELECT GROUP_CONCAT(TRGT_CD SEPARATOR',') FROM TB_ASS_EXPRT_MDFCN_TRGT  WHERE MDFCN_DMND_ID = #{mdfcnDmndId} ) AS EXPRT_TRGT_CD /* 전문분야 대상 */
             , (SELECT GROUP_CONCAT(SBJCT_CD SEPARATOR',') FROM TB_ASS_EXPRT_MDFCN_SBJCT  WHERE MDFCN_DMND_ID = #{mdfcnDmndId} ) AS EXPRT_SBJCT_CD /* 전문분야 주제 */
             , (SELECT GROUP_CONCAT(RGN_CD SEPARATOR',') FROM TB_ASS_EXPRT_MDFCN_ACTVT_RGN  WHERE MDFCN_DMND_ID = #{mdfcnDmndId} ) AS EXPRT_ACTVT_RGN_CD /* 주요활동지역 */
             , (SELECT GROUP_CONCAT(RGN_CD SEPARATOR',') FROM TB_ASS_EXPRT_MDFCN_ACTVT_SCOPE  WHERE MDFCN_DMND_ID = #{mdfcnDmndId} ) AS EXPRT_ACTVT_SCOPE_CD /* 가능 활동범위 */
        FROM TB_ASS_EXPRT_MDFCN_DMND A
            INNER JOIN TB_CMM_USER B ON A.USERID = B.USERID
        WHERE A.USERID = #{userid}
            AND A.MDFCN_DMND_ID = #{mdfcnDmndId}
    </select>

    <select id="selectExpertCareerList" resultType="com.kbrainc.plum.mng.expertPoolMng.model.ExpertCareerVo">
        SELECT
            EXPRT_CAREER_ID
             , FLD_NM
             , ACTVT_BGNG_DE
             , ACTVT_END_DE
             , ACTVT_YN
             , IF(ACTVT_YN= 'Y', CONCAT(ACTVT_BGNG_DE, ' ~ 활동중' ), CONCAT(ACTVT_BGNG_DE, ' ~ ' , ACTVT_END_DE )) AS ACTVT_DE
             , ACTVT_HR
             , IDNTY_INST_NM
             , ACTVT_CN
             , IDNTY_DE
             , CRTF_FILEGRPID as CRTF_FILEID
             , ARTCLASS_FILEGRPID as ARTCLASS_FILEID
             , ORDR
        FROM TB_ASS_EXPRT_MDFCN_CAREER
        WHERE MDFCN_DMND_ID = #{mdfcnDmndId}
        ORDER BY ORDR
    </select>

    <select id="selectExpertCrtfctList" resultType="com.kbrainc.plum.mng.expertPoolMng.model.ExpertCrtfctVo">
        SELECT
            EXPRT_CRTFCT_ID
             , CRTFCT_NM
             , ACQS_INST
             , ACQS_NO
             , ACQS_GRD
             , ACQS_DE
             , CRTFCT_FILEGRPID AS CRTFCT_FILEID
             , ORDR
        FROM TB_ASS_EXPRT_MDFCN_CRTFCT
        WHERE MDFCN_DMND_ID = #{mdfcnDmndId}
        ORDER BY ORDR
    </select>

    <select id="selectExpertHdofList" resultType="com.kbrainc.plum.mng.expertPoolMng.model.ExpertHdofVo">
        SELECT
            EXPRT_HDOF_ID
             , HDOF_SE_CD
             , INST_NM
             , DEPT_NM
             , JBGD_NM
             , HDOF_BGNG_DE
             , HDOF_END_DE
             , HDOF_YN
             , IF(HDOF_YN= 'Y', CONCAT(HDOF_BGNG_DE, ' ~ 활동중' ), CONCAT(HDOF_BGNG_DE, ' ~ ' , HDOF_END_DE )) AS HDOF_DE
             , HDOFCRTF_FILEGRPID as HDOFCRTF_FILEID
             , ORDR
        FROM TB_ASS_EXPRT_MDFCN_HDOF
        WHERE MDFCN_DMND_ID = #{mdfcnDmndId}
        ORDER BY ORDR
    </select>

    <select id="selectExpertMdfcn" resultType="ExpertMdfcnVo">
        SELECT A.MDFCN_DMND_ID
             , A.USERID
             , B.NM
             , B.ACNT
             , A.EXPRT_TYPE_CD
             , A.STTS_CD
             , A.REG_DT
             , A.INFO_MDFCN_RSN
             , C.RGTRID AS PROCID
             , C.REG_DT AS PROC_DT
             , C.ACNT   AS PROC_ACNT
        FROM TB_ASS_EXPRT_MDFCN_DMND A
        INNER JOIN TB_CMM_USER B ON A.USERID = B.USERID
        LEFT OUTER JOIN (
            SELECT
            TAEL.RGTRID
            , TAEL.REG_DT
            , TCU.ACNT
            , TAEL.MDFCN_DMND_ID
            FROM TB_ASS_EXPRT_LOG TAEL
            INNER JOIN TB_CMM_USER TCU ON TAEL.RGTRID = TCU.USERID
        ) C
        ON C.MDFCN_DMND_ID = A.MDFCN_DMND_ID
        WHERE A.MDFCN_DMND_ID = #{mdfcnDmndId}
    </select>

    <select id="getPrevDmndId" resultType="int">
        SELECT MDFCN_DMND_ID
        FROM TB_ASS_EXPRT_MDFCN_DMND
        WHERE
            MDFCN_DMND_ID <![CDATA[ < ]]> #{mdfcnDmndId}
            AND USERID= #{userid}
            AND STTS_CD = '152102'
        ORDER BY MDFCN_DMND_ID DESC
        LIMIT 1
    </select>
</mapper>