<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	SQL File Name : ExpertPoolMngDaoImpl.xml
	Description : 전문가 풀 관리
-->
<mapper namespace="com.kbrainc.plum.mng.expertPoolMng.model.ExpertPoolMngDao">
      <!--전문가 목록 조회-->
    <select id="selectExpertList" resultType="ExpertVo">
        <include refid="PaginationMapper.header"/>
            SELECT
                A.USERID
                , A.EXPRT_TYPE_CD
                , A.FLD_LCTR_YN
                , A.FLD_PLANNG_YN
                , A.FLD_CNSLTNG_YN
                , A.FLD_ETC_YN
                , A.FLD_ETC_CN
                , A.MOBLPHON_RLS_YN
                , A.EML_RLS_YN
                , A.QLFC_RLS_YN
                , A.HDOF_RLS_YN
                , A.CAREER_RLS_YN
                , A.ENT_LCTR_DMND_RCPTN_YN
                , A.LCTR_GDNC_RCPTN_YN
                , A.ENV_EDU_CAREER_YY
                , A.ENV_EDU_CAREER_MM
                , A.STTS_CD
                , A.APLY_DT
                , A.MDFCN_DT
                , A.MDFRID
                , A.REG_DT
                , A.RGTRID
                , A.APRV_DT
                , A.RJCT_DT
                , A.CNCL_DT
                , B.STTS_CD AS USER_STTS_CD
                , B.ACNT
                , B.NM
                , D.GROUP_CD_NM AS EXPRT_SBJCT_CD_NM
                , C.GROUP_CD_NM AS EXPRT_ACTVT_SCOPE_CD_NM
                , E.GROUP_CD_NM AS EXPRT_TRGT_CD_NM
            FROM TB_ASS_EXPRT A
            INNER JOIN TB_CMM_USER B
                ON A.USERID = B.USERID
            LEFT OUTER JOIN (
                SELECT
                    GROUP_CONCAT(TCAC.CTPRVN_NM) AS GROUP_CD_NM, TAEAS.USERID
                FROM TB_CMM_ADDR_CTPRVN TCAC
                INNER JOIN TB_ASS_EXPRT_ACTVT_SCOPE TAEAS
                    ON TCAC.CTPRVN_CD = TAEAS.RGN_CD
                GROUP BY TAEAS.USERID
            ) C
                ON A.USERID = C.USERID
            LEFT OUTER JOIN (
                SELECT
                    GROUP_CONCAT(TCC.CD_NM) AS GROUP_CD_NM, TAES.USERID
                FROM TB_ASS_EXPRT_SBJCT TAES
                INNER JOIN TB_CMM_CD TCC
                    ON TAES.SBJCT_CD = TCC.CD
                GROUP BY TAES.USERID
            ) D
                ON A.USERID = D.USERID
            LEFT OUTER JOIN (
                SELECT
                    GROUP_CONCAT(TCC.CD_NM) AS GROUP_CD_NM, TAET.USERID
                FROM TB_ASS_EXPRT_TRGT TAET
                INNER JOIN TB_CMM_CD TCC
                    ON TAET.TRGT_CD = TCC.CD
                GROUP BY TAET.USERID
            ) E
            ON A.USERID = E.USERID
            WHERE 1=1
            <if test="searchKeyword != null and searchKeyword != ''">
                <if test="searchType == 'nm' ">
                    AND B.NM LIKE CONCAT('%',#{searchKeyword},'%')
                </if>
                <if test="searchType == 'acnt' ">
                    AND B.ACNT LIKE CONCAT('%',#{searchKeyword},'%')
                </if>
            </if>
            <if test="exprtTypeCd != null and exprtTypeCd != ''">
                AND A.EXPRT_TYPE_CD = #{exprtTypeCd}
            </if>
            <if test="exprtField != null and exprtField != ''">
                <choose>
                    <when test='exprtField == "1"'>
                        AND A.FLD_LCTR_YN = 'Y'
                    </when>
                    <when test='exprtField == "2"'>
                        AND A.FLD_PLANNG_YN = 'Y'
                    </when>
                    <when test='exprtField == "3"'>
                        AND A.FLD_CNSLTNG_YN = 'Y'
                    </when>
                    <when test='exprtField == "4"'>
                        AND A.FLD_ETC_YN = 'Y'
                    </when>
                </choose>
            </if>
            <if test="exprtTrgtCdNm != null and exprtTrgtCdNm != ''">
                AND E.GROUP_CD_NM LIKE CONCAT('%', #{exprtTrgtCdNm} , '%')
            </if>
            <if test="exprtSbjctCdNm != null and exprtSbjctCdNm != ''">
                AND D.GROUP_CD_NM LIKE CONCAT('%', #{exprtSbjctCdNm} , '%')
            </if>
            <if test="exprtActvtScopeCdNm != null and exprtActvtScopeCdNm != ''">
                AND C.GROUP_CD_NM LIKE CONCAT('%', #{exprtActvtScopeCdNm} , '%')
            </if>
            <if test="userSttsCd != null and userSttsCd != ''">
                AND B.STTS_CD = #{userSttsCd}
            </if>
            <if test="sttsCd != null and sttsCd != ''">
                AND A.STTS_CD = #{sttsCd}
            </if>
        <include refid="PaginationMapper.footer"/>
    </select>

    <!-- 전문가 회원 정보 조회 -->
    <select id="selectExpertInfo" resultType="ExpertVo">
        SELECT
            A.USERID
            , A.ACNT
            , A.NM
            , A.GNDR
            , A.BRDT
            , A.MOBLPHON
            , A.TELNO
            , A.EML
            , A.STTS_CD AS USER_STTS_CD
        FROM TB_CMM_USER A
        WHERE
            A.USERID = #{userid}
    </select>

    <!-- 전문가 상세 정보 조회 -->
    <select id="selectExpertApplyInfo" resultType="ExpertVo">
        SELECT
            A.USERID
            , A.STTS_CD
            , A.APLY_DT
            , A.APRV_DT
            , A.RJCT_DT
            , A.CNCL_DT
            , A.ENV_EDU_CAREER_MM
            , A.ENV_EDU_CAREER_YY
            , A.EXPRT_TYPE_CD
            , A.FLD_LCTR_YN
            , A.FLD_PLANNG_YN
            , A.FLD_CNSLTNG_YN
            , A.FLD_ETC_YN
            , A.FLD_ETC_CN
            , A.MOBLPHON_RLS_YN
            , A.TELNO_RLS_YN
            , A.EML_RLS_YN
            , A.QLFC_RLS_YN
            , A.HDOF_RLS_YN
            , A.CAREER_RLS_YN
            , A.ENT_LCTR_DMND_RCPTN_YN
            , A.LCTR_GDNC_RCPTN_YN
            , B.ACNT
            , B.NM
            , B.GNDR
            , B.BRDT
            , B.TELNO
            , B.MOBLPHON
            , B.EML
            , (SELECT GROUP_CONCAT(TRGT_CD SEPARATOR',') FROM TB_ASS_EXPRT_TRGT  WHERE USERID = #{userid} ) AS EXPRT_TRGT_CD/* 전문분야 대상 */
            , (SELECT GROUP_CONCAT(SBJCT_CD SEPARATOR',') FROM TB_ASS_EXPRT_SBJCT  WHERE USERID = #{userid} ) AS EXPRT_SBJCT_CD /* 전문분야 주제 */
            , (SELECT GROUP_CONCAT(RGN_CD SEPARATOR',') FROM TB_ASS_EXPRT_ACTVT_RGN  WHERE USERID = #{userid} ) AS EXPRT_ACTVT_RGN_CD /* 주요활동지역 */
            , (SELECT GROUP_CONCAT(RGN_CD SEPARATOR',') FROM TB_ASS_EXPRT_ACTVT_SCOPE  WHERE USERID = #{userid} ) AS EXPRT_ACTVT_SCOPE_CD /* 가능 활동범위 */
            , A.TOS_AGRE_YN
            , A.PRVC_CLCT_AGRE_YN
            , A.PRVC_THPTY_PVSN_AGRE_YN
            , A.REG_DT
        FROM TB_ASS_EXPRT A
        INNER JOIN TB_CMM_USER B ON A.USERID = B.USERID
        WHERE A.USERID = #{userid}
    </select>

    <!-- 전문가 상태 변경 -->
    <update id="updateExpertStatus" parameterType="ExpertVo">
        UPDATE TB_ASS_EXPRT
        SET
            STTS_CD = #{sttsCd}
            <if test="sttsCd == '134103'">
            , APRV_DT = NOW()
            </if>
            <if test="sttsCd == '134104'">
            , RJCT_DT = NOW()
            </if>
            <if test="sttsCd == '134105'">
            , CNCL_DT = NOW()
            </if>
        WHERE
            USERID = #{userid}
    </update>

    <!-- 전문가 로그 생성 -->
    <insert id="insertExpertLog" parameterType="ExpertLogVo">
        INSERT INTO TB_ASS_EXPRT_LOG (
        USERID
        , PRCS_SE_CD
        , RSN_CN
        , REG_DT
        , RGTRID
        <if test="mdfcnDmndId != null">
        , MDFCN_DMND_ID
        </if>
        ) VALUES (
        #{userid}
        , #{prcsSeCd}
        , #{rsnCn}
        , NOW()
        , #{user.userid}
        <if test="mdfcnDmndId != null">
        , #{mdfcnDmndId}
        </if>
        )
    </insert>

    <!-- 전문가 로그 조회-->
    <select id="selectExpertLogList" resultType="ExpertLogVo">
        <include refid="PaginationMapper.header"/>
        SELECT
            A.LOGID
            , A.USERID
            , A.PRCS_SE_CD
            , A.RSN_CN
            , A.REG_DT
            , A.RGTRID
            , B.NM
            , B.ACNT
        FROM TB_ASS_EXPRT_LOG A
        INNER JOIN TB_CMM_USER B
            ON A.RGTRID = B.USERID
        WHERE
            A.USERID= #{userid}
        <include refid="PaginationMapper.footer"/>
    </select>

    <!-- 전문가 후기 이력 조회 -->
    <select id="selectExpertReviewHistoryList" resultType="ExpertReviewHistoryVo">
        <include refid="PaginationMapper.header"/>
        SELECT
            A.DMNDID
            , A.EXPRTID
            , A.USERID
            , A.TTL
            , A.REG_DT
            , A.MDFCN_DT
            , A.SCR
            , A.ZIP
            , A.ADDR
            , A.ADDR_DTL
            , A.EDU_NOPE
            , A.EDU_CN
            , A.ETC_OPNN
            , B.NM
            , B.ACNT
            FROM TB_ASS_LCTR_DMND A
            INNER JOIN TB_CMM_USER B
                ON A.USERID = B.USERID
            WHERE A.EXPRTID= #{userid}
                AND DMND_STTS_CD = '139105'
                AND SCR IS NOT NULL
        <include refid="PaginationMapper.footer"/>
    </select>

    <!--평균 별점 조회-->
    <select id="getExpertReviewScrAvg" resultType="java.lang.Double">
        SELECT IFNULL(TRUNCATE(AVG(SCR),1),0)
        FROM TB_ASS_LCTR_DMND
        WHERE EXPRTID = #{userid}
    </select>

    <!-- 전문가 경력사항 조회 -->
    <select id="selectExpertCareerList"
            resultType="com.kbrainc.plum.mng.expertPoolMng.model.ExpertCareerVo">
        SELECT
            EXPRT_CAREER_ID
            , FLD_NM
            , ACTVT_BGNG_DE
            , ACTVT_END_DE
            , ACTVT_YN
            , IF(ACTVT_YN= 'Y', CONCAT(ACTVT_BGNG_DE, ' ~ 활동중' ), CONCAT(ACTVT_BGNG_DE, ' ~ ' , ACTVT_END_DE )) AS ACTVT_DE
            , ACTVT_HR
            , IDNTY_INST_NM
            , ACTVT_CN
            , IDNTY_DE
            , CRTF_FILEID
            , ARTCLASS_FILEID
            , ORDR
        FROM TB_ASS_EXPRT_CAREER
        WHERE USERID= #{userid}
        ORDER BY ORDR
    </select>

    <!-- 전문가 자격증 조회 -->
    <select id="selectExpertCrtfctList"
            resultType="com.kbrainc.plum.mng.expertPoolMng.model.ExpertCrtfctVo">
        SELECT
            EXPRT_CRTFCT_ID
            , CRTFCT_NM
            , ACQS_INST
            , ACQS_NO
            , ACQS_GRD
            , ACQS_DE
            , CRTFCT_FILEID
            , ORDR
        FROM TB_ASS_EXPRT_CRTFCT
        WHERE USERID= #{userid}
        ORDER BY ORDR
    </select>

    <!-- 전문가 재직 조회 -->
    <select id="selectExpertHdofList"
            resultType="com.kbrainc.plum.mng.expertPoolMng.model.ExpertHdofVo">
        SELECT
            EXPRT_HDOF_ID
            , HDOF_SE_CD
            , INST_NM
            , DEPT_NM
            , JBGD_NM
            , HDOF_BGNG_DE
            , HDOF_END_DE
            , HDOF_YN
            , IF(HDOF_YN= 'Y', CONCAT(HDOF_BGNG_DE, ' ~ 활동중' ), CONCAT(HDOF_BGNG_DE, ' ~ ' , HDOF_END_DE )) AS HDOF_DE
            , HDOFCRTF_FILEID
            , ORDR
        FROM TB_ASS_EXPRT_HDOF
        WHERE USERID= #{userid}
        ORDER BY ORDR
    </select>

    <!-- 정보변경 테이블 존재 여부 조회 -->
    <select id="getMdfcnDmndCount" resultType="int">
        SELECT COUNT(1)
        FROM TB_ASS_EXPRT_MDFCN_DMND
        WHERE USERID= #{userid}
    </select>

    <!-- 전문가 수정 요청 테이블 생성 -->
    <insert id="insertMdfcnExprt" useGeneratedKeys="true" keyProperty="mdfcnDmndId">
        INSERT INTO TB_ASS_EXPRT_MDFCN_DMND (
              USERID
            , EXPRT_TYPE_CD
            , FLD_LCTR_YN
            , FLD_PLANNG_YN
            , FLD_CNSLTNG_YN
            , FLD_ETC_YN
            , FLD_ETC_CN
            , MOBLPHON_RLS_YN
            , TELNO_RLS_YN
            , EML_RLS_YN
            , QLFC_RLS_YN
            , HDOF_RLS_YN
            , CAREER_RLS_YN
            , ENT_LCTR_DMND_RCPTN_YN
            , LCTR_GDNC_RCPTN_YN
            , ENV_EDU_CAREER_YY
            , ENV_EDU_CAREER_MM
            , STTS_CD /*152102*/
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        )
        VALUE (
        #{userid}
        , #{exprtTypeCd}
        , #{fldLctrYn}
        , #{fldPlanngYn}
        , #{fldCnsltngYn}
        , #{fldEtcYn}
        , #{fldEtcCn}
        , #{moblphonRlsYn}
        , #{telnoRlsYn}
        , #{emlRlsYn}
        , #{qlfcRlsYn}
        , #{hdofRlsYn}
        , #{careerRlsYn}
        , #{entLctrDmndRcptnYn}
        , #{lctrGdncRcptnYn}
        , #{envEduCareerYy}
        , #{envEduCareerMm}
        , '152102'
        , NOW()
        , #{userid}
        , NOW()
        , #{userid}
        )
    </insert>

    <!-- 전문가 수정 경력 생성 -->
    <insert id="insertMdfcnCareer">
        INSERT INTO TB_ASS_EXPRT_MDFCN_CAREER(
            MDFCN_DMND_ID
            , FLD_NM
            , ACTVT_BGNG_DE
            , ACTVT_END_DE
            , ACTVT_YN
            , ACTVT_HR
            , IDNTY_INST_NM
            , ACTVT_CN
            , IDNTY_DE
            , CRTF_FILEGRPID
            , ARTCLASS_FILEGRPID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach collection="expertCareerList" item="item" separator="," index="index">
            (
            #{mdfcnDmndId}
            , #{item.fldNm}
            , #{item.actvtBgngDe}
            , #{item.actvtEndDe}
            , #{item.actvtYn}
            , #{item.actvtHr}
            , #{item.idntyInstNm}
            , #{item.actvtCn}
            , #{item.idntyDe}
            , #{item.crtfFileid}
            , #{item.artclassFileid}
            , #{index}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <!-- 전문가 수정 자격증 생성 -->
    <insert id="insertMdfcnCrtfct">
        INSERT INTO TB_ASS_EXPRT_MDFCN_CRTFCT(
            MDFCN_DMND_ID
            , CRTFCT_NM
            , ACQS_INST
            , ACQS_NO
            , ACQS_GRD
            , ACQS_DE
            , CRTFCT_FILEGRPID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach collection="expertCrtfctList" item="item" separator="," index="index">
            (
            #{mdfcnDmndId}
            , #{item.crtfctNm}
            , #{item.acqsInst}
            , #{item.acqsNo}
            , #{item.acqsGrd}
            , #{item.acqsDe}
            , #{item.crtfctFileid}
            , #{index}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <!-- 전문가 수정 재직 생성 -->
    <insert id="insertMdfcnHdof">
        INSERT INTO TB_ASS_EXPRT_MDFCN_HDOF(
            MDFCN_DMND_ID
            , HDOF_SE_CD
            , INST_NM
            , DEPT_NM
            , JBGD_NM
            , HDOF_BGNG_DE
            , HDOF_END_DE
            , HDOF_YN
            , HDOFCRTF_FILEGRPID
            , ORDR
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach collection="expertHdofList" item="item" separator="," index="index">
            (
            #{mdfcnDmndId}
            , #{item.hdofSeCd}
            , #{item.instNm}
            , #{item.deptNm}
            , #{item.jbgdNm}
            , #{item.hdofBgngDe}
            , #{item.hdofEndDe}
            , #{item.hdofYn}
            , #{item.hdofcrtfFileid}
            , #{index}
            , NOW()
            , #{userid}
            ,  NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <!-- 전문가 수정 대상 생성 -->
    <insert id="insertMdfcnTrgtCds">
        INSERT INTO TB_ASS_EXPRT_MDFCN_TRGT(
            MDFCN_DMND_ID
            , TRGT_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach collection="exprtTrgtArr" item="trgtCd" separator=",">
            (
            #{mdfcnDmndId}
            , #{trgtCd}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <!-- 전문가 수정 주제 생성 -->
    <insert id="insertMdfcnSbjctCds">
        INSERT INTO TB_ASS_EXPRT_MDFCN_SBJCT (
            MDFCN_DMND_ID
            , SBJCT_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach collection="exprtSbjctArr" item="sbjctCd" separator=",">
            (
            #{mdfcnDmndId}
            , #{sbjctCd}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <!-- 전문가 수정 지역 생성 -->
    <insert id="insertMdfcnActvtRgnCds">
        INSERT INTO TB_ASS_EXPRT_MDFCN_ACTVT_RGN(
            MDFCN_DMND_ID
            , RGN_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach collection="exprtActvtRgnArr" item="actvtRgnCd" separator=",">
            (
            #{mdfcnDmndId}
            , #{actvtRgnCd}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>

    <!-- 전문가 수정 범위 생성 -->
    <insert id="insertMdfcnActvtScopeCds">
        INSERT INTO TB_ASS_EXPRT_MDFCN_ACTVT_SCOPE
        (
            MDFCN_DMND_ID
            , RGN_CD
            , MDFCN_DT
            , MDFRID
            , REG_DT
            , RGTRID
        ) VALUES
        <foreach collection="exprtActvtScopeArr" item="actvtScopeCd" separator=",">
            (
            #{mdfcnDmndId}
            , #{actvtScopeCd}
            , NOW()
            , #{userid}
            , NOW()
            , #{userid}
            )
        </foreach>
    </insert>
</mapper>