spring.liquibase.enabled=false
project.package=com.kbrainc.plum

#개인회원 역할아이디
system.person.roleid=2
#기업회원 역할아이디
system.company.roleid=3

#server
server.http.port=8000
server.port=8000

#session timeout(redis session 사용하지 않는경우 적용됨)
server.servlet.session.timeout=120m
server.servlet.session.cookie.domain=keep.go.kr
#X-Forwarded-* 헤더 사용여부
server.use-forward-headers=true

#application settings
#app.timezone
app.timezone=Asia/Seoul
#app중복로그인 사용여부(단일서버 또는 세션서버사용 일때만 사용가능)
app.multilogin.isuse=false
#app.ssl사용여부(외부웹서버SSL사용시 false로 설정)
app.ssl.isuse=false

#database
database.dialect=mariadb

#sqlserver
#spring.datasource.url=jdbc:log4jdbc:sqlserver://xxxx.com;databaseName=TEST
#spring.datasource.username=XXXX
#spring.datasource.password=XXXX
#spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

#mariadb
#spring.datasource.url=
#spring.datasource.username=
#spring.datasource.password=
#spring.datasource.driverClassName=

#was ipport list(콤마 ','로 구분)
#admin.was.ipport=

#initial data
#spring.datasource.schema=classpath:schema-${database.dialect}.sql
#spring.datasource.initialization-mode=always

#redis session 사용 // REDIS_SESSION
#spring.redis.host=localhost
#spring.redis.port=6379
#spring.redis.password=

## File Uploads - MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=100MB
# Max Request Size
spring.servlet.multipart.max-request-size=115MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=D://Context/keep/uploads

## Static Resources
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:///D:/Context/keep/static

# crypto
crypto.key=ILoveKeep2021!#%
crypto.password.algorithm=SHA-256
crypto.hashed.password=G4dEupS+YfQrmDtiEO0yNwlJWwKsM2A3orQDyD13Oys=

#mail server
mail.server.host=http://15.164.202.112:8087

#sms server AWS:15.164.202.112
sms.server.host=http://15.164.202.112:8087
sms.callback=15881581

#msg server
msg.server.host=http://192.168.5.103:8088

#quartz (사용시 모든 주석 해제, 미사용시 spring.quartz.auto-startup=false, 나머지는 주석처리)
spring.quartz.auto-startup=false
#spring.quartz.job-store-type=jdbc
#spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#spring.quartz.properties.org.quartz.jobStore.isClustered=true
#spring.quartz.properties.org.quartz.threadPool.threadCount=20

#UUID Generation(MAC[ex:00:00:F0:79:19:5B] or IP[127.0.0.1] Address or empty value)
uuid.gen.address=

#FCM server key
fcm.server.key=

### mail settings ########
#구글의 경우 계정설정에서 2단계인증 활성화후 메일선택후 App passwords 발급후 사용 
mail.smtp.host=smtp.gmail.com
mail.smtp.port=587
mail.username=
mail.password=
mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.fromName=PlumFramework
mail.charSet=UTF-8
